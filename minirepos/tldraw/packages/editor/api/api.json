{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.35.4",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@tldraw/editor!",
  "docComment": "",
  "name": "@tldraw/editor",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@tldraw/editor!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!angleDelta:function(1)",
          "docComment": "/**\n * Get the short distance between two angles.\n *\n * @param a0 - The first angle.\n *\n * @param a1 - The second angle.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function angleDelta(a0: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", a1: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a0",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "angleDelta"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!approximately:function(1)",
          "docComment": "/**\n * Whether two numbers numbers a and b are approximately equal.\n *\n * @param a - The first point.\n *\n * @param b - The second point.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function approximately(a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", precision?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "precision",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "approximately"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Arc2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Arc2d extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry2d",
              "canonicalReference": "@tldraw/editor!Geometry2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Arc2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Arc2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#_center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_center: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_center",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Arc2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Arc2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed' | 'isFilled'> & {\n        center: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        radius: number;\n        start: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        end: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        sweepFlag: number;\n        largeArcFlag: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 11
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#angleEnd:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "angleEnd: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "angleEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#angleStart:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "angleStart: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "angleStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Arc2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Arc2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", _zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "length: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#measure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "measure: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "measure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Arc2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#radius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "radius: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "radius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Arc2d#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!areAnglesCompatible:function(1)",
          "docComment": "/**\n * Checks whether two angles are approximately at right-angles or parallel to each other\n *\n * @param a - Angle a (radians)\n *\n * @param b - Angle b (radians)\n *\n * @returns True iff the angles are approximately at right-angles or parallel to each other\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function areAnglesCompatible(a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "areAnglesCompatible"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!average:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function average(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", B: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "B",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "average"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!BaseBoxShapeTool:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BaseBoxShapeTool extends "
            },
            {
              "kind": "Reference",
              "text": "StateNode",
              "canonicalReference": "@tldraw/editor!StateNode:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/tools/BaseBoxShapeTool/BaseBoxShapeTool.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "BaseBoxShapeTool",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!BaseBoxShapeTool.children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static children: "
                },
                {
                  "kind": "Content",
                  "text": "() => (typeof "
                },
                {
                  "kind": "Reference",
                  "text": "Idle",
                  "canonicalReference": "@tldraw/editor!~Idle:class"
                },
                {
                  "kind": "Content",
                  "text": " | typeof "
                },
                {
                  "kind": "Reference",
                  "text": "Pointing",
                  "canonicalReference": "@tldraw/editor!~Pointing:class"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!BaseBoxShapeTool.id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!BaseBoxShapeTool.initial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static initial: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!BaseBoxShapeTool#onCreate:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCreate?: "
                },
                {
                  "kind": "Content",
                  "text": "(_shape: null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ") => null | void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCreate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!BaseBoxShapeTool#shapeType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract shapeType: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shapeType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!BaseBoxShapeUtil:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class BaseBoxShapeUtil<Shape extends "
            },
            {
              "kind": "Reference",
              "text": "TLBaseBoxShape",
              "canonicalReference": "@tldraw/editor!TLBaseBoxShape:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ShapeUtil",
              "canonicalReference": "@tldraw/editor!ShapeUtil:class"
            },
            {
              "kind": "Content",
              "text": "<Shape>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/BaseBoxShapeUtil.tsx",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Shape",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "BaseBoxShapeUtil",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!BaseBoxShapeUtil#getGeometry:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGeometry(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2d",
                  "canonicalReference": "@tldraw/editor!Geometry2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getGeometry"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!BaseBoxShapeUtil#onResize:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onResize: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnResizeHandler",
                  "canonicalReference": "@tldraw/editor!TLOnResizeHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onResize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Box2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Box2d "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Box2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Box2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Box2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", h?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "h",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#aspectRatio:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get aspectRatio(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "aspectRatio",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get center(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset center(v: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "center",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#collides:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "collides(B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "collides"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d.Collides:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Collides: "
                },
                {
                  "kind": "Content",
                  "text": "(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Collides",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d.Common:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Common: "
                },
                {
                  "kind": "Content",
                  "text": "(boxes: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]) => "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Common",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#contains:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contains(B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "contains"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d.Contains:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Contains: "
                },
                {
                  "kind": "Content",
                  "text": "(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Contains",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#containsPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "containsPoint(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", margin?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "margin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "containsPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d.ContainsPoint:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ContainsPoint: "
                },
                {
                  "kind": "Content",
                  "text": "(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", margin?: number) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ContainsPoint",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#corners:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get corners(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "corners",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#equals:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Box2dModel",
                  "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d.Equals:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Equals(a: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Box2dModel",
                  "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Box2dModel",
                  "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#expand:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expand(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "expand"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d.Expand:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Expand(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Expand"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#expandBy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "expandBy(n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "expandBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d.ExpandBy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ExpandBy(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ExpandBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d.From:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static From(box: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2dModel",
                  "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "box",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "From"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d.FromPoints:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static FromPoints(points: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "points",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "FromPoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#getHandlePoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHandlePoint(handle: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionCorner",
                  "canonicalReference": "@tldraw/editor!SelectionCorner:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionEdge",
                  "canonicalReference": "@tldraw/editor!SelectionEdge:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getHandlePoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#height:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get height(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset height(n: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "height",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#includes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "includes(B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "includes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d.Includes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Includes: "
                },
                {
                  "kind": "Content",
                  "text": "(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Includes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#maxX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get maxX(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#maxY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get maxY(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "maxY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#midX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get midX(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "midX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#midY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get midY(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "midY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#minX:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get minX(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset minX(n: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minX",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#minY:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get minY(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset minY(n: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "minY",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#point:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get point(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset point(val: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "point",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#resize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resize(handle: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionCorner",
                  "canonicalReference": "@tldraw/editor!SelectionCorner:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionEdge",
                  "canonicalReference": "@tldraw/editor!SelectionEdge:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", dx: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", dy: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "handle",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dx",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dy",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "resize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d.Resize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Resize(box: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", handle: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionCorner",
                  "canonicalReference": "@tldraw/editor!SelectionCorner:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionEdge",
                  "canonicalReference": "@tldraw/editor!SelectionEdge:type"
                },
                {
                  "kind": "Content",
                  "text": " | string"
                },
                {
                  "kind": "Content",
                  "text": ", dx: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", dy: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", isAspectRatioLocked?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        box: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        scaleX: number;\n        scaleY: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "box",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "handle",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dx",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "dy",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "isAspectRatioLocked",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Resize"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#scale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scale(n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#set:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(x?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", w?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", h?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "w",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "h",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#setTo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTo(B: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#sides:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get sides(): "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<["
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sides",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d.Sides:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Sides: "
                },
                {
                  "kind": "Content",
                  "text": "(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", inset?: number) => "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Sides",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#size:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#snapPoints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get snapPoints(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snapPoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#snapToGrid:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "snapToGrid(size: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "size",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "snapToGrid"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#toFixed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toFixed(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toFixed"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#toJson:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJson(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2dModel",
                  "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJson"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#translate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translate(delta: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "delta",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#union:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "union(box: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2dModel",
                  "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "box",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "union"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#w:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#width:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get width(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset width(n: number);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Box2d#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d#zeroFix:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zeroFix(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zeroFix"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Box2d.ZeroFix:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ZeroFix(other: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Box2dModel",
                  "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ZeroFix"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!BoxLike:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type BoxLike = "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Box2dModel",
              "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "releaseTag": "Public",
          "name": "BoxLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!canonicalizeRotation:function(1)",
          "docComment": "/**\n * @param a - Any angle in radians\n *\n * @returns A number between 0 and 2 * PI\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function canonicalizeRotation(a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "canonicalizeRotation"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!Canvas:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function Canvas({ className }: "
            },
            {
              "kind": "Content",
              "text": "{\n    className?: string;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/.tsbuild-api/lib/components/Canvas.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ className }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "Canvas"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Circle2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Circle2d extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry2d",
              "canonicalReference": "@tldraw/editor!Geometry2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Circle2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Circle2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Circle2d#_center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_center: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_center",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Circle2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Circle2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        x?: number;\n        y?: number;\n        radius: number;\n        isFilled: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Circle2d#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        x?: number;\n        y?: number;\n        radius: number;\n        isFilled: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Circle2d#getBounds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Circle2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Circle2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", _zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Circle2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Circle2d#radius:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "radius: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "radius",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Circle2d#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Circle2d#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!clamp:function(1)",
          "docComment": "/**\n * Clamp a value into a range.\n *\n * @param n - The number to clamp.\n *\n * @param min - The minimum value.\n *\n * @example\n * ```ts\n * const A = clamp(0, 1) // 1\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function clamp(n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", min: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "min",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "clamp"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!clamp:function(2)",
          "docComment": "/**\n * Clamp a value into a range.\n *\n * @param n - The number to clamp.\n *\n * @param min - The minimum value.\n *\n * @param max - The maximum value.\n *\n * @example\n * ```ts\n * const A = clamp(0, 1, 10) // 1\n * const B = clamp(11, 1, 10) // 10\n * const C = clamp(5, 1, 10) // 5\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function clamp(n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", min: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", max: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "min",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "max",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "clamp"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!clampRadians:function(1)",
          "docComment": "/**\n * Clamp radians within 0 and 2PI\n *\n * @param r - The radian value.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function clampRadians(r: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "r",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "clampRadians"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!clockwiseAngleDist:function(1)",
          "docComment": "/**\n * Get the clockwise angle distance between two angles.\n *\n * @param a0 - The first angle.\n *\n * @param a1 - The second angle.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function clockwiseAngleDist(a0: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", a1: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a0",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "clockwiseAngleDist"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!coreShapes:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "coreShapes: "
            },
            {
              "kind": "Content",
              "text": "readonly [typeof "
            },
            {
              "kind": "Reference",
              "text": "GroupShapeUtil",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil:class"
            },
            {
              "kind": "Content",
              "text": "]"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/defaultShapes.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "coreShapes",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!createSessionStateSnapshotSignal:function(1)",
          "docComment": "/**\n * Creates a signal of the instance state for a given store.\n *\n * @param store - The store to create the instance state snapshot signal for\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createSessionStateSnapshotSignal(store: "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "@tldraw/state!Signal:interface"
            },
            {
              "kind": "Content",
              "text": "<null | "
            },
            {
              "kind": "Reference",
              "text": "TLSessionStateSnapshot",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLSessionStateSnapshot.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "store",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createSessionStateSnapshotSignal"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!createTLStore:function(1)",
          "docComment": "/**\n * A helper for creating a TLStore. Custom shapes cannot override default shapes.\n *\n * @param opts - Options for creating the store.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createTLStore({ initialData, defaultName, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "TLStoreOptions",
              "canonicalReference": "@tldraw/editor!TLStoreOptions:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/createTLStore.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ initialData, defaultName, ...rest }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "createTLStore"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!createTLUser:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function createTLUser(opts?: "
            },
            {
              "kind": "Content",
              "text": "{\n    derivePresenceState?: ((store: "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "@tldraw/state!Signal:interface"
            },
            {
              "kind": "Content",
              "text": "<null | "
            },
            {
              "kind": "Reference",
              "text": "TLInstancePresence",
              "canonicalReference": "@tldraw/tlschema!TLInstancePresence:interface"
            },
            {
              "kind": "Content",
              "text": ">) | undefined;\n    userPreferences?: "
            },
            {
              "kind": "Reference",
              "text": "Signal",
              "canonicalReference": "@tldraw/state!Signal:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLUserPreferences",
              "canonicalReference": "@tldraw/editor!TLUserPreferences:interface"
            },
            {
              "kind": "Content",
              "text": ", unknown> | undefined;\n    setUserPreferences?: ((userPreferences: "
            },
            {
              "kind": "Reference",
              "text": "TLUserPreferences",
              "canonicalReference": "@tldraw/editor!TLUserPreferences:interface"
            },
            {
              "kind": "Content",
              "text": ") => void) | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "TLUser",
              "canonicalReference": "@tldraw/editor!~TLUser:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/createTLUser.ts",
          "returnTypeTokenRange": {
            "startIndex": 15,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "opts",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 14
              },
              "isOptional": true
            }
          ],
          "name": "createTLUser"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!CubicBezier2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CubicBezier2d extends "
            },
            {
              "kind": "Reference",
              "text": "Polyline2d",
              "canonicalReference": "@tldraw/editor!Polyline2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/CubicBezier2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CubicBezier2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!CubicBezier2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CubicBezier2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed' | 'isFilled'> & {\n        start: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cp1: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cp2: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        end: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicBezier2d#a:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "a: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "a",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicBezier2d#b:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "b: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "b",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicBezier2d#c:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "c: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "c",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicBezier2d#d:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "d: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "d",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!CubicBezier2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!CubicBezier2d#midPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "midPoint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "midPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!CubicBezier2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!CubicSpline2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class CubicSpline2d extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry2d",
              "canonicalReference": "@tldraw/editor!Geometry2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/CubicSpline2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CubicSpline2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#_length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_length?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#_segments:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_segments?: "
                },
                {
                  "kind": "Reference",
                  "text": "CubicBezier2d",
                  "canonicalReference": "@tldraw/editor!CubicBezier2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_segments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!CubicSpline2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CubicSpline2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed' | 'isFilled'> & {\n        points: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get length(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#points:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "points: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "points",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!CubicSpline2d#segments:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get segments(): "
                },
                {
                  "kind": "Reference",
                  "text": "CubicBezier2d",
                  "canonicalReference": "@tldraw/editor!CubicBezier2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "segments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!dataUrlToFile:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function dataUrlToFile(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", filename: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", mimeType: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/assets.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "filename",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "mimeType",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "dataUrlToFile"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!DefaultBackground:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function DefaultBackground(): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultBackground.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "DefaultBackground"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultBrush:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultBrush: "
            },
            {
              "kind": "Reference",
              "text": "TLBrushComponent",
              "canonicalReference": "@tldraw/editor!TLBrushComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultBrush.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultBrush",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultCollaboratorHint:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultCollaboratorHint: "
            },
            {
              "kind": "Reference",
              "text": "TLCollaboratorHintComponent",
              "canonicalReference": "@tldraw/editor!TLCollaboratorHintComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultCollaboratorHint.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultCollaboratorHint",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultCursor:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultCursor: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    className?: string | undefined;\n    point: null | "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    zoom: number;\n    color?: string | undefined;\n    name: null | string;\n    chatMessage: string;\n}>"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultCursor.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultCursor",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultErrorFallback:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultErrorFallback: "
            },
            {
              "kind": "Reference",
              "text": "TLErrorFallbackComponent",
              "canonicalReference": "@tldraw/editor!~TLErrorFallbackComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultErrorFallback.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultErrorFallback",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultGrid:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultGrid: "
            },
            {
              "kind": "Reference",
              "text": "TLGridComponent",
              "canonicalReference": "@tldraw/editor!TLGridComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultGrid.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultGrid",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultHandle:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultHandle: "
            },
            {
              "kind": "Reference",
              "text": "TLHandleComponent",
              "canonicalReference": "@tldraw/editor!TLHandleComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultHandle.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultHandle",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultHandles:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultHandles: "
            },
            {
              "kind": "Reference",
              "text": "TLHandlesComponent",
              "canonicalReference": "@tldraw/editor!TLHandlesComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultHandles.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultHandles",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultHoveredShapeIndicator:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultHoveredShapeIndicator: "
            },
            {
              "kind": "Reference",
              "text": "TLHoveredShapeIndicatorComponent",
              "canonicalReference": "@tldraw/editor!TLHoveredShapeIndicatorComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultHoveredShapeIndicator.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultHoveredShapeIndicator",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultScribble:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultScribble: "
            },
            {
              "kind": "Reference",
              "text": "TLScribbleComponent",
              "canonicalReference": "@tldraw/editor!TLScribbleComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultScribble.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultScribble",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultSelectionBackground:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultSelectionBackground: "
            },
            {
              "kind": "Reference",
              "text": "TLSelectionBackgroundComponent",
              "canonicalReference": "@tldraw/editor!TLSelectionBackgroundComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSelectionBackground.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultSelectionBackground",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultSelectionForeground:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultSelectionForeground: "
            },
            {
              "kind": "Reference",
              "text": "TLSelectionForegroundComponent",
              "canonicalReference": "@tldraw/editor!TLSelectionForegroundComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSelectionForeground.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultSelectionForeground",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultSnapLine:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultSnapLine: "
            },
            {
              "kind": "Reference",
              "text": "TLSnapLineComponent",
              "canonicalReference": "@tldraw/editor!TLSnapLineComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSnapLine.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultSnapLine",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultSpinner:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultSpinner: "
            },
            {
              "kind": "Reference",
              "text": "TLSpinnerComponent",
              "canonicalReference": "@tldraw/editor!TLSpinnerComponent:type"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSpinner.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultSpinner",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!DefaultSvgDefs:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "DefaultSvgDefs: "
            },
            {
              "kind": "Content",
              "text": "() => null"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSvgDefs.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultSvgDefs",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!defaultUserPreferences:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "defaultUserPreferences: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    name: \"New User\";\n    locale: \"ar\" | \"ca\" | \"da\" | \"de\" | \"en\" | \"es\" | \"fa\" | \"fi\" | \"fr\" | \"gl\" | \"he\" | \"hi-in\" | \"hu\" | \"it\" | \"ja\" | \"ko-kr\" | \"ku\" | \"my\" | \"ne\" | \"no\" | \"pl\" | \"pt-br\" | \"pt-pt\" | \"ro\" | \"ru\" | \"sv\" | \"te\" | \"th\" | \"tr\" | \"uk\" | \"vi\" | \"zh-cn\" | \"zh-tw\";\n    color: \"#02B1CC\" | \"#11B3A3\" | \"#39B178\" | \"#55B467\" | \"#7B66DC\" | \"#9D5BD2\" | \"#BD54C6\" | \"#E34BA9\" | \"#EC5E41\" | \"#F04F88\" | \"#F2555A\" | \"#FF802B\";\n    isDarkMode: false;\n    animationSpeed: 0 | 1;\n    isSnapMode: false;\n}>"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLUserPreferences.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "defaultUserPreferences",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!degreesToRadians:function(1)",
          "docComment": "/**\n * Convert degrees to radians.\n *\n * @param d - The degree in degrees.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function degreesToRadians(d: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "degreesToRadians"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!EASINGS:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EASINGS: "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly linear: (t: number) => number;\n    readonly easeInQuad: (t: number) => number;\n    readonly easeOutQuad: (t: number) => number;\n    readonly easeInOutQuad: (t: number) => number;\n    readonly easeInCubic: (t: number) => number;\n    readonly easeOutCubic: (t: number) => number;\n    readonly easeInOutCubic: (t: number) => number;\n    readonly easeInQuart: (t: number) => number;\n    readonly easeOutQuart: (t: number) => number;\n    readonly easeInOutQuart: (t: number) => number;\n    readonly easeInQuint: (t: number) => number;\n    readonly easeOutQuint: (t: number) => number;\n    readonly easeInOutQuint: (t: number) => number;\n    readonly easeInSine: (t: number) => number;\n    readonly easeOutSine: (t: number) => number;\n    readonly easeInOutSine: (t: number) => number;\n    readonly easeInExpo: (t: number) => number;\n    readonly easeOutExpo: (t: number) => number;\n    readonly easeInOutExpo: (t: number) => number;\n}"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/easings.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EASINGS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Edge2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Edge2d extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry2d",
              "canonicalReference": "@tldraw/editor!Geometry2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Edge2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Edge2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Edge2d#_length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_length?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Edge2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Edge2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        start: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        end: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        isSnappable?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Edge2d#d:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "d: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "d",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Edge2d#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "end: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Edge2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Edge2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", _zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "_zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Edge2d#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get length(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Edge2d#midPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "midPoint(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "midPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Edge2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Edge2d#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "start: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Edge2d#u:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "u: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "u",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Edge2d#ul:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ul: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ul",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Editor:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Editor extends "
            },
            {
              "kind": "Reference",
              "text": "EventEmitter",
              "canonicalReference": "eventemitter3!EventEmitter.EventEmitter"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLEventMap",
              "canonicalReference": "@tldraw/editor!TLEventMap:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/Editor.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Editor",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Editor:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Editor` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ store, user, shapeUtils, tools, getContainer, initialState, inferDarkMode, }: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEditorOptions",
                  "canonicalReference": "@tldraw/editor!TLEditorOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ store, user, shapeUtils, tools, getContainer, initialState, inferDarkMode, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#addOpenMenu:member(1)",
              "docComment": "/**\n * Add an open menu.\n *\n * @example\n * ```ts\n * editor.addOpenMenu('menu-id')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addOpenMenu(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addOpenMenu"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#alignShapes:member(1)",
              "docComment": "/**\n * Align shape positions.\n *\n * @param shapes - The shapes (or shape ids) to align.\n *\n * @param operation - The align operation to apply.\n *\n * @example\n * ```ts\n * editor.alignShapes([box1, box2], 'left')\n * editor.alignShapes(editor.getSelectedShapeIds(), 'left')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "alignShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", operation: "
                },
                {
                  "kind": "Content",
                  "text": "'bottom' | 'center-horizontal' | 'center-vertical' | 'left' | 'right' | 'top'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "operation",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "alignShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#animateShape:member(1)",
              "docComment": "/**\n * Animate a shape.\n *\n * @param partial - The shape partial to update.\n *\n * @param options - The animation's options.\n *\n * @example\n * ```ts\n * editor.animateShape({ id: 'box1', type: 'box', x: 100, y: 100 })\n * editor.animateShape({ id: 'box1', type: 'box', x: 100, y: 100 }, { duration: 100, ease: t => t*t })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "animateShape(partial: "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapePartial",
                  "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", animationOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "animationOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "animateShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#animateShapes:member(1)",
              "docComment": "/**\n * Animate shapes.\n *\n * @param partials - The shape partials to update.\n *\n * @param options - The animation's options.\n *\n * @example\n * ```ts\n * editor.animateShapes([{ id: 'box1', type: 'box', x: 100, y: 100 }])\n * editor.animateShapes([{ id: 'box1', type: 'box', x: 100, y: 100 }], { duration: 100, ease: t => t*t })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "animateShapes(partials: "
                },
                {
                  "kind": "Content",
                  "text": "(null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapePartial",
                  "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined)[]"
                },
                {
                  "kind": "Content",
                  "text": ", animationOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        duration: number;\n        easing: (t: number) => number;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partials",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "animationOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "animateShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#animateToShape:member(1)",
              "docComment": "/**\n * Animate the camera to a shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "animateToShape(shapeId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "animateToShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#animateToUser:member(1)",
              "docComment": "/**\n * Animate the camera to a user's cursor position. This also briefly show the user's cursor if it's not currently visible.\n *\n * @param userId - The id of the user to aniamte to.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "animateToUser(userId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "userId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "animateToUser"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#assets:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getAssets` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get assets(): "
                },
                {
                  "kind": "Content",
                  "text": "(import(\"@tldraw/tlschema\")."
                },
                {
                  "kind": "Reference",
                  "text": "TLBookmarkAsset",
                  "canonicalReference": "@tldraw/tlschema!TLBookmarkAsset:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLImageAsset",
                  "canonicalReference": "@tldraw/tlschema!TLImageAsset:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLVideoAsset",
                  "canonicalReference": "@tldraw/tlschema!TLVideoAsset:type"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "assets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#bail:member(1)",
              "docComment": "/**\n * Clear all marks in the undo stack back to the next mark.\n *\n * @example\n * ```ts\n * editor.bail()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bail(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "bail"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#bailToMark:member(1)",
              "docComment": "/**\n * Clear all marks in the undo stack back to the mark with the provided mark id.\n *\n * @example\n * ```ts\n * editor.bailToMark('dragging')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bailToMark(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bailToMark"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#batch:member(1)",
              "docComment": "/**\n * Run a function in a batch, which will be undone/redone as a single action.\n *\n * @example\n * ```ts\n * editor.batch(() => {\n * \teditor.selectAll()\n * \teditor.deleteShapes(editor.getSelectedShapeIds())\n * \teditor.createShapes(myShapes)\n * \teditor.selectNone()\n * })\n *\n * editor.undo() // will undo all of the above\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "batch(fn: "
                },
                {
                  "kind": "Content",
                  "text": "() => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "batch"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#bringForward:member(1)",
              "docComment": "/**\n * Bring shapes forward in the page's object list.\n *\n * @param shapes - The shapes (or shape ids) to move.\n *\n * @example\n * ```ts\n * editor.bringForward(['id1', 'id2'])\n * editor.bringForward(box1,  box2)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bringForward(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bringForward"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#bringToFront:member(1)",
              "docComment": "/**\n * Bring shapes to the front of the page's object list.\n *\n * @param shapes - The shapes (or shape ids) to move.\n *\n * @example\n * ```ts\n * editor.bringToFront(['id1', 'id2'])\n * editor.bringToFront([box1, box2])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bringToFront(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bringToFront"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#cameraState:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCameraState` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get cameraState(): "
                },
                {
                  "kind": "Content",
                  "text": "\"idle\" | \"moving\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cameraState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#cancel:member(1)",
              "docComment": "/**\n * Dispatch a cancel event.\n *\n * @example\n * ```ts\n * editor.cancel()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancel(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "cancel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#cancelDoubleClick:member(1)",
              "docComment": "/**\n * Prevent a double click event from firing the next time the user clicks\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cancelDoubleClick(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "cancelDoubleClick"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#canRedo:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCanRedo` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get canRedo(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canRedo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#canUndo:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCanUndo` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get canUndo(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canUndo",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#centerOnPoint:member(1)",
              "docComment": "/**\n * Center the camera on a point (in the current page space).\n *\n * @param point - The point in the current page space to center on.\n *\n * @param animation - The options for an animation.\n *\n * @example\n * ```ts\n * editor.centerOnPoint({ x: 100, y: 100 })\n * editor.centerOnPoint({ x: 100, y: 100 }, { duration: 200 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "centerOnPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "centerOnPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#complete:member(1)",
              "docComment": "/**\n * Dispatch a complete event.\n *\n * @example\n * ```ts\n * editor.complete()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "complete(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "complete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#createAssets:member(1)",
              "docComment": "/**\n * Create one or more assets.\n *\n * @param assets - The assets to create.\n *\n * @example\n * ```ts\n * editor.createAssets([...myAssets])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createAssets(assets: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAsset",
                  "canonicalReference": "@tldraw/tlschema!TLAsset:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "assets",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createAssets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#createPage:member(1)",
              "docComment": "/**\n * Create a page.\n *\n * @param page - The page (or page partial) to create.\n *\n * @example\n * ```ts\n * editor.createPage(myPage)\n * editor.createPage({ name: 'Page 2' })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createPage(page: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#createShape:member(1)",
              "docComment": "/**\n * Create a single shape.\n *\n * @param shape - The shape (or shape partial) to create.\n *\n * @example\n * ```ts\n * editor.createShape(myShape)\n * editor.createShape({ id: 'box1', type: 'text', props: { text: \"ok\" } })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createShape<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalKeys",
                  "canonicalReference": "@tldraw/editor!~OptionalKeys:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShapePartial",
                  "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>, 'id'>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#createShapes:member(1)",
              "docComment": "/**\n * Create shapes.\n *\n * @param shapes - The shapes (or shape partials) to create.\n *\n * @param select - Whether to select the created shapes. Defaults to false.\n *\n * @example\n * ```ts\n * editor.createShapes([myShape])\n * editor.createShapes([{ id: 'box1', type: 'text', props: { text: \"ok\" } }])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createShapes<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "OptionalKeys",
                  "canonicalReference": "@tldraw/editor!~OptionalKeys:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShapePartial",
                  "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>, 'id'>[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#croppingShapeId:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCroppingShapeId` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get croppingShapeId(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "croppingShapeId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPage:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getCurrentPage` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPage(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPage",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPageBounds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentPageBounds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPageId:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentPageId` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPageId(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPageRenderingShapesSorted:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentPageRenderingShapesSorted` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPageRenderingShapesSorted(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageRenderingShapesSorted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPageShapeIds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentPageShapeIds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPageShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageShapeIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPageShapes:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentPageShapes` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPageShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPageShapesSorted:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentPageShapesSorted` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPageShapesSorted(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageShapesSorted",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentPageState:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentPageState` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentPageState(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLInstancePageState",
                  "canonicalReference": "@tldraw/tlschema!TLInstancePageState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentTool:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentTool` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentTool(): "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentTool",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#currentToolId:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getCurrentToolId` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentToolId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentToolId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deleteAssets:member(1)",
              "docComment": "/**\n * Delete one or more assets.\n *\n * @param ids - The assets to delete.\n *\n * @example\n * ```ts\n * editor.deleteAssets(['asset1', 'asset2'])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteAssets(assets: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAsset",
                  "canonicalReference": "@tldraw/tlschema!TLAsset:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLAssetId",
                  "canonicalReference": "@tldraw/tlschema!TLAssetId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "assets",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deleteAssets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deleteOpenMenu:member(1)",
              "docComment": "/**\n * Delete an open menu.\n *\n * @example\n * ```ts\n * editor.deleteOpenMenu('menu-id')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteOpenMenu(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deleteOpenMenu"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deletePage:member(1)",
              "docComment": "/**\n * Delete a page.\n *\n * @param id - The id of the page to delete.\n *\n * @example\n * ```ts\n * editor.deletePage('page1')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deletePage(page: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deletePage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deleteShape:member(1)",
              "docComment": "/**\n * Delete a shape.\n *\n * @param id - The id of the shape to delete.\n *\n * @example\n * ```ts\n * editor.deleteShapes(['box1', 'box2'])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteShape(id: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deleteShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deleteShape:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteShape(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deleteShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deleteShapes:member(1)",
              "docComment": "/**\n * Delete shapes.\n *\n * @param ids - The ids of the shapes to delete.\n *\n * @example\n * ```ts\n * editor.deleteShapes(['box1', 'box2'])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteShapes(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deleteShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deleteShapes:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deleteShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deleteShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#deselect:member(1)",
              "docComment": "/**\n * Remove a shape from the existing set of selected shapes.\n *\n * @example\n * ```ts\n * editor.deselect(shape.id)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "deselect(...shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "deselect"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#dispatch:member",
              "docComment": "/**\n * Dispatch an event to the editor.\n *\n * @param info - The event info.\n *\n * @example\n * ```ts\n * editor.dispatch(myPointerEvent)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispatch: "
                },
                {
                  "kind": "Content",
                  "text": "(info: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventInfo",
                  "canonicalReference": "@tldraw/editor!TLEventInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ") => this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dispatch",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#disposables:member",
              "docComment": "/**\n * A set of functions to call when the app is disposed.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly disposables: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<() => void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "disposables",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#dispose:member(1)",
              "docComment": "/**\n * Dispose the editor.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dispose(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "dispose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#distributeShapes:member(1)",
              "docComment": "/**\n * Distribute shape positions.\n *\n * @param shapes - The shapes (or shape ids) to distribute.\n *\n * @param operation - Whether to distribute shapes horizontally or vertically.\n *\n * @example\n * ```ts\n * editor.distributeShapes([box1, box2], 'horizontal')\n * editor.distributeShapes(editor.getSelectedShapeIds(), 'horizontal')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distributeShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", operation: "
                },
                {
                  "kind": "Content",
                  "text": "'horizontal' | 'vertical'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "operation",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distributeShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#documentSettings:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getDocumentSettings` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get documentSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLDocument",
                  "canonicalReference": "@tldraw/tlschema!TLDocument:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "documentSettings",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#duplicatePage:member(1)",
              "docComment": "/**\n * Duplicate a page.\n *\n * @param id - The id of the page to duplicate. Defaults to the current page.\n *\n * @param createId - The id of the new page. Defaults to a new id.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duplicatePage(page: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", createId?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "createId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "duplicatePage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#duplicateShapes:member(1)",
              "docComment": "/**\n * Duplicate shapes.\n *\n * @param shapes - The shapes (or shape ids) to duplicate.\n *\n * @param offset - The offset (in pixels) to apply to the duplicated shapes.\n *\n * @example\n * ```ts\n * editor.duplicateShapes(['box1', 'box2'], { x: 8, y: 8 })\n * editor.duplicateShapes(editor.getSelectedShapes(), { x: 8, y: 8 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "duplicateShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", offset?: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "duplicateShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#editingShape:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getEditingShape` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get editingShape(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "editingShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#editingShapeId:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getEditingShapeId` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get editingShapeId(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "editingShapeId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#environment:member",
              "docComment": "/**\n * A manager for the editor's environment.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly environment: "
                },
                {
                  "kind": "Reference",
                  "text": "EnvironmentManager",
                  "canonicalReference": "@tldraw/editor!~EnvironmentManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "environment",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#erasingShapeIds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getErasingShapeIds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get erasingShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "erasingShapeIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#erasingShapes:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getErasingShapes` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get erasingShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "erasingShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#findCommonAncestor:member(1)",
              "docComment": "/**\n * Get the common ancestor of two or more shapes that matches a predicate.\n *\n * @param shapes - The shapes (or shape ids) to check.\n *\n * @param predicate - The predicate to match.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findCommonAncestor(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", predicate?: "
                },
                {
                  "kind": "Content",
                  "text": "(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findCommonAncestor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#findShapeAncestor:member(1)",
              "docComment": "/**\n * Find the first ancestor matching the given predicate\n *\n * @param shape - The shape to check the ancestors for.\n *\n * @example\n * ```ts\n * const ancestor = editor.findShapeAncestor(myShape)\n * const ancestor = editor.findShapeAncestor(myShape.id)\n * const ancestor = editor.findShapeAncestor(myShape.id, (shape) => shape.type === 'frame')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findShapeAncestor(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", predicate: "
                },
                {
                  "kind": "Content",
                  "text": "(parent: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "predicate",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "findShapeAncestor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#flipShapes:member(1)",
              "docComment": "/**\n * Flip shape positions.\n *\n * @param shapes - The ids of the shapes to flip.\n *\n * @param operation - Whether to flip horizontally or vertically.\n *\n * @example\n * ```ts\n * editor.flipShapes([box1, box2], 'horizontal', 32)\n * editor.flipShapes(editor.getSelectedShapeIds(), 'horizontal', 32)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flipShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", operation: "
                },
                {
                  "kind": "Content",
                  "text": "'horizontal' | 'vertical'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "operation",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "flipShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#focusedGroup:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getFocusedGroup` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get focusedGroup(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "focusedGroup",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#focusedGroupId:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getFocusedGroupId` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get focusedGroupId(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "focusedGroupId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getAncestorPageId:member(1)",
              "docComment": "/**\n * Get the id of the containing page for a given shape.\n *\n * @param shape - The shape to get the page id for.\n *\n * @returns The id of the page that contains the shape, or undefined if the shape is undefined.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAncestorPageId(shape?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAncestorPageId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getArrowInfo:member(1)",
              "docComment": "/**\n * Get cached info about an arrow.\n *\n * @param shape - The shape (or shape id) of the arrow to get the info for.\n *\n * @example\n * ```ts\n * const arrowInfo = editor.getArrowInfo(myArrow)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getArrowInfo(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLArrowShape",
                  "canonicalReference": "@tldraw/tlschema!TLArrowShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLArrowInfo",
                  "canonicalReference": "@tldraw/editor!~TLArrowInfo:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getArrowInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getArrowsBoundTo:member(1)",
              "docComment": "/**\n * Get all arrows bound to a shape.\n *\n * @param shapeId - The id of the shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getArrowsBoundTo(shapeId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        arrowId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        handleId: \"end\" | \"start\";\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getArrowsBoundTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getAsset:member(1)",
              "docComment": "/**\n * Get an asset by its id.\n *\n * @param asset - The asset (or asset id) to get.\n *\n * @example\n * ```ts\n * editor.getAsset('asset1')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAsset(asset: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAsset",
                  "canonicalReference": "@tldraw/tlschema!TLAsset:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLAssetId",
                  "canonicalReference": "@tldraw/tlschema!TLAssetId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLAsset",
                  "canonicalReference": "@tldraw/tlschema!TLAsset:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "asset",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAsset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getAssetForExternalContent:member(1)",
              "docComment": "/**\n * Get an asset for an external asset content type.\n *\n * @param info - Info about the external content.\n *\n * @returns The asset.\n *\n * @example\n * ```ts\n * const asset = await editor.getAssetForExternalContent({ type: 'file', file: myFile })\n * const asset = await editor.getAssetForExternalContent({ type: 'url', url: myUrl })\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAssetForExternalContent(info: "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalAssetContent",
                  "canonicalReference": "@tldraw/editor!TLExternalAssetContent:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLAsset",
                  "canonicalReference": "@tldraw/tlschema!TLAsset:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAssetForExternalContent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getAssets:member(1)",
              "docComment": "/**\n * Get all assets in the editor.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAssets(): "
                },
                {
                  "kind": "Content",
                  "text": "(import(\"@tldraw/tlschema\")."
                },
                {
                  "kind": "Reference",
                  "text": "TLBookmarkAsset",
                  "canonicalReference": "@tldraw/tlschema!TLBookmarkAsset:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLImageAsset",
                  "canonicalReference": "@tldraw/tlschema!TLImageAsset:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLVideoAsset",
                  "canonicalReference": "@tldraw/tlschema!TLVideoAsset:type"
                },
                {
                  "kind": "Content",
                  "text": ")[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAssets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCamera:member(1)",
              "docComment": "/**\n * The current camera.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCamera(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@tldraw/tlschema\")."
                },
                {
                  "kind": "Reference",
                  "text": "TLCamera",
                  "canonicalReference": "@tldraw/tlschema!TLCamera:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCamera"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCameraState:member(1)",
              "docComment": "/**\n * Whether the camera is moving or idle.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCameraState(): "
                },
                {
                  "kind": "Content",
                  "text": "\"idle\" | \"moving\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCameraState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCanRedo:member(1)",
              "docComment": "/**\n * Whether the app can redo.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCanRedo(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCanRedo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCanUndo:member(1)",
              "docComment": "/**\n * Whether the app can undo.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCanUndo(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCanUndo"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#getContainer:member",
              "docComment": "/**\n * The current HTML element containing the editor.\n *\n * @example\n * ```ts\n * const container = editor.getContainer()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContainer: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getContentFromCurrentPage:member(1)",
              "docComment": "/**\n * Get content that can be exported for the given shape ids.\n *\n * @param shapes - The shapes (or shape ids) to get content for.\n *\n * @returns The exported content.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContentFromCurrentPage(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLContent",
                  "canonicalReference": "@tldraw/editor!TLContent:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getContentFromCurrentPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCroppingShapeId:member(1)",
              "docComment": "/**\n * The current cropping shape's id.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCroppingShapeId(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCroppingShapeId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPage:member(1)",
              "docComment": "/**\n * The current page.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPage(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPageBounds:member(1)",
              "docComment": "/**\n * The bounds of the current page (the common bounds of all of the shapes on the page).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPageBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPageId:member(1)",
              "docComment": "/**\n * The current page id.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPageId(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPageId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPageRenderingShapesSorted:member(1)",
              "docComment": "/**\n * An array containing all of the rendering shapes in the current page, sorted in z-index order (accounting for nested shapes): e.g. A, B, BA, BB, C.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPageRenderingShapesSorted(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPageRenderingShapesSorted"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPageShapeIds:member(1)",
              "docComment": "/**\n * An array of all of the shapes on the current page.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPageShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPageShapeIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPageShapes:member(1)",
              "docComment": "/**\n * An array containing all of the shapes in the current page.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPageShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPageShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPageShapesSorted:member(1)",
              "docComment": "/**\n * An array containing all of the shapes in the current page, sorted in z-index order (accounting for nested shapes): e.g. A, B, BA, BB, C.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPageShapesSorted(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPageShapesSorted"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentPageState:member(1)",
              "docComment": "/**\n * The current page state.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentPageState(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLInstancePageState",
                  "canonicalReference": "@tldraw/tlschema!TLInstancePageState:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentPageState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentTool:member(1)",
              "docComment": "/**\n * The current selected tool.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentTool(): "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentTool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getCurrentToolId:member(1)",
              "docComment": "/**\n * The id of the current selected tool.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentToolId(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentToolId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getDocumentSettings:member(1)",
              "docComment": "/**\n * The global document settings that apply to all users.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDocumentSettings(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLDocument",
                  "canonicalReference": "@tldraw/tlschema!TLDocument:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDocumentSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getDroppingOverShape:member(1)",
              "docComment": "/**\n * Get the shape that some shapes should be dropped on at a given point.\n *\n * @param point - The point to find the parent for.\n *\n * @param droppingShapes - The shapes that are being dropped.\n *\n * @returns The shape to drop on.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDroppingOverShape(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", droppingShapes?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "droppingShapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDroppingOverShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getEditingShape:member(1)",
              "docComment": "/**\n * The current editing shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEditingShape(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEditingShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getEditingShapeId:member(1)",
              "docComment": "/**\n * The current editing shape's id.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getEditingShapeId(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getEditingShapeId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getErasingShapeIds:member(1)",
              "docComment": "/**\n * The editor's current erasing ids.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getErasingShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getErasingShapeIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getErasingShapes:member(1)",
              "docComment": "/**\n * The editor's current erasing shapes.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getErasingShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getErasingShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getFocusedGroup:member(1)",
              "docComment": "/**\n * The current focused group.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFocusedGroup(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFocusedGroup"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getFocusedGroupId:member(1)",
              "docComment": "/**\n * The current focused group id.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFocusedGroupId(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getFocusedGroupId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getHighestIndexForParent:member(1)",
              "docComment": "/**\n * Get the index above the highest child of a given parent.\n *\n * @param parentId - The id of the parent.\n *\n * @returns The index.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHighestIndexForParent(parent: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLParentId",
                  "canonicalReference": "@tldraw/tlschema!TLParentId:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getHighestIndexForParent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getHintingShape:member(1)",
              "docComment": "/**\n * The editor's current hinting shapes.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHintingShape(): "
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getHintingShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getHintingShapeIds:member(1)",
              "docComment": "/**\n * The editor's current hinting shape ids.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHintingShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getHintingShapeIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getHoveredShape:member(1)",
              "docComment": "/**\n * The current hovered shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHoveredShape(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getHoveredShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getHoveredShapeId:member(1)",
              "docComment": "/**\n * The current hovered shape id.\n *\n * @readonly @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHoveredShapeId(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getHoveredShapeId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getInitialMetaForShape:member(1)",
              "docComment": "/**\n * Get the initial meta value for a shape.\n *\n * @param shape - The shape to get the initial meta for.\n *\n * @example\n * ```ts\n * editor.getInitialMetaForShape = (shape) => {\n *   if (shape.type === 'note') {\n *     return { createdBy: myCurrentUser.id }\n *   }\n * }\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInitialMetaForShape(_shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JsonObject",
                  "canonicalReference": "@tldraw/utils!JsonObject:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "_shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInitialMetaForShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getInstanceState:member(1)",
              "docComment": "/**\n * The current instance's state.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getInstanceState(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLInstance",
                  "canonicalReference": "@tldraw/tlschema!TLInstance:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getInstanceState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getIsMenuOpen:member(1)",
              "docComment": "/**\n * Get whether any menus are open.\n *\n * @example\n * ```ts\n * editor.isMenuOpen()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIsMenuOpen(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getIsMenuOpen"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getOnlySelectedShape:member(1)",
              "docComment": "/**\n * The app's only selected shape.\n *\n * @returns Null if there is no shape or more than one selected shape, otherwise the selected shape.\n *\n * @public @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOnlySelectedShape(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOnlySelectedShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getOpenMenus:member(1)",
              "docComment": "/**\n * A set of strings representing any open menus. When menus are open, certain interactions will behave differently; for example, when a draw tool is selected and a menu is open, a pointer-down will not create a dot (because the user is probably trying to close the menu) however a pointer-down event followed by a drag will begin drawing a line (because the user is BOTH trying to close the menu AND start drawing a line).\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOpenMenus(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOpenMenus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getOutermostSelectableShape:member(1)",
              "docComment": "/**\n * Get the shape that should be selected when you click on a given shape, assuming there is nothing already selected. It will not return anything higher than or including the current focus layer.\n *\n * @param shape - The shape to get the outermost selectable shape for.\n *\n * @param filter - A function to filter the selectable shapes.\n *\n * @returns The outermost selectable shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOutermostSelectableShape(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", filter?: "
                },
                {
                  "kind": "Content",
                  "text": "(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOutermostSelectableShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getPage:member(1)",
              "docComment": "/**\n * Get a page.\n *\n * @param page - The page (or page id) to get.\n *\n * @example\n * ```ts\n * editor.getPage(myPage.id)\n * editor.getPage(myPage)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPage(page: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getPages:member(1)",
              "docComment": "/**\n * Info about the project's current pages.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPages(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPages"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getPageShapeIds:member(1)",
              "docComment": "/**\n * Get the ids of shapes on a page.\n *\n * @param page - The page (or page id) to get.\n *\n * @example\n * ```ts\n * const idsOnPage1 = editor.getCurrentPageShapeIds('page1')\n * const idsOnPage2 = editor.getCurrentPageShapeIds(myPage2)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPageShapeIds(page: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPageShapeIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getPageStates:member(1)",
              "docComment": "/**\n * Page states.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPageStates(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLInstancePageState",
                  "canonicalReference": "@tldraw/tlschema!TLInstancePageState:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPageStates"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getPath:member(1)",
              "docComment": "/**\n * The editor's current path of active states.\n *\n * @example\n * ```ts\n * editor.getPath() // \"select.idle\"\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPath(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPath"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getPointInParentSpace:member(1)",
              "docComment": "/**\n * Convert a delta in the current page space to a point in the local space of a shape's parent.\n *\n * @param shape - The shape to get the point in the local space of.\n *\n * @param point - The page point to get in the local space of the shape.\n *\n * @example\n * ```ts\n * editor.getPointInParentSpace(myShape.id, { x: 100, y: 100 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPointInParentSpace(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPointInParentSpace"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getPointInShapeSpace:member(1)",
              "docComment": "/**\n * Convert a point in the current page space to a point in the local space of a shape. For example, if a shape's page point were `{ x: 100, y: 100 }`, a page point at `{ x: 110, y: 110 }` would be at `{ x: 10, y: 10 }` in the shape's local space.\n *\n * @param shape - The shape to get the point in the local space of.\n *\n * @param point - The page point to get in the local space of the shape.\n *\n * @example\n * ```ts\n * editor.getPointInShapeSpace(myShape, { x: 100, y: 100 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPointInShapeSpace(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPointInShapeSpace"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getRenderingBounds:member(1)",
              "docComment": "/**\n * The current rendering bounds in the current page space, used for checking which shapes are \"on screen\".\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRenderingBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRenderingBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getRenderingBoundsExpanded:member(1)",
              "docComment": "/**\n * The current rendering bounds in the current page space, expanded slightly. Used for determining which shapes to render and which to \"cull\".\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRenderingBoundsExpanded(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRenderingBoundsExpanded"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getRenderingShapes:member(1)",
              "docComment": "/**\n * Get the shapes that should be displayed in the current viewport.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getRenderingShapes(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        id: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        util: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeUtil",
                  "canonicalReference": "@tldraw/editor!ShapeUtil:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        index: number;\n        backgroundIndex: number;\n        opacity: number;\n        isCulled: boolean;\n        maskedPageBounds: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getRenderingShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSelectedShapeAtPoint:member(1)",
              "docComment": "/**\n * Get the top-most selected shape at the given point, ignoring groups.\n *\n * @param point - The point to check.\n *\n * @returns The top-most selected shape at the given point, or undefined if there is no shape at the point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectedShapeAtPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSelectedShapeAtPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSelectedShapeIds:member(1)",
              "docComment": "/**\n * The current selected ids.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectedShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSelectedShapeIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSelectedShapes:member(1)",
              "docComment": "/**\n * An array containing all of the currently selected shapes.\n *\n * @public @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectedShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSelectedShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSelectionPageBounds:member(1)",
              "docComment": "/**\n * The current page bounds of all the selected shapes. If the selection is rotated, then these bounds are the axis-aligned box that the rotated bounds would fit inside of.\n *\n * @readonly @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectionPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSelectionPageBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSelectionRotatedPageBounds:member(1)",
              "docComment": "/**\n * The bounds of the selection bounding box in the current page space.\n *\n * @readonly @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectionRotatedPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSelectionRotatedPageBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSelectionRotation:member(1)",
              "docComment": "/**\n * The rotation of the selection bounding box in the current page space.\n *\n * @readonly @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSelectionRotation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSelectionRotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShape:member(1)",
              "docComment": "/**\n * Get a shape by its id.\n *\n * @param id - The id of the shape to get.\n *\n * @example\n * ```ts\n * editor.getShape('box1')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShape<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLParentId",
                  "canonicalReference": "@tldraw/tlschema!TLParentId:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeAncestors:member(1)",
              "docComment": "/**\n * Get the ancestors of a shape.\n *\n * @param shape - The shape (or shape id) to get the ancestors for.\n *\n * @example\n * ```ts\n * const ancestors = editor.getShapeAncestors(myShape)\n * const ancestors = editor.getShapeAncestors(myShapeId)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeAncestors(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", acc?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "acc",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeAncestors"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeAndDescendantIds:member(1)",
              "docComment": "/**\n * Get the shape ids of all descendants of the given shapes (including the shapes themselves).\n *\n * @param ids - The ids of the shapes to get descendants of.\n *\n * @returns The decscendant ids.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeAndDescendantIds(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeAndDescendantIds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeAtPoint:member(1)",
              "docComment": "/**\n * Get the shape at the current point.\n *\n * @param point - The point to check.\n *\n * @param opts - Options for the check: `hitInside` to check if the point is inside the shape, `margin` to check if the point is within a margin of the shape, `hitFrameInside` to check if the point is inside the frame, and `filter` to filter the shapes to check.\n *\n * @returns The shape at the given point, or undefined if there is no shape at the point.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeAtPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        renderingOnly?: boolean | undefined;\n        margin?: number | undefined;\n        hitInside?: boolean | undefined;\n        hitLabels?: boolean | undefined;\n        hitFrameInside?: boolean | undefined;\n        filter?: ((shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ") => boolean) | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeAtPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeClipPath:member(1)",
              "docComment": "/**\n * Get the clip path for a shape.\n *\n * @param shape - The shape (or shape id) to get the clip path for.\n *\n * @returns The clip path or undefined.\n *\n * @example\n * ```ts\n * const clipPath = editor.getShapeClipPath(shape)\n * const clipPath = editor.getShapeClipPath(shape.id)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeClipPath(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeClipPath"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeGeometry:member(1)",
              "docComment": "/**\n * Get the geometry of a shape.\n *\n * @param shape - The shape (or shape id) to get the geometry for.\n *\n * @example\n * ```ts\n * editor.getShapeGeometry(myShape)\n * editor.getShapeGeometry(myShapeId)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeGeometry<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2d",
                  "canonicalReference": "@tldraw/editor!Geometry2d:class"
                },
                {
                  "kind": "Content",
                  "text": ">(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeGeometry"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeHandles:member(1)",
              "docComment": "/**\n * Get the handles (if any) for a shape.\n *\n * @param shape - The shape (or shape id) to get the handles for.\n *\n * @example\n * ```ts\n * editor.getShapeHandles(myShape)\n * editor.getShapeHandles(myShapeId)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeHandles<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shape: "
                },
                {
                  "kind": "Content",
                  "text": "T | T['id']"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLHandle",
                  "canonicalReference": "@tldraw/tlschema!TLHandle:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeHandles"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeLocalTransform:member(1)",
              "docComment": "/**\n * Get the local transform for a shape as a matrix model. This transform reflects both its translation (x, y) from from either its parent's top left corner, if the shape's parent is another shape, or else from the 0,0 of the page, if the shape's parent is the page; and the shape's rotation.\n *\n * @param shape - The shape to get the local transform for.\n *\n * @example\n * ```ts\n * editor.getShapeLocalTransform(myShape)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeLocalTransform(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeLocalTransform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeMask:member(1)",
              "docComment": "/**\n * Get the mask (in the current page space) for a shape.\n *\n * @param id - The id of the shape to get the mask for.\n *\n * @returns The mask for the shape.\n *\n * @example\n * ```ts\n * const pageMask = editor.getShapeMask(shape.id)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeMask(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "undefined | "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeMask"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeMaskedPageBounds:member(1)",
              "docComment": "/**\n * Get the bounds of a shape in the current page space, incorporating any masks. For example, if the shape were the child of a frame and was half way out of the frame, the bounds would be the half of the shape that was in the frame.\n *\n * @param shape - The shape to get the masked bounds for.\n *\n * @example\n * ```ts\n * editor.getShapeMaskedPageBounds(myShape)\n * editor.getShapeMaskedPageBounds(myShapeId)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeMaskedPageBounds(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeMaskedPageBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeOutlineSegments:member(1)",
              "docComment": "/**\n * Get the local outline segments of a shape.\n *\n * @param shape - The shape (or shape id) to get the outline segments for.\n *\n * @example\n * ```ts\n * editor.getShapeOutlineSegments(myShape)\n * editor.getShapeOutlineSegments(myShapeId)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeOutlineSegments<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shape: "
                },
                {
                  "kind": "Content",
                  "text": "T | T['id']"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeOutlineSegments"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapePageBounds:member(1)",
              "docComment": "/**\n * Get the bounds of a shape in the current page space.\n *\n * @param shape - The shape (or shape id) to get the bounds for.\n *\n * @example\n * ```ts\n * editor.getShapePageBounds(myShape)\n * editor.getShapePageBounds(myShapeId)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapePageBounds(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapePageBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapePageTransform:member(1)",
              "docComment": "/**\n * Get the transform of a shape in the current page space.\n *\n * @param shape - The shape (or shape id) to get the page transform for.\n *\n * @example\n * ```ts\n * editor.getShapePageTransform(myShape)\n * editor.getShapePageTransform(myShapeId)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapePageTransform(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapePageTransform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeParent:member(1)",
              "docComment": "/**\n * Get the parent shape for a given shape. Returns undefined if the shape is the direct child of the page.\n *\n * @example\n * ```ts\n * editor.getShapeParent(myShape)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeParent(shape?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeParent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeParentTransform:member(1)",
              "docComment": "/**\n * Get the local transform of a shape's parent as a matrix model.\n *\n * @param shape - The shape (or shape id) to get the parent transform for.\n *\n * @example\n * ```ts\n * editor.getShapeParentTransform(myShape)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeParentTransform(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeParentTransform"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapesAtPoint:member(1)",
              "docComment": "/**\n * Get the shapes, if any, at a given page point.\n *\n * @param point - The page point to test.\n *\n * @example\n * ```ts\n * editor.getShapesAtPoint({ x: 100, y: 100 })\n * editor.getShapesAtPoint({ x: 100, y: 100 }, { hitInside: true, exact: true })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapesAtPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        margin?: number | undefined;\n        hitInside?: boolean | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapesAtPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeStyleIfExists:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeStyleIfExists<T>(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ", style: "
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeStyleIfExists"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeUtil:member(1)",
              "docComment": "/**\n * Get a shape util from a shape itself.\n *\n * @param shape - A shape, shape partial, or shape type.\n *\n * @example\n * ```ts\n * const util = editor.getShapeUtil(myArrowShape)\n * const util = editor.getShapeUtil('arrow')\n * const util = editor.getShapeUtil<TLArrowShape>(myArrowShape)\n * const util = editor.getShapeUtil(TLArrowShape)('arrow')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeUtil<S extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shape: "
                },
                {
                  "kind": "Content",
                  "text": "S | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapePartial",
                  "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeUtil",
                  "canonicalReference": "@tldraw/editor!ShapeUtil:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "S",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeUtil"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeUtil:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeUtil<S extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "S['type']"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeUtil",
                  "canonicalReference": "@tldraw/editor!ShapeUtil:class"
                },
                {
                  "kind": "Content",
                  "text": "<S>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "S",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeUtil"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getShapeUtil:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getShapeUtil<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeUtil",
                  "canonicalReference": "@tldraw/editor!ShapeUtil:class"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "T extends "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeUtil",
                  "canonicalReference": "@tldraw/editor!ShapeUtil:class"
                },
                {
                  "kind": "Content",
                  "text": "<infer R> ? R['type'] : string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShapeUtil"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSharedOpacity:member(1)",
              "docComment": "/**\n * Get the currently selected shared opacity. If any shapes are selected, this returns the shared opacity of the selected shapes. Otherwise, this returns the chosen opacity for the next shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSharedOpacity(): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStyle",
                  "canonicalReference": "@tldraw/editor!SharedStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSharedOpacity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSharedStyles:member(1)",
              "docComment": "/**\n * A map of all the current styles either in the current selection, or that are relevant to the current tool.\n *\n * @example\n * ```ts\n * const color = editor.getSharedStyles().get(DefaultColorStyle)\n * if (color && color.type === 'shared') {\n *   print('All selected shapes have the same color:', color.value)\n * }\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSharedStyles(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlySharedStyleMap",
                  "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSharedStyles"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSortedChildIdsForParent:member(1)",
              "docComment": "/**\n * Get an array of all the children of a shape.\n *\n * @param parentId - The id of the parent shape.\n *\n * @example\n * ```ts\n * editor.getSortedChildIdsForParent('frame1')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSortedChildIdsForParent(parent: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLParentId",
                  "canonicalReference": "@tldraw/tlschema!TLParentId:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSortedChildIdsForParent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getStateDescendant:member(1)",
              "docComment": "/**\n * Get a descendant by its path.\n *\n * @param path - The descendant's path of state ids, separated by periods.\n *\n * @example\n * ```ts\n * state.getStateDescendant('select')\n * state.getStateDescendant('select.brushing')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStateDescendant<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": ">(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getStateDescendant"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getSvg:member(1)",
              "docComment": "/**\n * Get an exported SVG of the given shapes.\n *\n * @param ids - The shapes (or shape ids) to export.\n *\n * @param opts - Options for the export.\n *\n * @returns The SVG element.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSvg(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLSvgOptions",
                  "canonicalReference": "@tldraw/editor!TLSvgOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SVGSVGElement",
                  "canonicalReference": "!SVGSVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 10
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSvg"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getViewportPageBounds:member(1)",
              "docComment": "/**\n * The current viewport in the current page space.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getViewportPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getViewportPageBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getViewportPageCenter:member(1)",
              "docComment": "/**\n * The center of the viewport in the current page space.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getViewportPageCenter(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getViewportPageCenter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getViewportScreenBounds:member(1)",
              "docComment": "/**\n * The bounds of the editor's viewport in screen space.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getViewportScreenBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getViewportScreenBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getViewportScreenCenter:member(1)",
              "docComment": "/**\n * The center of the editor's viewport in screen space.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getViewportScreenCenter(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getViewportScreenCenter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#getZoomLevel:member(1)",
              "docComment": "/**\n * The current camera zoom level.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getZoomLevel(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getZoomLevel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#groupShapes:member(1)",
              "docComment": "/**\n * Create a group containing the provided shapes.\n *\n * @param shapes - The shapes (or shape ids) to group. Defaults to the selected shapes.\n *\n * @param groupId - The id of the group to create.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "groupShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", groupId?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "groupId",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "groupShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#hasAncestor:member(1)",
              "docComment": "/**\n * Returns true if the the given shape has the given ancestor.\n *\n * @param shape - The shape.\n *\n * @param ancestorId - The id of the ancestor.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasAncestor(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", ancestorId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ancestorId",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hasAncestor"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#hintingShape:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getHintingShape` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hintingShape(): "
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined>[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hintingShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#hintingShapeIds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getHintingShapeIds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hintingShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hintingShapeIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#history:member",
              "docComment": "/**\n * A manager for the app's history.\n *\n * @readonly\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly history: "
                },
                {
                  "kind": "Reference",
                  "text": "HistoryManager",
                  "canonicalReference": "@tldraw/editor!~HistoryManager:class"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "history",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#hoveredShape:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getHoveredShape` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hoveredShape(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hoveredShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#hoveredShapeId:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getHoveredShapeId` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get hoveredShapeId(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hoveredShapeId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#inputs:member",
              "docComment": "/**\n * The app's current input state.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inputs: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        originPagePoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        originScreenPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        previousPagePoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        previousScreenPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        currentPagePoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        currentScreenPoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        keys: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>;\n        buttons: "
                },
                {
                  "kind": "Reference",
                  "text": "Set",
                  "canonicalReference": "!Set:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>;\n        isPen: boolean;\n        shiftKey: boolean;\n        ctrlKey: boolean;\n        altKey: boolean;\n        isDragging: boolean;\n        isPointing: boolean;\n        isPinching: boolean;\n        isEditing: boolean;\n        isPanning: boolean;\n        pointerVelocity: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "inputs",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 20
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#instanceState:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getInstanceState` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get instanceState(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLInstance",
                  "canonicalReference": "@tldraw/tlschema!TLInstance:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "instanceState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#interrupt:member(1)",
              "docComment": "/**\n * Dispatch an interrupt event.\n *\n * @example\n * ```ts\n * editor.interrupt()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "interrupt(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "interrupt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isAncestorSelected:member(1)",
              "docComment": "/**\n * Determine whether or not any of a shape's ancestors are selected.\n *\n * @param id - The id of the shape to check.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAncestorSelected(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isAncestorSelected"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isIn:member(1)",
              "docComment": "/**\n * Get whether a certain tool (or other state node) is currently active.\n *\n * @param path - The path of active states, separated by periods.\n *\n * @example\n * ```ts\n * editor.isIn('select')\n * editor.isIn('select.brushing')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isIn(path: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "path",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isIn"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isInAny:member(1)",
              "docComment": "/**\n * Get whether the state node is in any of the given active paths.\n *\n * @example\n * ```ts\n * state.isInAny('select', 'erase')\n * state.isInAny('select.brushing', 'erase.idle')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isInAny(...paths: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "paths",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isInAny"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#isMenuOpen:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getIsMenuOpen` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get isMenuOpen(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isMenuOpen",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isPointInShape:member(1)",
              "docComment": "/**\n * Test whether a point (in the current page space) will will a shape. This method takes into account masks, such as when a shape is the child of a frame and is partially clipped by the frame.\n *\n * @param shape - The shape to test against.\n *\n * @param point - The page point to test (in the current page space).\n *\n * @param hitInside - Whether to count as a hit if the point is inside of a closed shape.\n *\n * @example\n * ```ts\n * editor.isPointInShape({ x: 100, y: 100 }, myShape)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPointInShape(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", opts?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        margin?: number | undefined;\n        hitInside?: boolean | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isPointInShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isShapeInPage:member(1)",
              "docComment": "/**\n * Get whether the given shape is the descendant of the given page.\n *\n * @param shape - The shape to check.\n *\n * @param pageId - The id of the page to check against. Defaults to the current page.\n *\n * @example\n * ```ts\n * editor.isShapeInPage(myShape)\n * editor.isShapeInPage(myShape, 'page1')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isShapeInPage(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", pageId?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pageId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isShapeInPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isShapeOfType:member(1)",
              "docComment": "/**\n * Get whether a shape matches the type of a TLShapeUtil.\n *\n * @param util - the TLShapeUtil constructor to test against\n *\n * @param shape - the shape to test\n *\n * @example\n * ```ts\n * const isArrowShape = isShapeOfType<TLArrowShape>(someShape, 'arrow')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isShapeOfType<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ", type: "
                },
                {
                  "kind": "Content",
                  "text": "T['type']"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "shape",
                  "canonicalReference": "@tldraw/editor!~shape"
                },
                {
                  "kind": "Content",
                  "text": " is T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isShapeOfType"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isShapeOfType:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isShapeOfType<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(shapeId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": "['id']"
                },
                {
                  "kind": "Content",
                  "text": ", type: "
                },
                {
                  "kind": "Content",
                  "text": "T['type']"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "shapeId",
                  "canonicalReference": "@tldraw/editor!~shapeId"
                },
                {
                  "kind": "Content",
                  "text": " is T['id']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "shapeId",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isShapeOfType"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isShapeOrAncestorLocked:member(1)",
              "docComment": "/**\n * Check whether a shape or its parent is locked.\n *\n * @param shape - The shape (or shape id) to check.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isShapeOrAncestorLocked(shape?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isShapeOrAncestorLocked"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#isShapeOrAncestorLocked:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isShapeOrAncestorLocked(id?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isShapeOrAncestorLocked"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#mark:member(1)",
              "docComment": "/**\n * Create a new \"mark\", or stopping point, in the undo redo history. Creating a mark will clear any redos.\n *\n * @param markId - The mark's id, usually the reason for adding the mark.\n *\n * @param onUndo - Whether to stop at the mark when undoing.\n *\n * @param onRedo - Whether to stop at the mark when redoing.\n *\n * @example\n * ```ts\n * editor.mark()\n * editor.mark('flip shapes')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mark(markId?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", onUndo?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ", onRedo?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "markId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "onUndo",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "onRedo",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mark"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#moveShapesToPage:member(1)",
              "docComment": "/**\n * Move shapes to page.\n *\n * @param shapes - The shapes (or shape ids) of the shapes to move.\n *\n * @param pageId - The id of the page where the shapes will be moved.\n *\n * @example\n * ```ts\n * editor.moveShapesToPage(['box1', 'box2'], 'page1')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "moveShapesToPage(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", pageId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "pageId",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "moveShapesToPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#nudgeShapes:member(1)",
              "docComment": "/**\n * Move shapes by a delta.\n *\n * @param shapes - The shapes (or shape ids) to move.\n *\n * @param direction - The direction in which to move the shapes.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.nudgeShapes(['box1', 'box2'], { x: 8, y: 8 })\n * editor.nudgeShapes(editor.getSelectedShapes(), { x: 8, y: 8 }, { squashing: true })\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nudgeShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", offset: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nudgeShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#onlySelectedShape:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getOnlySelectedShape` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get onlySelectedShape(): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onlySelectedShape",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#openMenus:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getOpenMenus` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get openMenus(): "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "openMenus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#packShapes:member(1)",
              "docComment": "/**\n * Pack shapes into a grid centered on their current position. Based on potpack (https://github.com/mapbox/potpack).\n *\n * @param shapes - The shapes (or shape ids) to pack.\n *\n * @param gap - The padding to apply to the packed shapes. Defaults to 16.\n *\n * @example\n * ```ts\n * editor.packShapes([box1, box2], 32)\n * editor.packShapes(editor.getSelectedShapeIds(), 32)\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "packShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", gap: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "gap",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "packShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#pages:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getPages` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get pages(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pages",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#pageStates:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getPageStates` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get pageStates(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLInstancePageState",
                  "canonicalReference": "@tldraw/tlschema!TLInstancePageState:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pageStates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#pageToScreen:member(1)",
              "docComment": "/**\n * Convert a point in the current page space to a point in current screen space.\n *\n * @param point - The point in screen space.\n *\n * @example\n * ```ts\n * editor.pageToScreen({ x: 100, y: 100 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageToScreen(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        x: number;\n        y: number;\n        z: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pageToScreen"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#pan:member(1)",
              "docComment": "/**\n * Pan the camera.\n *\n * @param offset - The offset in the current page space.\n *\n * @param animation - The animation options.\n *\n * @example\n * ```ts\n * editor.pan({ x: 100, y: 100 })\n * editor.pan({ x: 100, y: 100 }, { duration: 1000 })\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pan(offset: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "offset",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pan"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#panZoomIntoView:member(1)",
              "docComment": "/**\n * Pan or pan/zoom the selected ids into view. This method tries to not change the zoom if possible.\n *\n * @param ids - The ids of the shapes to pan and zoom into view.\n *\n * @param animation - The options for an animation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "panZoomIntoView(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "panZoomIntoView"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#popFocusedGroupId:member(1)",
              "docComment": "/**\n * Exit the current focused group, moving up to the next parent group if there is one.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "popFocusedGroupId(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "popFocusedGroupId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#putContentOntoCurrentPage:member(1)",
              "docComment": "/**\n * Place content into the editor.\n *\n * @param content - The content.\n *\n * @param options - Options for placing the content.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "putContentOntoCurrentPage(content: "
                },
                {
                  "kind": "Reference",
                  "text": "TLContent",
                  "canonicalReference": "@tldraw/editor!TLContent:interface"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        point?: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        select?: boolean;\n        preservePosition?: boolean;\n        preserveIds?: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "content",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "putContentOntoCurrentPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#putExternalContent:member(1)",
              "docComment": "/**\n * Handle external content, such as files, urls, embeds, or plain text which has been put into the app, for example by pasting external text or dropping external images onto canvas.\n *\n * @param info - Info about the external content.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "putExternalContent(info: "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalContent",
                  "canonicalReference": "@tldraw/editor!TLExternalContent:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "putExternalContent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#redo:member(1)",
              "docComment": "/**\n * Redo to the next mark.\n *\n * @example\n * ```ts\n * editor.redo()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redo(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "redo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#registerExternalAssetHandler:member(1)",
              "docComment": "/**\n * Register an external content handler. This handler will be called when the editor receives external content of the provided type. For example, the 'image' type handler will be called when a user drops an image onto the canvas.\n *\n * @param type - The type of external content.\n *\n * @param handler - The handler to use for this content type.\n *\n * @example\n * ```ts\n * editor.registerExternalAssetHandler('text', myHandler)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerExternalAssetHandler<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalAssetContent",
                  "canonicalReference": "@tldraw/editor!TLExternalAssetContent:type"
                },
                {
                  "kind": "Content",
                  "text": "['type']"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", handler: "
                },
                {
                  "kind": "Content",
                  "text": "((info: "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalAssetContent",
                  "canonicalReference": "@tldraw/editor!TLExternalAssetContent:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        type: T;\n    }) => "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLAsset",
                  "canonicalReference": "@tldraw/tlschema!TLAsset:type"
                },
                {
                  "kind": "Content",
                  "text": ">) | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "registerExternalAssetHandler"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#registerExternalContentHandler:member(1)",
              "docComment": "/**\n * Register an external content handler. This handler will be called when the editor receives external content of the provided type. For example, the 'image' type handler will be called when a user drops an image onto the canvas.\n *\n * @param type - The type of external content.\n *\n * @param handler - The handler to use for this content type.\n *\n * @example\n * ```ts\n * editor.registerExternalContentHandler('text', myHandler)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerExternalContentHandler<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalContent",
                  "canonicalReference": "@tldraw/editor!TLExternalContent:type"
                },
                {
                  "kind": "Content",
                  "text": "['type']"
                },
                {
                  "kind": "Content",
                  "text": ">(type: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", handler: "
                },
                {
                  "kind": "Content",
                  "text": "((info: T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalContent",
                  "canonicalReference": "@tldraw/editor!TLExternalContent:type"
                },
                {
                  "kind": "Content",
                  "text": "['type'] ? "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalContent",
                  "canonicalReference": "@tldraw/editor!TLExternalContent:type"
                },
                {
                  "kind": "Content",
                  "text": " & {\n        type: T;\n    } : "
                },
                {
                  "kind": "Reference",
                  "text": "TLExternalContent",
                  "canonicalReference": "@tldraw/editor!TLExternalContent:type"
                },
                {
                  "kind": "Content",
                  "text": ") => void) | null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "handler",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 13
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "registerExternalContentHandler"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#renamePage:member(1)",
              "docComment": "/**\n * Rename a page.\n *\n * @param id - The id of the page to rename.\n *\n * @param name - The new name.\n *\n * @example\n * ```ts\n * editor.renamePage('page1', 'My Page')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renamePage(page: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", name: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "renamePage"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#renderingBounds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getRenderingBounds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get renderingBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "renderingBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#renderingBoundsExpanded:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getRenderingBoundsExpanded` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get renderingBoundsExpanded(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "renderingBoundsExpanded",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#renderingBoundsMargin:member",
              "docComment": "/**\n * The distance to expand the viewport when measuring culling. A larger distance will mean that shapes near to the viewport (but still outside of it) will not be culled.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderingBoundsMargin: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "renderingBoundsMargin",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#renderingShapes:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getRenderingShapes` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get renderingShapes(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        id: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        util: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeUtil",
                  "canonicalReference": "@tldraw/editor!ShapeUtil:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n        index: number;\n        backgroundIndex: number;\n        opacity: number;\n        isCulled: boolean;\n        maskedPageBounds: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined;\n    }[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "renderingShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#reparentShapes:member(1)",
              "docComment": "/**\n * Reparent shapes to a new parent. This operation preserves the shape's current page positions / rotations.\n *\n * @param shapes - The shapes (or shape ids) of the shapes to reparent.\n *\n * @param parentId - The id of the new parent shape.\n *\n * @param insertIndex - The index to insert the children.\n *\n * @example\n * ```ts\n * editor.reparentShapes([box1, box2], 'frame1')\n * editor.reparentShapes([box1.id, box2.id], 'frame1')\n * editor.reparentShapes([box1.id, box2.id], 'frame1', 4)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reparentShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", parentId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLParentId",
                  "canonicalReference": "@tldraw/tlschema!TLParentId:type"
                },
                {
                  "kind": "Content",
                  "text": ", insertIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parentId",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "insertIndex",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "reparentShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#resetZoom:member(1)",
              "docComment": "/**\n * Set the zoom back to 100%.\n *\n * @param point - The screen point to zoom out on. Defaults to the viewport screen center.\n *\n * @param animation - The options for an animation.\n *\n * @example\n * ```ts\n * editor.resetZoom()\n * editor.resetZoom(editor.getViewportScreenCenter(), { duration: 200 })\n * editor.resetZoom(editor.getViewportScreenCenter(), { duration: 200 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resetZoom(point?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "resetZoom"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#resizeShape:member(1)",
              "docComment": "/**\n * Resize a shape.\n *\n * @param id - The id of the shape to resize.\n *\n * @param scale - The scale factor to apply to the shape.\n *\n * @param options - Additional options.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "resizeShape(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ", scale: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", options?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLResizeShapeOptions",
                  "canonicalReference": "@tldraw/editor!TLResizeShapeOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "scale",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "resizeShape"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#root:member",
              "docComment": "/**\n * The root state of the statechart.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly root: "
                },
                {
                  "kind": "Reference",
                  "text": "RootState",
                  "canonicalReference": "@tldraw/editor!~RootState:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "root",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#rotateShapesBy:member(1)",
              "docComment": "/**\n * Rotate shapes by a delta in radians. Note: Currently, this assumes that the shapes are your currently selected shapes.\n *\n * @param shapes - The shapes (or shape ids) of the shapes to move.\n *\n * @param delta - The delta in radians to apply to the selection rotation.\n *\n * @example\n * ```ts\n * editor.rotateShapesBy(editor.getSelectedShapeIds(), Math.PI)\n * editor.rotateShapesBy(editor.getSelectedShapeIds(), Math.PI / 2)\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotateShapesBy(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", delta: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "delta",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotateShapesBy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#screenToPage:member(1)",
              "docComment": "/**\n * Convert a point in screen space to a point in the current page space.\n *\n * @param point - The point in screen space.\n *\n * @example\n * ```ts\n * editor.screenToPage({ x: 100, y: 100 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "screenToPage(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        x: number;\n        y: number;\n        z: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "screenToPage"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#scribbles:member",
              "docComment": "/**\n * A manager for the editor's scribbles.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly scribbles: "
                },
                {
                  "kind": "Reference",
                  "text": "ScribbleManager",
                  "canonicalReference": "@tldraw/editor!~ScribbleManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "scribbles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#select:member(1)",
              "docComment": "/**\n * Select one or more shapes.\n *\n * @param ids - The ids to select.\n *\n * @example\n * ```ts\n * editor.select('id1')\n * editor.select('id1', 'id2')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "select(...shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "select"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#selectAll:member(1)",
              "docComment": "/**\n * Select all direct children of the current page.\n *\n * @example\n * ```ts\n * editor.selectAll()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectAll(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "selectAll"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#selectedShapeIds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getSelectedShapeIds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get selectedShapeIds(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectedShapeIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#selectedShapes:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getSelectedShapes` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get selectedShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectedShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#selectionPageBounds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getSelectionPageBounds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get selectionPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectionPageBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#selectionRotatedPageBounds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getSelectionRotatedPageBounds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get selectionRotatedPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectionRotatedPageBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#selectionRotation:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getSelectionRotation` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get selectionRotation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "selectionRotation",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#selectNone:member(1)",
              "docComment": "/**\n * Clear the selection.\n *\n * @example\n * ```ts\n * editor.selectNone()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "selectNone(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "selectNone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#sendBackward:member(1)",
              "docComment": "/**\n * Send shapes backward in the page's object list.\n *\n * @param shapes - The shapes (or shape ids) to move.\n *\n * @example\n * ```ts\n * editor.sendBackward(['id1', 'id2'])\n * editor.sendBackward([box1, box2])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendBackward(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sendBackward"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#sendToBack:member(1)",
              "docComment": "/**\n * Send shapes to the back of the page's object list.\n *\n * @param shapes - The shapes (or shape ids) to move.\n *\n * @example\n * ```ts\n * editor.sendToBack(['id1', 'id2'])\n * editor.sendToBack(box1, box2)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendToBack(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sendToBack"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setCamera:member(1)",
              "docComment": "/**\n * Set the current camera.\n *\n * @param point - The new camera position.\n *\n * @param animation - Options for an animation.\n *\n * @example\n * ```ts\n * editor.setCamera({ x: 0, y: 0})\n * editor.setCamera({ x: 0, y: 0, z: 1.5})\n * editor.setCamera({ x: 0, y: 0, z: 1.5}, { duration: 1000, easing: (t) => t * t })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCamera(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCamera"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setCroppingShape:member(1)",
              "docComment": "/**\n * Set the current cropping shape.\n *\n * @param shape - The shape (or shape id) to set as cropping.\n *\n * @example\n * ```ts\n * editor.setCroppingShape(myShape)\n * editor.setCroppingShape(myShape.id)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCroppingShape(shape: "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCroppingShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setCurrentPage:member(1)",
              "docComment": "/**\n * Set the current page.\n *\n * @param page - The page (or page id) to set as the current page.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.setCurrentPage('page1')\n * editor.setCurrentPage(myPage1)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCurrentPage(page: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "page",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCurrentPage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setCurrentTool:member(1)",
              "docComment": "/**\n * Set the selected tool.\n *\n * @param id - The id of the tool to select.\n *\n * @param info - Arbitrary data to pass along into the transition.\n *\n * @example\n * ```ts\n * editor.setCurrentTool('hand')\n * editor.setCurrentTool('hand', { date: Date.now() })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCurrentTool(id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", info?: "
                },
                {
                  "kind": "Content",
                  "text": "{}"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "info",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCurrentTool"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#setCursor:member",
              "docComment": "/**\n * Set the cursor.\n *\n * @param type - The cursor type.\n *\n * @param rotation - The cursor rotation.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCursor: "
                },
                {
                  "kind": "Content",
                  "text": "(cursor: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLCursor",
                  "canonicalReference": "@tldraw/tlschema!TLCursor:interface"
                },
                {
                  "kind": "Content",
                  "text": ">) => this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "setCursor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setEditingShape:member(1)",
              "docComment": "/**\n * Set the current editing shape.\n *\n * @param shape - The shape (or shape id) to set as editing.\n *\n * @example\n * ```ts\n * editor.setEditingShape(myShape)\n * editor.setEditingShape(myShape.id)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setEditingShape(shape: "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEditingShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setErasingShapes:member(1)",
              "docComment": "/**\n * Set the editor's current erasing shapes.\n *\n * @param shapes - The shapes (or shape ids) to set as hinting.\n *\n * @example\n * ```ts\n * editor.setErasingShapes([myShape])\n * editor.setErasingShapes([myShape.id])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setErasingShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setErasingShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setFocusedGroup:member(1)",
              "docComment": "/**\n * Set the current focused group shape.\n *\n * @param shape - The group shape id (or group shape's id) to set as the focused group shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setFocusedGroup(shape: "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLGroupShape",
                  "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setFocusedGroup"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setHintingShapes:member(1)",
              "docComment": "/**\n * Set the editor's current hinting shapes.\n *\n * @param shapes - The shapes (or shape ids) to set as hinting.\n *\n * @example\n * ```ts\n * editor.setHintingShapes([myShape])\n * editor.setHintingShapes([myShape.id])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setHintingShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setHintingShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setHoveredShape:member(1)",
              "docComment": "/**\n * Set the editor's current hovered shape.\n *\n * @param shapes - The shape (or shape id) to set as hovered.\n *\n * @example\n * ```ts\n * editor.setHoveredShape(myShape)\n * editor.setHoveredShape(myShape.id)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setHoveredShape(shape: "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setHoveredShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setOpacityForNextShapes:member(1)",
              "docComment": "/**\n * Set the opacity for the next shapes. This will effect subsequently created shapes.\n *\n * @param opacity - The opacity to set. Must be a number between 0 and 1 inclusive.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.setOpacityForNextShapes(0.5)\n * editor.setOpacityForNextShapes(0.5, { squashing: true })\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setOpacityForNextShapes(opacity: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "opacity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setOpacityForNextShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setOpacityForSelectedShapes:member(1)",
              "docComment": "/**\n * Set the current opacity. This will effect any selected shapes.\n *\n * @param opacity - The opacity to set. Must be a number between 0 and 1 inclusive.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.setOpacityForSelectedShapes(0.5)\n * editor.setOpacityForSelectedShapes(0.5, { squashing: true })\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setOpacityForSelectedShapes(opacity: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "opacity",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setOpacityForSelectedShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setSelectedShapes:member(1)",
              "docComment": "/**\n * Select one or more shapes.\n *\n * @param ids - The ids to select.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.setSelectedShapes(['id1'])\n * editor.setSelectedShapes(['id1', 'id2'])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setSelectedShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setSelectedShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setStyleForNextShapes:member(1)",
              "docComment": "/**\n * Set the value of a {@link @tldraw/tlschema#StyleProp} for the selected shapes.\n *\n * @param style - The style to set.\n *\n * @param value - The value to set.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.setStyleForSelectedShapes(DefaultColorStyle, 'red')\n * editor.setStyleForSelectedShapes(DefaultColorStyle, 'red', { ephemeral: true })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setStyleForNextShapes<T>(style: "
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setStyleForNextShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#setStyleForSelectedShapes:member(1)",
              "docComment": "/**\n * Set the value of a {@link @tldraw/tlschema#StyleProp}. This change will be applied to the currently selected shapes.\n *\n * @param style - The style to set.\n *\n * @param value - The value to set.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.setStyleForSelectedShapes(DefaultColorStyle, 'red')\n * editor.setStyleForSelectedShapes(DefaultColorStyle, 'red', { ephemeral: true })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setStyleForSelectedShapes<T>(style: "
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setStyleForSelectedShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#shapeUtils:member",
              "docComment": "/**\n * A map of shape utility classes (TLShapeUtils) by shape type.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shapeUtils: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        readonly [K in string]?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeUtil",
                  "canonicalReference": "@tldraw/editor!ShapeUtil:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shapeUtils",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#sharedOpacity:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `editor.sharedOpacity` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get sharedOpacity(): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStyle",
                  "canonicalReference": "@tldraw/editor!SharedStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sharedOpacity",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#sharedStyles:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `editor.sharedStyles` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get sharedStyles(): "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlySharedStyleMap",
                  "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sharedStyles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#sideEffects:member",
              "docComment": "/**\n * A manager for side effects and correct state enforcement.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly sideEffects: "
                },
                {
                  "kind": "Reference",
                  "text": "SideEffectManager",
                  "canonicalReference": "@tldraw/editor!~SideEffectManager:class"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sideEffects",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#slideCamera:member(1)",
              "docComment": "/**\n * Slide the camera in a certain direction.\n *\n * @param opts - Options for the slide\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slideCamera(opts?: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        speed: number;\n        direction: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        friction: number;\n        speedThreshold?: number | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "slideCamera"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#snaps:member",
              "docComment": "/**\n * A manager for the app's snapping feature.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly snaps: "
                },
                {
                  "kind": "Reference",
                  "text": "SnapManager",
                  "canonicalReference": "@tldraw/editor!SnapManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snaps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#stackShapes:member(1)",
              "docComment": "/**\n * Stack shape.\n *\n * @param shapes - The shapes (or shape ids) to stack.\n *\n * @param operation - Whether to stack horizontally or vertically.\n *\n * @param gap - The gap to leave between shapes.\n *\n * @example\n * ```ts\n * editor.stackShapes([box1, box2], 'horizontal', 32)\n * editor.stackShapes(editor.getSelectedShapeIds(), 'horizontal', 32)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stackShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", operation: "
                },
                {
                  "kind": "Content",
                  "text": "'horizontal' | 'vertical'"
                },
                {
                  "kind": "Content",
                  "text": ", gap: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "operation",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "gap",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stackShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#startFollowingUser:member(1)",
              "docComment": "/**\n * Start viewport-following a user.\n *\n * @param userId - The id of the user to follow.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "startFollowingUser(userId: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "userId",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "startFollowingUser"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#stopCameraAnimation:member(1)",
              "docComment": "/**\n * Stop the current camera animation, if any.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stopCameraAnimation(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "stopCameraAnimation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#stopFollowingUser:member(1)",
              "docComment": "/**\n * Stop viewport-following a user.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stopFollowingUser(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "stopFollowingUser"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#store:member",
              "docComment": "/**\n * The editor's store\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Reference",
                  "text": "TLStore",
                  "canonicalReference": "@tldraw/tlschema!TLStore:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#stretchShapes:member(1)",
              "docComment": "/**\n * Stretch shape sizes and positions to fill their common bounding box.\n *\n * @param shapes - The shapes (or shape ids) to stretch.\n *\n * @param operation - Whether to stretch shapes horizontally or vertically.\n *\n * @example\n * ```ts\n * editor.stretchShapes([box1, box2], 'horizontal')\n * editor.stretchShapes(editor.getSelectedShapeIds(), 'horizontal')\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stretchShapes(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", operation: "
                },
                {
                  "kind": "Content",
                  "text": "'horizontal' | 'vertical'"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "operation",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stretchShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#styleProps:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "styleProps: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        [key: string]: "
                },
                {
                  "kind": "Reference",
                  "text": "Map",
                  "canonicalReference": "!Map:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>, string>;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "styleProps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#textMeasure:member",
              "docComment": "/**\n * A helper for measuring text.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly textMeasure: "
                },
                {
                  "kind": "Reference",
                  "text": "TextManager",
                  "canonicalReference": "@tldraw/editor!~TextManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "textMeasure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#toggleLock:member(1)",
              "docComment": "/**\n * Toggle the lock state of one or more shapes. If there is a mix of locked and unlocked shapes, all shapes will be locked.\n *\n * @param shapes - The shapes (or shape ids) to toggle.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toggleLock(shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toggleLock"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#undo:member(1)",
              "docComment": "/**\n * Undo to the last mark.\n *\n * @example\n * ```ts\n * editor.undo()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "undo(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "undo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#ungroupShapes:member(1)",
              "docComment": "/**\n * Ungroup some shapes.\n *\n * @param ids - Ids of the shapes to ungroup. Defaults to the selected shapes.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ungroupShapes(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ungroupShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#ungroupShapes:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ungroupShapes(ids: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "ids",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ungroupShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updateAssets:member(1)",
              "docComment": "/**\n * Update one or more assets.\n *\n * @param assets - The assets to update.\n *\n * @example\n * ```ts\n * editor.updateAssets([{ id: 'asset1', name: 'New name' }])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateAssets(assets: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAssetPartial",
                  "canonicalReference": "@tldraw/tlschema!TLAssetPartial:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "assets",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateAssets"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updateCurrentPageState:member(1)",
              "docComment": "/**\n * Update this instance's page state.\n *\n * @param partial - The partial of the page state object containing the changes.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.updateCurrentPageState({ id: 'page1', editingShapeId: 'shape:123' })\n * editor.updateCurrentPageState({ id: 'page1', editingShapeId: 'shape:123' }, { ephemeral: true })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateCurrentPageState(partial: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLInstancePageState",
                  "canonicalReference": "@tldraw/tlschema!TLInstancePageState:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'editingShapeId' | 'focusedGroupId' | 'pageId' | 'selectedShapeIds'>>"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateCurrentPageState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updateDocumentSettings:member(1)",
              "docComment": "/**\n * Update the global document settings that apply to all users.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateDocumentSettings(settings: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLDocument",
                  "canonicalReference": "@tldraw/tlschema!TLDocument:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "settings",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateDocumentSettings"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updateInstanceState:member(1)",
              "docComment": "/**\n * Update the instance's state.\n *\n * @param partial - A partial object to update the instance state with.\n *\n * @param historyOptions - The history options for the change.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateInstanceState(partial: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLInstance",
                  "canonicalReference": "@tldraw/tlschema!TLInstance:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'currentPageId'>>"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateInstanceState"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updatePage:member(1)",
              "docComment": "/**\n * Update a page.\n *\n * @param partial - The partial of the shape to update.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.updatePage({ id: 'page2', name: 'Page 2' })\n * editor.updatePage({ id: 'page2', name: 'Page 2' }, { squashing: true })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updatePage(partial: "
                },
                {
                  "kind": "Reference",
                  "text": "RequiredKeys",
                  "canonicalReference": "@tldraw/editor!RequiredKeys:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'id'>"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partial",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updatePage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updateShape:member(1)",
              "docComment": "/**\n * Update a shape using a partial of the shape.\n *\n * @param partial - The shape partial to update.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.updateShape({ id: 'box1', type: 'geo', props: { w: 100, h: 100 } })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateShape<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(partial: "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapePartial",
                  "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<T> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partial",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateShape"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updateShapes:member(1)",
              "docComment": "/**\n * Update shapes using partials of each shape.\n *\n * @param partials - The shape partials to update.\n *\n * @param historyOptions - The history options for the change.\n *\n * @example\n * ```ts\n * editor.updateShapes([{ id: 'box1', type: 'geo', props: { w: 100, h: 100 } }])\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateShapes<T extends "
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">(partials: "
                },
                {
                  "kind": "Content",
                  "text": "(null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapePartial",
                  "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
                },
                {
                  "kind": "Content",
                  "text": "<T> | undefined)[]"
                },
                {
                  "kind": "Content",
                  "text": ", historyOptions?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCommandHistoryOptions",
                  "canonicalReference": "@tldraw/editor!~TLCommandHistoryOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "partials",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "historyOptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#updateViewportScreenBounds:member(1)",
              "docComment": "/**\n * Update the viewport. The viewport will measure the size and screen position of its container element. This should be done whenever the container's position on the screen changes.\n *\n * @param center - Whether to preserve the viewport page center as the viewport changes.\n *\n * @example\n * ```ts\n * editor.updateViewportScreenBounds()\n * editor.updateViewportScreenBounds(true)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "updateViewportScreenBounds(center?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "center",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateViewportScreenBounds"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#user:member",
              "docComment": "/**\n * A manager for the user and their preferences.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly user: "
                },
                {
                  "kind": "Reference",
                  "text": "UserPreferencesManager",
                  "canonicalReference": "@tldraw/editor!~UserPreferencesManager:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "user",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#viewportPageBounds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getViewportPageBounds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get viewportPageBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "viewportPageBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#viewportPageCenter:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getViewportPageCenter` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get viewportPageCenter(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "viewportPageCenter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#viewportScreenBounds:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getViewportScreenBounds` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get viewportScreenBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "viewportScreenBounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#viewportScreenCenter:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getViewportScreenCenter` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get viewportScreenCenter(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "viewportScreenCenter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#visitDescendants:member(1)",
              "docComment": "/**\n * Run a visitor function for all descendants of a shape.\n *\n * @param parentId - The id of the parent shape.\n *\n * @param visitor - The visitor function.\n *\n * @example\n * ```ts\n * editor.visitDescendants('frame1', myCallback)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "visitDescendants(parent: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPage",
                  "canonicalReference": "@tldraw/tlschema!TLPage:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLParentId",
                  "canonicalReference": "@tldraw/tlschema!TLParentId:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ", visitor: "
                },
                {
                  "kind": "Content",
                  "text": "(id: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ") => false | void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "visitor",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 10
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "visitDescendants"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#zoomIn:member(1)",
              "docComment": "/**\n * Zoom the camera in.\n *\n * @param animation - The options for an animation.\n *\n * @example\n * ```ts\n * editor.zoomIn()\n * editor.zoomIn(editor.getViewportScreenCenter(), { duration: 120 })\n * editor.zoomIn(editor.inputs.currentScreenPoint, { duration: 120 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoomIn(point?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoomIn"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Editor#zoomLevel:member",
              "docComment": "/**\n * @deprecated\n *\n * Use `getZoomLevel` instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get zoomLevel(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "zoomLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#zoomOut:member(1)",
              "docComment": "/**\n * Zoom the camera out.\n *\n * @param animation - The options for an animation.\n *\n * @example\n * ```ts\n * editor.zoomOut()\n * editor.zoomOut(editor.getViewportScreenCenter(), { duration: 120 })\n * editor.zoomOut(editor.inputs.currentScreenPoint, { duration: 120 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoomOut(point?: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoomOut"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#zoomToBounds:member(1)",
              "docComment": "/**\n * Zoom the camera to fit a bounding box (in the current page space).\n *\n * @param bounds - The bounding box.\n *\n * @param targetZoom - The desired zoom level. Defaults to 0.1.\n *\n * @param animation - The options for an animation.\n *\n * @example\n * ```ts\n * editor.zoomToBounds(myBounds)\n * editor.zoomToBounds(myBounds, 1)\n * editor.zoomToBounds(myBounds, 1, { duration: 100 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoomToBounds(bounds: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", targetZoom?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bounds",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "targetZoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoomToBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#zoomToContent:member(1)",
              "docComment": "/**\n * Move the camera to the nearest content.\n *\n * @param opts - The options for an animation.\n *\n * @example\n * ```ts\n * editor.zoomToContent()\n * editor.zoomToContent({ duration: 200 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoomToContent(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoomToContent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#zoomToFit:member(1)",
              "docComment": "/**\n * Zoom the camera to fit the current page's content in the viewport.\n *\n * @param animation - The options for an animation.\n *\n * @example\n * ```ts\n * editor.zoomToFit()\n * editor.zoomToFit({ duration: 200 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoomToFit(animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoomToFit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Editor#zoomToSelection:member(1)",
              "docComment": "/**\n * Zoom the camera to fit the current selection in the viewport.\n *\n * @param animation - The options for an animation.\n *\n * @example\n * ```ts\n * editor.zoomToSelection()\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zoomToSelection(animation?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnimationOptions",
                  "canonicalReference": "@tldraw/editor!TLAnimationOptions:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "animation",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "zoomToSelection"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Ellipse2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Ellipse2d extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry2d",
              "canonicalReference": "@tldraw/editor!Geometry2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Ellipse2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Ellipse2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Ellipse2d#_edges:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_edges?: "
                },
                {
                  "kind": "Reference",
                  "text": "Edge2d",
                  "canonicalReference": "@tldraw/editor!Edge2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_edges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Ellipse2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Ellipse2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        width: number;\n        height: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Ellipse2d#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        width: number;\n        height: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Ellipse2d#edges:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get edges(): "
                },
                {
                  "kind": "Reference",
                  "text": "Edge2d",
                  "canonicalReference": "@tldraw/editor!Edge2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "edges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Ellipse2d#getBounds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Ellipse2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Content",
                  "text": "any[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Ellipse2d#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Ellipse2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Ellipse2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Ellipse2d#w:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!EPSILON:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EPSILON: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EPSILON",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!ErrorBoundary:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ErrorBoundary extends "
            },
            {
              "kind": "Reference",
              "text": "React.Component",
              "canonicalReference": "@types/react!React.Component:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "React.PropsWithRef",
              "canonicalReference": "@types/react!React.PropsWithRef:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "React.PropsWithChildren",
              "canonicalReference": "@types/react!React.PropsWithChildren:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLErrorBoundaryProps",
              "canonicalReference": "@tldraw/editor!TLErrorBoundaryProps:interface"
            },
            {
              "kind": "Content",
              "text": ">>, "
            },
            {
              "kind": "Reference",
              "text": "TLErrorBoundaryState",
              "canonicalReference": "@tldraw/editor!~TLErrorBoundaryState:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/ErrorBoundary.tsx",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ErrorBoundary",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ErrorBoundary#componentDidCatch:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "componentDidCatch(error: "
                },
                {
                  "kind": "Content",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "componentDidCatch"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ErrorBoundary.getDerivedStateFromError:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static getDerivedStateFromError(error: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        error: "
                },
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "!Error:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "error",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDerivedStateFromError"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ErrorBoundary#render:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "render(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean | "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null | number | "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactFragment",
                  "canonicalReference": "@types/react!React.ReactFragment:type"
                },
                {
                  "kind": "Content",
                  "text": " | string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "render"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ErrorBoundary#state:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "state: "
                },
                {
                  "kind": "Reference",
                  "text": "TLErrorBoundaryState",
                  "canonicalReference": "@tldraw/editor!~TLErrorBoundaryState:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "state",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!ErrorScreen:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function ErrorScreen({ children }: "
            },
            {
              "kind": "Content",
              "text": "{\n    children: any;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/TldrawEditor.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "ErrorScreen"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!EVENT_NAME_MAP:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "EVENT_NAME_MAP: "
            },
            {
              "kind": "Reference",
              "text": "Record",
              "canonicalReference": "!Record:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLEventName",
              "canonicalReference": "@tldraw/editor!TLEventName:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TLPinchEventName",
              "canonicalReference": "@tldraw/editor!TLPinchEventName:type"
            },
            {
              "kind": "Content",
              "text": ">, keyof "
            },
            {
              "kind": "Reference",
              "text": "TLEventHandlers",
              "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "EVENT_NAME_MAP",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 11
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!GapsSnapLine:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type GapsSnapLine = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: 'gaps';\n    direction: 'horizontal' | 'vertical';\n    gaps: "
            },
            {
              "kind": "Reference",
              "text": "Array",
              "canonicalReference": "!Array:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n        startEdge: ["
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "];\n        endEdge: ["
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "];\n    }>;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/managers/SnapManager.ts",
          "releaseTag": "Public",
          "name": "GapsSnapLine",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Geometry2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class Geometry2d "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Geometry2d.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "Geometry2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#_area:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_area: "
                },
                {
                  "kind": "Content",
                  "text": "number | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_area",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#_bounds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_bounds: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_bounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#_snapPoints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_snapPoints: "
                },
                {
                  "kind": "Content",
                  "text": "undefined | "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_snapPoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#_vertices:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_vertices: "
                },
                {
                  "kind": "Content",
                  "text": "undefined | "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_vertices",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Geometry2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Geometry2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(opts: "
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "opts",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#area:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get area(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "area",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#bounds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get bounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "bounds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#center:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get center(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "center",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#distanceToLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distanceToLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceToLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#distanceToPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distanceToPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", hitInside?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "hitInside",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceToPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#getArea:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getArea(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getArea"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#getBounds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", distance?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "distance",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#hitTestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", margin?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", hitInside?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "margin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "hitInside",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#isClosed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isClosed: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isClosed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#isFilled:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFilled: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isFilled",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#isLabel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isLabel: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isLabel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#isPointInBounds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isPointInBounds(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", margin?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "margin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "isPointInBounds"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#isSnappable:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSnappable: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isSnappable",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract nearestPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "nearestPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#nearestPointOnLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPointOnLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPointOnLineSegment"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#snapPoints:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get snapPoints(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snapPoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Geometry2d#toSimpleSvgPath:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toSimpleSvgPath(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toSimpleSvgPath"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Geometry2d#vertices:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get vertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "vertices",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getArcLength:function(1)",
          "docComment": "/**\n * Get the length of an arc between two points on a circle's perimeter.\n *\n * @param C - The circle's center as [x, y].\n *\n * @param r - The circle's radius.\n *\n * @param A - The first point.\n *\n * @param B - The second point.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getArcLength(C: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", r: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", B: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "C",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "r",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "B",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "getArcLength"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getArrowheadPathForType:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getArrowheadPathForType(info: "
            },
            {
              "kind": "Reference",
              "text": "TLArrowInfo",
              "canonicalReference": "@tldraw/editor!~TLArrowInfo:type"
            },
            {
              "kind": "Content",
              "text": ", side: "
            },
            {
              "kind": "Content",
              "text": "'end' | 'start'"
            },
            {
              "kind": "Content",
              "text": ", strokeWidth: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/arrow/arrowheads.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "info",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "side",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "strokeWidth",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "getArrowheadPathForType"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getArrowTerminalsInArrowSpace:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getArrowTerminalsInArrowSpace(editor: "
            },
            {
              "kind": "Reference",
              "text": "Editor",
              "canonicalReference": "@tldraw/editor!Editor:class"
            },
            {
              "kind": "Content",
              "text": ", shape: "
            },
            {
              "kind": "Reference",
              "text": "TLArrowShape",
              "canonicalReference": "@tldraw/tlschema!TLArrowShape:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    start: "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    end: "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/arrow/shared.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "editor",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "shape",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getArrowTerminalsInArrowSpace"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getCursor:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCursor(cursor: "
            },
            {
              "kind": "Reference",
              "text": "TLCursorType",
              "canonicalReference": "@tldraw/tlschema!TLCursorType:type"
            },
            {
              "kind": "Content",
              "text": ", rotation?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", color?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useCursor.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cursor",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "rotation",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            },
            {
              "parameterName": "color",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": true
            }
          ],
          "name": "getCursor"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getCurvedArrowHandlePath:function(1)",
          "docComment": "/**\n * Get a solid path for a curved arrow's handles.\n *\n * @param info - The arrow info.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getCurvedArrowHandlePath(info: "
            },
            {
              "kind": "Reference",
              "text": "TLArrowInfo",
              "canonicalReference": "@tldraw/editor!~TLArrowInfo:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    isStraight: false;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/arrow/curved-arrow.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "info",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getCurvedArrowHandlePath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getFreshUserPreferences:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getFreshUserPreferences(): "
            },
            {
              "kind": "Reference",
              "text": "TLUserPreferences",
              "canonicalReference": "@tldraw/editor!TLUserPreferences:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLUserPreferences.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getFreshUserPreferences"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIncrementedName:function(1)",
          "docComment": "/**\n * Get an incremented name (e.g. New page (2)) from a name (e.g. New page), based on an array of existing names.\n *\n * @param name - The name to increment.\n *\n * @param others - The array of existing names.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIncrementedName(name: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", others: "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/getIncrementedName.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "name",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "others",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getIncrementedName"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIndexAbove:function(1)",
          "docComment": "/**\n * Get the index above a given index.\n *\n * @param below - The index below.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIndexAbove(below: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "below",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getIndexAbove"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIndexBelow:function(1)",
          "docComment": "/**\n * Get the index below a given index.\n *\n * @param above - The index above.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIndexBelow(above: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "above",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "getIndexBelow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIndexBetween:function(1)",
          "docComment": "/**\n * Get the index between two indices.\n *\n * @param below - The index below.\n *\n * @param above - The index above.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIndexBetween(below: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", above?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "below",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "above",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "getIndexBetween"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIndices:function(1)",
          "docComment": "/**\n * Get n number of indices, starting at an index.\n *\n * @param n - The number of indices to get.\n *\n * @param start - The index to start at.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIndices(n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", start?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "start",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "getIndices"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIndicesAbove:function(1)",
          "docComment": "/**\n * Get a number of indices above an index.\n *\n * @param below - The index below.\n *\n * @param n - The number of indices to get.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIndicesAbove(below: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "below",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getIndicesAbove"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIndicesBelow:function(1)",
          "docComment": "/**\n * Get a number of indices below an index.\n *\n * @param above - The index above.\n *\n * @param n - The number of indices to get.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIndicesBelow(above: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "above",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getIndicesBelow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getIndicesBetween:function(1)",
          "docComment": "/**\n * Get a number of indices between two indices.\n *\n * @param below - The index below.\n *\n * @param above - The index above.\n *\n * @param n - The number of indices to get.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getIndicesBetween(below: "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ", above: "
            },
            {
              "kind": "Content",
              "text": "string | undefined"
            },
            {
              "kind": "Content",
              "text": ", n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "below",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "above",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "getIndicesBetween"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getPointerInfo:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPointerInfo(e: "
            },
            {
              "kind": "Reference",
              "text": "PointerEvent",
              "canonicalReference": "!PointerEvent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "React.PointerEvent",
              "canonicalReference": "@types/react!React.PointerEvent:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    point: {\n        x: number;\n        y: number;\n        z: number;\n    };\n    shiftKey: boolean;\n    altKey: boolean;\n    ctrlKey: boolean;\n    pointerId: number;\n    button: number;\n    isPen: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/.tsbuild-api/lib/utils/getPointerInfo.d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "e",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getPointerInfo"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getPointOnCircle:function(1)",
          "docComment": "/**\n * Get a point on the perimeter of a circle.\n *\n * @param cx - The center x of the circle.\n *\n * @param cy - The center y of the circle.\n *\n * @param r - The radius of the circle.\n *\n * @param a - The normalized point on the circle.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPointOnCircle(cx: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", cy: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", r: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "cx",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "cy",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "r",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "getPointOnCircle"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getPolygonVertices:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPolygonVertices(width: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", height: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", sides: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "width",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "height",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "sides",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "getPolygonVertices"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getSolidCurvedArrowPath:function(1)",
          "docComment": "/**\n * Get a solid path for a curved arrow's body.\n *\n * @param info - The arrow info.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSolidCurvedArrowPath(info: "
            },
            {
              "kind": "Reference",
              "text": "TLArrowInfo",
              "canonicalReference": "@tldraw/editor!~TLArrowInfo:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    isStraight: false;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/arrow/curved-arrow.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "info",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getSolidCurvedArrowPath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getSolidStraightArrowPath:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSolidStraightArrowPath(info: "
            },
            {
              "kind": "Reference",
              "text": "TLArrowInfo",
              "canonicalReference": "@tldraw/editor!~TLArrowInfo:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    isStraight: true;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/arrow/straight-arrow.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "info",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getSolidStraightArrowPath"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!getStarBounds:var",
          "docComment": "/**\n * Gets the width/height of a star given its input bounds.\n *\n * @param sides - Number of sides\n *\n * @param w - T target width\n *\n * @param h - Target height\n *\n * @returns Box2d\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getStarBounds: "
            },
            {
              "kind": "Content",
              "text": "(sides: number, w: number, h: number) => "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "getStarBounds",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getStraightArrowHandlePath:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getStraightArrowHandlePath(info: "
            },
            {
              "kind": "Reference",
              "text": "TLArrowInfo",
              "canonicalReference": "@tldraw/editor!~TLArrowInfo:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    isStraight: true;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/arrow/straight-arrow.ts",
          "returnTypeTokenRange": {
            "startIndex": 4,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "info",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            }
          ],
          "name": "getStraightArrowHandlePath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getSvgPathFromPoints:function(1)",
          "docComment": "/**\n * Turn an array of points into a path of quadradic curves.\n *\n * @param points - The points returned from perfect-freehand\n *\n * @param closed - Whether the stroke is closed\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSvgPathFromPoints(points: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", closed?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/getSvgPathFromPoints.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "points",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "closed",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "isOptional": true
            }
          ],
          "name": "getSvgPathFromPoints"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getSweep:function(1)",
          "docComment": "/**\n * Get the \"sweep\" or short distance between two points on a circle's perimeter.\n *\n * @param C - The center of the circle.\n *\n * @param A - The first point.\n *\n * @param B - The second point.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getSweep(C: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", B: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "C",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "B",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "getSweep"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!getUserPreferences:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getUserPreferences(): "
            },
            {
              "kind": "Reference",
              "text": "TLUserPreferences",
              "canonicalReference": "@tldraw/editor!TLUserPreferences:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLUserPreferences.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getUserPreferences"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!GRID_STEPS:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "GRID_STEPS: "
            },
            {
              "kind": "Content",
              "text": "{\n    min: number;\n    mid: number;\n    step: number;\n}[]"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/constants.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "GRID_STEPS",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Group2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Group2d extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry2d",
              "canonicalReference": "@tldraw/editor!Geometry2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Group2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Group2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Group2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Group2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed' | 'isFilled'> & {\n        children: "
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2d",
                  "canonicalReference": "@tldraw/editor!Geometry2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Group2d#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2d",
                  "canonicalReference": "@tldraw/editor!Geometry2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Group2d#distanceToPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distanceToPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", hitInside?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "hitInside",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceToPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Group2d#getArea:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getArea(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getArea"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Group2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Group2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Group2d#hitTestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", margin: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", hitInside: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "margin",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "hitInside",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Group2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Group2d#toSimpleSvgPath:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toSimpleSvgPath(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toSimpleSvgPath"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!GroupShapeUtil:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class GroupShapeUtil extends "
            },
            {
              "kind": "Reference",
              "text": "ShapeUtil",
              "canonicalReference": "@tldraw/editor!ShapeUtil:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLGroupShape",
              "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/group/GroupShapeUtil.tsx",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "GroupShapeUtil",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil#canBind:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canBind: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canBind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil#component:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "component(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLGroupShape",
                  "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": " | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "component"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil#getDefaultProps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getDefaultProps(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLGroupShape",
                  "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
                },
                {
                  "kind": "Content",
                  "text": "['props']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getDefaultProps"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil#getGeometry:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getGeometry(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLGroupShape",
                  "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2d",
                  "canonicalReference": "@tldraw/editor!Geometry2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getGeometry"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil#hideSelectionBoundsFg:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideSelectionBoundsFg: "
                },
                {
                  "kind": "Content",
                  "text": "() => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hideSelectionBoundsFg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil#indicator:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "indicator(shape: "
                },
                {
                  "kind": "Reference",
                  "text": "TLGroupShape",
                  "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "JSX.Element",
                  "canonicalReference": "@types/react!__global.JSX.Element:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "indicator"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil.migrations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static migrations: "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@tldraw/store\")."
                },
                {
                  "kind": "Reference",
                  "text": "Migrations",
                  "canonicalReference": "@tldraw/store!Migrations:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "migrations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil#onChildrenChange:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChildrenChange: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnChildrenChangeHandler",
                  "canonicalReference": "@tldraw/editor!TLOnChildrenChangeHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLGroupShape",
                  "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onChildrenChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil.props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static props: "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@tldraw/tlschema\")."
                },
                {
                  "kind": "Reference",
                  "text": "ShapeProps",
                  "canonicalReference": "@tldraw/tlschema!ShapeProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLGroupShape",
                  "canonicalReference": "@tldraw/tlschema!TLGroupShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!GroupShapeUtil.type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static type: "
                },
                {
                  "kind": "Content",
                  "text": "\"group\""
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!hardReset:function(1)",
          "docComment": "/**\n * Clear the database of all data associated with tldraw.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hardReset({ shouldReload }?: "
            },
            {
              "kind": "Content",
              "text": "{\n    shouldReload?: boolean | undefined;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/sync/hardReset.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ shouldReload }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            }
          ],
          "name": "hardReset"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!hardResetEditor:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function hardResetEditor(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/hardResetEditor.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "hardResetEditor"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!HIT_TEST_MARGIN:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "HIT_TEST_MARGIN = "
            },
            {
              "kind": "Content",
              "text": "8"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/constants.ts",
          "initializerTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "HIT_TEST_MARGIN",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!HTMLContainer:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function HTMLContainer({ children, className, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "HTMLContainerProps",
              "canonicalReference": "@tldraw/editor!HTMLContainerProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/HTMLContainer.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children, className, ...rest }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "HTMLContainer"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!HTMLContainerProps:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type HTMLContainerProps = "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/HTMLContainer.tsx",
          "releaseTag": "Public",
          "name": "HTMLContainerProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!intersectLineSegmentPolygon:function(1)",
          "docComment": "/**\n * Find the intersections between a line segment and a closed polygon.\n *\n * @param a1 - The segment's first point.\n *\n * @param a2 - The segment's second point.\n *\n * @param points - The points in the polygon.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function intersectLineSegmentPolygon(a1: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", a2: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", points: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "null | "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/intersect.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a2",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "points",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "intersectLineSegmentPolygon"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!intersectLineSegmentPolyline:function(1)",
          "docComment": "/**\n * Find the intersections between a line segment and a polyline.\n *\n * @param a1 - The segment's first point.\n *\n * @param a2 - The segment's second point.\n *\n * @param points - The points in the polyline.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function intersectLineSegmentPolyline(a1: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", a2: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", points: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "null | "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/intersect.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a2",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "points",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "intersectLineSegmentPolyline"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!intersectPolygonPolygon:function(1)",
          "docComment": "/**\n * Create a new convex polygon as the intersection of two convex polygons.\n *\n * @param polygonA - An array of points representing the first polygon.\n *\n * @param polygonB - An array of points representing the second polygon.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function intersectPolygonPolygon(polygonA: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", polygonB: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "null | "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/intersect.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "polygonA",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "polygonB",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "intersectPolygonPolygon"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!isAngleBetween:function(1)",
          "docComment": "/**\n * Is angle c between angles a and b?\n *\n * @param a - The first angle.\n *\n * @param b - The second angle.\n *\n * @param c - The third angle.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isAngleBetween(a: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", c: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "c",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "isAngleBetween"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!isSafeFloat:var",
          "docComment": "/**\n * Check if a float is safe to use. ie: Not too big or small.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "isSafeFloat: "
            },
            {
              "kind": "Content",
              "text": "(n: number) => boolean"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "isSafeFloat",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!lerpAngles:function(1)",
          "docComment": "/**\n * Interpolate an angle between two angles.\n *\n * @param a0 - The first angle.\n *\n * @param a1 - The second angle.\n *\n * @param t - The interpolation value.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function lerpAngles(a0: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", a1: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", t: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a0",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "t",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "lerpAngles"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!linesIntersect:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function linesIntersect(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", B: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", C: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", D: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/intersect.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "B",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "C",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "D",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "linesIntersect"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!LoadingScreen:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function LoadingScreen({ children }: "
            },
            {
              "kind": "Content",
              "text": "{\n    children: any;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/TldrawEditor.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "LoadingScreen"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!loadSessionStateSnapshotIntoStore:function(1)",
          "docComment": "/**\n * Loads a snapshot of the editor's instance state into the store of a new editor instance.\n *\n * @param store - The store to load the instance state into\n *\n * @param snapshot - The instance state snapshot to load\n *\n * @returns \n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loadSessionStateSnapshotIntoStore(store: "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": ", snapshot: "
            },
            {
              "kind": "Reference",
              "text": "TLSessionStateSnapshot",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLSessionStateSnapshot.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "store",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "snapshot",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "loadSessionStateSnapshotIntoStore"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!longAngleDist:function(1)",
          "docComment": "/**\n * Get the long angle distance between two angles.\n *\n * @param a0 - The first angle.\n *\n * @param a1 - The second angle.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function longAngleDist(a0: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", a1: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a0",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "longAngleDist"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!loopToHtmlElement:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function loopToHtmlElement(elm: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "elm",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "loopToHtmlElement"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Matrix2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Matrix2d "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Matrix2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Matrix2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Matrix2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Matrix2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(a: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", c: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", d: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", e: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "a",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "b",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "c",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "d",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "e",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "f",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Matrix2d#a:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "a: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "a",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Absolute:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Absolute(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Absolute"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.applyToBounds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static applyToBounds(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", box: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "box",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyToBounds"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#applyToPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "applyToPoint(point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyToPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.applyToPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static applyToPoint(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", point: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "point",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyToPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#applyToPoints:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "applyToPoints(points: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "points",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyToPoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.applyToPoints:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static applyToPoints(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", points: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "points",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyToPoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.applyToXY:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static applyToXY(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "applyToXY"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Matrix2d#b:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "b",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Matrix2d#c:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "c: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "c",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Cast:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Cast(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cast"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Compose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Compose(...matrices: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "matrices",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Compose"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Matrix2d#d:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "d: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "d",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#decompose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decompose(): "
                },
                {
                  "kind": "Reference",
                  "text": "MatrixInfo",
                  "canonicalReference": "@tldraw/editor!~MatrixInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "decompose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Decompose:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Decompose(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MatrixInfo",
                  "canonicalReference": "@tldraw/editor!~MatrixInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Decompose"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#decomposed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "decomposed(): "
                },
                {
                  "kind": "Reference",
                  "text": "MatrixInfo",
                  "canonicalReference": "@tldraw/editor!~MatrixInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "decomposed"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Matrix2d#e:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "e: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "e",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#equals:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Matrix2d#f:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "f",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.From:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static From(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "From"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#identity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "identity(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Identity:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Identity(): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "Identity"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Inverse:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Inverse(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Inverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#invert:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invert(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "invert"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#multiply:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "multiply(m: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "multiply"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Multiply:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Multiply(m1: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ", m2: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m1",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "m2",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Multiply"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#point:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "point(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "point"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Point:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Point(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Point"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#rotate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotate(r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", cx?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", cy?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "cy",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Rotate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Rotate(r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", cx?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", cy?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "cy",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Rotate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#rotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotation(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Rotation:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Rotation(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Rotation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#scale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "scale(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "scale"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Matrix2d.Scale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Scale: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        (x: number, y: number): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        (x: number, y: number, cx: number, cy: number): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "Scale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#setTo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTo(model: "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2dModel",
                  "canonicalReference": "@tldraw/editor!Matrix2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "model",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Smooth:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Smooth(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", precision?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "precision",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Smooth"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#toCssString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toCssString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toCssString"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.toCssString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static toCssString(m: "
                },
                {
                  "kind": "Reference",
                  "text": "MatLike",
                  "canonicalReference": "@tldraw/editor!~MatLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "m",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "toCssString"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d#translate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "translate(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "translate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Matrix2d.Translate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Translate(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Matrix2d",
                  "canonicalReference": "@tldraw/editor!Matrix2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Translate"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!Matrix2dModel:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Matrix2dModel "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Matrix2d.ts",
          "releaseTag": "Public",
          "name": "Matrix2dModel",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!Matrix2dModel#a:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "a: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "a",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!Matrix2dModel#b:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "b: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "b",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!Matrix2dModel#c:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "c: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "c",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!Matrix2dModel#d:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "d: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "d",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!Matrix2dModel#e:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "e: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "e",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!Matrix2dModel#f:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "f: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "f",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!openWindow:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function openWindow(url: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", target?: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/window-open.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "url",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "target",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "openWindow"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!perimeterOfEllipse:function(1)",
          "docComment": "/**\n * Find the approximate perimeter of an ellipse.\n *\n * @param rx - The ellipse's x radius.\n *\n * @param ry - The ellipse's y radius.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function perimeterOfEllipse(rx: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", ry: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rx",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "ry",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "perimeterOfEllipse"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!PI:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "PI: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "PI",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!PI2:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "PI2: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "PI2",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointInBounds:function(1)",
          "docComment": "/**\n * Get whether a point is inside of a bounds.\n *\n * @param A - The point to check.\n *\n * @param b - The bounds to check.\n *\n * @returns Boolean\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointInBounds(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "pointInBounds"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointInCircle:function(1)",
          "docComment": "/**\n * Get whether a point is inside of a circle.\n *\n * @param A - The point to check.\n *\n * @param C - The circle's center point as [x, y].\n *\n * @param r - The circle's radius.\n *\n * @returns Boolean\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointInCircle(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", C: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", r: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "C",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "r",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "pointInCircle"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointInEllipse:function(1)",
          "docComment": "/**\n * Get whether a point is inside of an ellipse.\n *\n * @param point - The point to check.\n *\n * @param center - The ellipse's center point as [x, y].\n *\n * @param rx - The ellipse's x radius.\n *\n * @param ry - The ellipse's y radius.\n *\n * @param rotation - The ellipse's rotation.\n *\n * @returns Boolean\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointInEllipse(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", C: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", rx: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", ry: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", rotation?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "C",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "rx",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "ry",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            },
            {
              "parameterName": "rotation",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": true
            }
          ],
          "name": "pointInEllipse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointInPolygon:function(1)",
          "docComment": "/**\n * Get whether a point is inside of a polygon.\n * ```ts\n * const result = pointInPolygon(myPoint, myPoints)\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointInPolygon(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", points: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "points",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "pointInPolygon"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointInPolyline:function(1)",
          "docComment": "/**\n * Hit test a point and a polyline using a minimum distance.\n *\n * @param A - The point to check.\n *\n * @param points - The points that make up the polyline.\n *\n * @param distance - The mininum distance that qualifies a hit.\n *\n * @returns Boolean\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointInPolyline(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", points: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", distance?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "points",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "distance",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "pointInPolyline"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointInRect:function(1)",
          "docComment": "/**\n * Get whether a point is inside of a rectangle.\n *\n * @param A - The point to check.\n *\n * @param point - The rectangle's top left point as [x, y].\n *\n * @param size - The rectangle's size as [width, height].\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointInRect(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", point: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", size: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "point",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "size",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "pointInRect"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointNearToLineSegment:function(1)",
          "docComment": "/**\n * Get whether a point is within a certain distance from a line segment.\n *\n * @param A - The point to check.\n *\n * @param p1 - The polyline's first point.\n *\n * @param p2 - The polyline's second point.\n *\n * @param distance - The mininum distance that qualifies a hit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointNearToLineSegment(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", p1: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", p2: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", distance?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "p1",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "p2",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "distance",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": true
            }
          ],
          "name": "pointNearToLineSegment"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!pointNearToPolyline:function(1)",
          "docComment": "/**\n * Get whether a point is within a certain distance from a polyline.\n *\n * @param A - The point to check.\n *\n * @param points - The points that make up the polyline.\n *\n * @param distance - The mininum distance that qualifies a hit.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function pointNearToPolyline(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ", points: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", distance?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "points",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isOptional": false
            },
            {
              "parameterName": "distance",
              "parameterTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "isOptional": true
            }
          ],
          "name": "pointNearToPolyline"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!PointsSnapLine:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type PointsSnapLine = "
            },
            {
              "kind": "Content",
              "text": "{\n    id: string;\n    type: 'points';\n    points: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/managers/SnapManager.ts",
          "releaseTag": "Public",
          "name": "PointsSnapLine",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Polygon2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Polygon2d extends "
            },
            {
              "kind": "Reference",
              "text": "Polyline2d",
              "canonicalReference": "@tldraw/editor!Polyline2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Polygon2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Polygon2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Polygon2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Polygon2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        points: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!polygonsIntersect:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function polygonsIntersect(a: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/intersect.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "polygonsIntersect"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Polyline2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Polyline2d extends "
            },
            {
              "kind": "Reference",
              "text": "Geometry2d",
              "canonicalReference": "@tldraw/editor!Geometry2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Polyline2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Polyline2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Polyline2d#_length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_length?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Polyline2d#_segments:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_segments?: "
                },
                {
                  "kind": "Reference",
                  "text": "Edge2d",
                  "canonicalReference": "@tldraw/editor!Edge2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "_segments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Polyline2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Polyline2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed' | 'isFilled'> & {\n        points: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Polyline2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Polyline2d#hitTestLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hitTestLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", zoom: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "zoom",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "hitTestLineSegment"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Polyline2d#length:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get length(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "length",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Polyline2d#nearestPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nearestPoint(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nearestPoint"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Polyline2d#points:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "points: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "points",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Polyline2d#segments:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get segments(): "
                },
                {
                  "kind": "Reference",
                  "text": "Edge2d",
                  "canonicalReference": "@tldraw/editor!Edge2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "segments",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!PositionedOnCanvas:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "PositionedOnCanvas: "
            },
            {
              "kind": "Content",
              "text": "import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "MemoExoticComponent",
              "canonicalReference": "@types/react!React.MemoExoticComponent:type"
            },
            {
              "kind": "Content",
              "text": "<({ "
            },
            {
              "kind": "Reference",
              "text": "x",
              "canonicalReference": "@tldraw/editor!~__type#x"
            },
            {
              "kind": "Content",
              "text": ": offsetX, "
            },
            {
              "kind": "Reference",
              "text": "y",
              "canonicalReference": "@tldraw/editor!~__type#y"
            },
            {
              "kind": "Content",
              "text": ": offsetY, rotation, ...rest }: {\n    x?: number | undefined;\n    y?: number | undefined;\n    rotation?: number | undefined;\n} & "
            },
            {
              "kind": "Reference",
              "text": "HTMLProps",
              "canonicalReference": "@types/react!React.HTMLProps:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ">) => "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/PositionedOnCanvas.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "PositionedOnCanvas",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!precise:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function precise(A: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "A",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "precise"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!preventDefault:function(1)",
          "docComment": "/**\n * This function calls `event.preventDefault()` for you. Why is that useful?\n *\n * Beacuase if you enable `window.preventDefaultLogging = true` it'll log out a message when it happens. Because we use console.warn rather than (log) you'll get a stack trace in the inspector telling you exactly where it happened. This is important because `e.preventDefault()` is the source of many bugs, but unfortuantly it can't be avoided because it also stops a lot of default behaviour which doesn't make sense in our UI\n *\n * @param event - To prevent default on\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function preventDefault(event: "
            },
            {
              "kind": "Reference",
              "text": "Event",
              "canonicalReference": "!Event:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "React.BaseSyntheticEvent",
              "canonicalReference": "@types/react!React.BaseSyntheticEvent:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "event",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "preventDefault"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!radiansToDegrees:function(1)",
          "docComment": "/**\n * Convert radians to degrees.\n *\n * @param r - The degree in radians.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function radiansToDegrees(r: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "r",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "radiansToDegrees"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!rangeIntersection:function(1)",
          "docComment": "/**\n * Finds the intersection of two ranges.\n *\n * @param a0 - The start point in the A range\n *\n * @param a1 - The end point in the A range\n *\n * @param b0 - The start point in the B range\n *\n * @param b1 - The end point in the B range\n *\n * @returns The intersection of the ranges, or null if no intersection\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function rangeIntersection(a0: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", a1: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b0: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", b1: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "[number, number] | null"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 9,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a0",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "b0",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            },
            {
              "parameterName": "b1",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "isOptional": false
            }
          ],
          "name": "rangeIntersection"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap:class",
          "docComment": "/**\n * A map of {@link @tldraw/tlschema#StyleProp | StyleProps} to their {@link SharedStyle} values. See {@link Editor.sharedStyles}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReadonlySharedStyleMap "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/SharedStylesMap.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ReadonlySharedStyleMap",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#[Symbol.iterator]:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Symbol.iterator",
                  "canonicalReference": "!SymbolConstructor#iterator"
                },
                {
                  "kind": "Content",
                  "text": "](): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<["
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>, "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStyle",
                  "canonicalReference": "@tldraw/editor!SharedStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "[Symbol.iterator]"
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ReadonlySharedStyleMap` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(entries?: "
                },
                {
                  "kind": "Reference",
                  "text": "Iterable",
                  "canonicalReference": "!Iterable:interface"
                },
                {
                  "kind": "Content",
                  "text": "<["
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>, "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStyle",
                  "canonicalReference": "@tldraw/editor!SharedStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>]>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entries",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 7
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#entries:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "entries(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<["
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>, "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStyle",
                  "canonicalReference": "@tldraw/editor!SharedStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "entries"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#equals:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(other: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlySharedStyleMap",
                  "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#get:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<T>(prop: "
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SharedStyle",
                  "canonicalReference": "@tldraw/editor!SharedStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "<T> | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "prop",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#getAsKnownValue:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getAsKnownValue<T>(prop: "
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "prop",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getAsKnownValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#keys:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keys(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StyleProp",
                  "canonicalReference": "@tldraw/tlschema!StyleProp:class"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "keys"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#size:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get size(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ReadonlySharedStyleMap#values:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "values(): "
                },
                {
                  "kind": "Reference",
                  "text": "IterableIterator",
                  "canonicalReference": "!IterableIterator:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SharedStyle",
                  "canonicalReference": "@tldraw/editor!SharedStyle:type"
                },
                {
                  "kind": "Content",
                  "text": "<unknown>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "values"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Rectangle2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Rectangle2d extends "
            },
            {
              "kind": "Reference",
              "text": "Polygon2d",
              "canonicalReference": "@tldraw/editor!Polygon2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Rectangle2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Rectangle2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Rectangle2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Rectangle2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        x?: number;\n        y?: number;\n        width: number;\n        height: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Rectangle2d#getBounds:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getBounds(): "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getBounds"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Rectangle2d#h:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "h: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "h",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Rectangle2d#w:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "w: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "w",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Rectangle2d#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Rectangle2d#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!refreshPage:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function refreshPage(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/refreshPage.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "refreshPage"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!releasePointerCapture:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function releasePointerCapture(element: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", event: "
            },
            {
              "kind": "Reference",
              "text": "PointerEvent",
              "canonicalReference": "!PointerEvent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "React.PointerEvent",
              "canonicalReference": "@types/react!React.PointerEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "event",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "name": "releasePointerCapture"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!RequiredKeys:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RequiredKeys<T, K extends "
            },
            {
              "kind": "Content",
              "text": "keyof T"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<T, K>> & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<T, K>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/misc-types.ts",
          "releaseTag": "Public",
          "name": "RequiredKeys",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 9
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!resizeBox:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function resizeBox(shape: "
            },
            {
              "kind": "Reference",
              "text": "TLBaseBoxShape",
              "canonicalReference": "@tldraw/editor!TLBaseBoxShape:type"
            },
            {
              "kind": "Content",
              "text": ", info: "
            },
            {
              "kind": "Content",
              "text": "{\n    newPoint: "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    handle: "
            },
            {
              "kind": "Reference",
              "text": "TLResizeHandle",
              "canonicalReference": "@tldraw/editor!TLResizeHandle:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mode: "
            },
            {
              "kind": "Reference",
              "text": "TLResizeMode",
              "canonicalReference": "@tldraw/editor!TLResizeMode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    scaleX: number;\n    scaleY: number;\n    initialBounds: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    initialShape: "
            },
            {
              "kind": "Reference",
              "text": "TLBaseBoxShape",
              "canonicalReference": "@tldraw/editor!TLBaseBoxShape:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ", opts?: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    minWidth: number;\n    maxWidth: number;\n    minHeight: number;\n    maxHeight: number;\n}>"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    x: number;\n    y: number;\n    props: {\n        w: number;\n        h: number;\n    };\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/resizeBox.ts",
          "returnTypeTokenRange": {
            "startIndex": 18,
            "endIndex": 19
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "shape",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "info",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 14
              },
              "isOptional": false
            },
            {
              "parameterName": "opts",
              "parameterTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 17
              },
              "isOptional": true
            }
          ],
          "name": "resizeBox"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!ResizeBoxOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type ResizeBoxOptions = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    minWidth: number;\n    maxWidth: number;\n    minHeight: number;\n    maxHeight: number;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/shared/resizeBox.ts",
          "releaseTag": "Public",
          "name": "ResizeBoxOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!ROTATE_CORNER_TO_SELECTION_CORNER:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ROTATE_CORNER_TO_SELECTION_CORNER: "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly top_left_rotate: \"top_left\";\n    readonly top_right_rotate: \"top_right\";\n    readonly bottom_right_rotate: \"bottom_right\";\n    readonly bottom_left_rotate: \"bottom_left\";\n    readonly mobile_rotate: \"top_left\";\n}"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ROTATE_CORNER_TO_SELECTION_CORNER",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!RotateCorner:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type RotateCorner = "
            },
            {
              "kind": "Content",
              "text": "'bottom_left_rotate' | 'bottom_right_rotate' | 'mobile_rotate' | 'top_left_rotate' | 'top_right_rotate'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "releaseTag": "Public",
          "name": "RotateCorner",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!rotateSelectionHandle:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function rotateSelectionHandle(handle: "
            },
            {
              "kind": "Reference",
              "text": "SelectionHandle",
              "canonicalReference": "@tldraw/editor!SelectionHandle:type"
            },
            {
              "kind": "Content",
              "text": ", rotation: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "SelectionHandle",
              "canonicalReference": "@tldraw/editor!SelectionHandle:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "handle",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "rotation",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "rotateSelectionHandle"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!runtime:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "runtime: "
            },
            {
              "kind": "Content",
              "text": "{\n    openWindow: (url: string, target: string) => void;\n    refreshPage: () => void;\n    hardReset: () => void;\n}"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/runtime.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "runtime",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!SelectionCorner:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SelectionCorner = "
            },
            {
              "kind": "Content",
              "text": "'bottom_left' | 'bottom_right' | 'top_left' | 'top_right'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "releaseTag": "Public",
          "name": "SelectionCorner",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!SelectionEdge:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SelectionEdge = "
            },
            {
              "kind": "Content",
              "text": "'bottom' | 'left' | 'right' | 'top'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "releaseTag": "Public",
          "name": "SelectionEdge",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!SelectionHandle:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SelectionHandle = "
            },
            {
              "kind": "Reference",
              "text": "SelectionCorner",
              "canonicalReference": "@tldraw/editor!SelectionCorner:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SelectionEdge",
              "canonicalReference": "@tldraw/editor!SelectionEdge:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Box2d.ts",
          "releaseTag": "Public",
          "name": "SelectionHandle",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!setPointerCapture:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setPointerCapture(element: "
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ", event: "
            },
            {
              "kind": "Reference",
              "text": "PointerEvent",
              "canonicalReference": "!PointerEvent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "React.PointerEvent",
              "canonicalReference": "@types/react!React.PointerEvent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/dom.ts",
          "returnTypeTokenRange": {
            "startIndex": 10,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "element",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "event",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "isOptional": false
            }
          ],
          "name": "setPointerCapture"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!setRuntimeOverrides:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setRuntimeOverrides(input: "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<typeof "
            },
            {
              "kind": "Reference",
              "text": "runtime",
              "canonicalReference": "@tldraw/editor!runtime:var"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/runtime.ts",
          "returnTypeTokenRange": {
            "startIndex": 6,
            "endIndex": 7
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "input",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isOptional": false
            }
          ],
          "name": "setRuntimeOverrides"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!setUserPreferences:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setUserPreferences(user: "
            },
            {
              "kind": "Reference",
              "text": "TLUserPreferences",
              "canonicalReference": "@tldraw/editor!TLUserPreferences:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLUserPreferences.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "user",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "setUserPreferences"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!ShapeIndicator:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "ShapeIndicator: "
            },
            {
              "kind": "Reference",
              "text": "React.NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<{\n    id: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    color?: string | undefined;\n    opacity?: number | undefined;\n    className?: string | undefined;\n}>"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/ShapeIndicator.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ShapeIndicator",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!ShapeUtil:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class ShapeUtil<Shape extends "
            },
            {
              "kind": "Reference",
              "text": "TLUnknownShape",
              "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "TLUnknownShape",
              "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "Shape",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "isAbstract": true,
          "name": "ShapeUtil",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!ShapeUtil:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `ShapeUtil` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "editor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canBind:member",
              "docComment": "/**\n * Whether the shape can be bound to by an arrow.\n *\n * @param _otherShape - The other shape attempting to bind to this shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canBind: "
                },
                {
                  "kind": "Content",
                  "text": "<K>(_shape: Shape, _otherShape?: K | undefined) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canBind",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canCrop:member",
              "docComment": "/**\n * Whether the shape can be cropped.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canCrop: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canCrop",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canDropShapes:member(1)",
              "docComment": "/**\n * Get whether the shape can receive children of a given type.\n *\n * @param shape - The shape type.\n *\n * @param shapes - The shapes that are being dropped.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canDropShapes(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": ", shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "shapes",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "canDropShapes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canEdit:member",
              "docComment": "/**\n * Whether the shape can be double clicked to edit.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canEdit: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canEdit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canEditInReadOnly:member",
              "docComment": "/**\n * Whether the shape can be edited in read-only mode.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canEditInReadOnly: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canEditInReadOnly",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canReceiveNewChildrenOfType:member(1)",
              "docComment": "/**\n * Get whether the shape can receive children of a given type.\n *\n * @param type - The shape type.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canReceiveNewChildrenOfType(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": ", type: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "['type']"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "canReceiveNewChildrenOfType"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canResize:member",
              "docComment": "/**\n * Whether the shape can be resized.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canResize: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canResize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canScroll:member",
              "docComment": "/**\n * Whether the shape can be scrolled while editing.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canScroll: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canScroll",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canSnap:member",
              "docComment": "/**\n * Whether the shape can be snapped to by another shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canSnap: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canSnap",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#canUnmount:member",
              "docComment": "/**\n * Whether the shape should unmount when not visible in the editor. Consider keeping this to false if the shape's `component` has local state.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "canUnmount: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "canUnmount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#component:member(1)",
              "docComment": "/**\n * Get a JSX element for the shape (as an HTML element).\n *\n * @param shape - The shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract component(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "component"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#editor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "editor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#getCanvasSvgDefs:member(1)",
              "docComment": "/**\n * Return elements to be added to the \\<defs\\> section of the canvases SVG context. This can be used to define SVG content (e.g. patterns & masks) that can be referred to by ID from svg elements returned by `component`.\n *\n * Each def should have a unique `key`. If multiple defs from different shapes all have the same key, only one will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCanvasSvgDefs(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilCanvasSvgDef",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilCanvasSvgDef:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCanvasSvgDefs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#getDefaultProps:member(1)",
              "docComment": "/**\n * Get the default props for a shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract getDefaultProps(): "
                },
                {
                  "kind": "Content",
                  "text": "Shape['props']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "getDefaultProps"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#getGeometry:member(1)",
              "docComment": "/**\n * Get the shape's geometry.\n *\n * @param shape - The shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract getGeometry(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2d",
                  "canonicalReference": "@tldraw/editor!Geometry2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "getGeometry"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#getHandles:member(1)",
              "docComment": "/**\n * Get an array of handle models for the shape. This is an optional method.\n *\n * @param shape - The shape.\n *\n * @example\n * ```ts\n * util.getHandles?.(myShape)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getHandles?(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "TLHandle",
                  "canonicalReference": "@tldraw/tlschema!TLHandle:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "getHandles"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#getOutlineSegments:member(1)",
              "docComment": "/**\n * Get an array of outline segments for the shape. For most shapes, this will be a single segment that includes the entire outline. For shapes with handles, this might be segments of the outline between each handle.\n *\n * @param shape - The shape.\n *\n * @example\n * ```ts\n * util.getOutlineSegments(myShape)\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOutlineSegments(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOutlineSegments"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#hideResizeHandles:member",
              "docComment": "/**\n * Whether the shape should hide its resize handles when selected.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideResizeHandles: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hideResizeHandles",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#hideRotateHandle:member",
              "docComment": "/**\n * Whether the shape should hide its resize handles when selected.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideRotateHandle: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hideRotateHandle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#hideSelectionBoundsBg:member",
              "docComment": "/**\n * Whether the shape should hide its selection bounds background when selected.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideSelectionBoundsBg: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hideSelectionBoundsBg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#hideSelectionBoundsFg:member",
              "docComment": "/**\n * Whether the shape should hide its selection bounds foreground when selected.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hideSelectionBoundsFg: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hideSelectionBoundsFg",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#indicator:member(1)",
              "docComment": "/**\n * Get JSX describing the shape's indicator (as an SVG element).\n *\n * @param shape - The shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract indicator(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "indicator"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#isAspectRatioLocked:member",
              "docComment": "/**\n * Whether the shape's aspect ratio is locked.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isAspectRatioLocked: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilFlag",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isAspectRatioLocked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil.migrations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static migrations?: "
                },
                {
                  "kind": "Reference",
                  "text": "Migrations",
                  "canonicalReference": "@tldraw/store!Migrations:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "migrations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onBeforeCreate:member",
              "docComment": "/**\n * A callback called just before a shape is created. This method provides a last chance to modify the created shape.\n *\n * @param next - The next shape.\n *\n * @returns The next shape or void.\n *\n * @example\n * ```ts\n * onBeforeCreate = (next) => {\n * \treturn { ...next, x: next.x + 1 }\n * }\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBeforeCreate?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnBeforeCreateHandler",
                  "canonicalReference": "@tldraw/editor!TLOnBeforeCreateHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onBeforeCreate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onBeforeUpdate:member",
              "docComment": "/**\n * A callback called just before a shape is updated. This method provides a last chance to modify the updated shape.\n *\n * @param prev - The previous shape.\n *\n * @param next - The next shape.\n *\n * @returns The next shape or void.\n *\n * @example\n * ```ts\n * onBeforeUpdate = (prev, next) => {\n * \tif (prev.x === next.x) {\n * \t\treturn { ...next, x: next.x + 1 }\n * \t}\n * }\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onBeforeUpdate?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnBeforeUpdateHandler",
                  "canonicalReference": "@tldraw/editor!TLOnBeforeUpdateHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onBeforeUpdate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onChildrenChange:member",
              "docComment": "/**\n * A callback called when a shape's children change.\n *\n * @param shape - The shape.\n *\n * @returns An array of shape updates, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onChildrenChange?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnChildrenChangeHandler",
                  "canonicalReference": "@tldraw/editor!TLOnChildrenChangeHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onChildrenChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onClick:member",
              "docComment": "/**\n * A callback called when a shape is clicked.\n *\n * @param shape - The shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnClickHandler",
                  "canonicalReference": "@tldraw/editor!TLOnClickHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onDoubleClick:member",
              "docComment": "/**\n * A callback called when a shape is double clicked.\n *\n * @param shape - The shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDoubleClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnDoubleClickHandler",
                  "canonicalReference": "@tldraw/editor!TLOnDoubleClickHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDoubleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onDoubleClickEdge:member",
              "docComment": "/**\n * A callback called when a shape's edge is double clicked.\n *\n * @param shape - The shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDoubleClickEdge?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnDoubleClickHandler",
                  "canonicalReference": "@tldraw/editor!TLOnDoubleClickHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDoubleClickEdge",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onDoubleClickHandle:member",
              "docComment": "/**\n * A callback called when a shape's handle is double clicked.\n *\n * @param shape - The shape.\n *\n * @param handle - The handle that is double-clicked.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDoubleClickHandle?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnDoubleClickHandleHandler",
                  "canonicalReference": "@tldraw/editor!TLOnDoubleClickHandleHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDoubleClickHandle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onDragShapesOut:member",
              "docComment": "/**\n * A callback called when some other shapes are dragged out of this one.\n *\n * @param shape - The shape.\n *\n * @param shapes - The shapes that are being dragged out.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDragShapesOut?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnDragHandler",
                  "canonicalReference": "@tldraw/editor!TLOnDragHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDragShapesOut",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onDragShapesOver:member",
              "docComment": "/**\n * A callback called when some other shapes are dragged over this one.\n *\n * @param shape - The shape.\n *\n * @param shapes - The shapes that are being dragged over this one.\n *\n * @returns An object specifying whether the shape should hint that it can receive the dragged shapes.\n *\n * @example\n * ```ts\n * onDragShapesOver = (shape, shapes) => {\n * \treturn { shouldHint: true }\n * }\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDragShapesOver?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnDragHandler",
                  "canonicalReference": "@tldraw/editor!TLOnDragHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape, {\n        shouldHint: boolean;\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDragShapesOver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onDropShapesOver:member",
              "docComment": "/**\n * A callback called when some other shapes are dropped over this one.\n *\n * @param shape - The shape.\n *\n * @param shapes - The shapes that are being dropped over this one.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDropShapesOver?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnDragHandler",
                  "canonicalReference": "@tldraw/editor!TLOnDragHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDropShapesOver",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onEditEnd:member",
              "docComment": "/**\n * A callback called when a shape finishes being editing.\n *\n * @param shape - The shape.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEditEnd?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnEditEndHandler",
                  "canonicalReference": "@tldraw/editor!TLOnEditEndHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEditEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onHandleChange:member",
              "docComment": "/**\n * A callback called when a shape's handle changes.\n *\n * @param shape - The current shape.\n *\n * @param info - An object containing the handle and whether the handle is 'precise' or not.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onHandleChange?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnHandleChangeHandler",
                  "canonicalReference": "@tldraw/editor!TLOnHandleChangeHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onHandleChange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onResize:member",
              "docComment": "/**\n * A callback called when a shape changes from a resize.\n *\n * @param shape - The shape at the start of the resize.\n *\n * @param info - Info about the resize.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onResize?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnResizeHandler",
                  "canonicalReference": "@tldraw/editor!TLOnResizeHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onResize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onResizeEnd:member",
              "docComment": "/**\n * A callback called when a shape finishes resizing.\n *\n * @param initial - The shape at the start of the resize.\n *\n * @param current - The current shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onResizeEnd?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnResizeEndHandler",
                  "canonicalReference": "@tldraw/editor!TLOnResizeEndHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onResizeEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onResizeStart:member",
              "docComment": "/**\n * A callback called when a shape starts being resized.\n *\n * @param shape - The shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onResizeStart?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnResizeStartHandler",
                  "canonicalReference": "@tldraw/editor!TLOnResizeStartHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onResizeStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onRotate:member",
              "docComment": "/**\n * A callback called when a shape changes from a rotation.\n *\n * @param initial - The shape at the start of the rotation.\n *\n * @param current - The current shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRotate?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnRotateHandler",
                  "canonicalReference": "@tldraw/editor!TLOnRotateHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRotate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onRotateEnd:member",
              "docComment": "/**\n * A callback called when a shape finishes rotating.\n *\n * @param initial - The shape at the start of the rotation.\n *\n * @param current - The current shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRotateEnd?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnRotateEndHandler",
                  "canonicalReference": "@tldraw/editor!TLOnRotateEndHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRotateEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onRotateStart:member",
              "docComment": "/**\n * A callback called when a shape starts being rotated.\n *\n * @param shape - The shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRotateStart?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnRotateStartHandler",
                  "canonicalReference": "@tldraw/editor!TLOnRotateStartHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRotateStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onTranslate:member",
              "docComment": "/**\n * A callback called when a shape changes from a translation.\n *\n * @param initial - The shape at the start of the translation.\n *\n * @param current - The current shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTranslate?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnTranslateHandler",
                  "canonicalReference": "@tldraw/editor!TLOnTranslateHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTranslate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onTranslateEnd:member",
              "docComment": "/**\n * A callback called when a shape finishes translating.\n *\n * @param initial - The shape at the start of the translation.\n *\n * @param current - The current shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTranslateEnd?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnTranslateEndHandler",
                  "canonicalReference": "@tldraw/editor!TLOnTranslateEndHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTranslateEnd",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil#onTranslateStart:member",
              "docComment": "/**\n * A callback called when a shape starts being translated.\n *\n * @param shape - The shape.\n *\n * @returns A change to apply to the shape, or void.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTranslateStart?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnTranslateStartHandler",
                  "canonicalReference": "@tldraw/editor!TLOnTranslateStartHandler:type"
                },
                {
                  "kind": "Content",
                  "text": "<Shape>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTranslateStart",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil.props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeProps",
                  "canonicalReference": "@tldraw/tlschema!ShapeProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#toBackgroundSvg:member(1)",
              "docComment": "/**\n * Get the shape's background layer as an SVG object.\n *\n * @param shape - The shape.\n *\n * @param ctx - ctx - The export context for the SVG - used for adding e.g. \\<def\\>s\n *\n * @returns An SVG element.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toBackgroundSvg?(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": ", ctx: "
                },
                {
                  "kind": "Reference",
                  "text": "SvgExportContext",
                  "canonicalReference": "@tldraw/editor!SvgExportContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ctx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "toBackgroundSvg"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!ShapeUtil#toSvg:member(1)",
              "docComment": "/**\n * Get the shape as an SVG object.\n *\n * @param shape - The shape.\n *\n * @param ctx - The export context for the SVG - used for adding e.g. \\<def\\>s\n *\n * @returns An SVG element.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toSvg?(shape: "
                },
                {
                  "kind": "Content",
                  "text": "Shape"
                },
                {
                  "kind": "Content",
                  "text": ", ctx: "
                },
                {
                  "kind": "Reference",
                  "text": "SvgExportContext",
                  "canonicalReference": "@tldraw/editor!SvgExportContext:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shape",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "ctx",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": true,
              "isAbstract": false,
              "name": "toSvg"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!ShapeUtil.type:member",
              "docComment": "/**\n * The type of the shape util, which should match the shape's type.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static type: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!SharedStyle:type",
          "docComment": "/**\n * The value of a particular {@link @tldraw/tlschema#StyleProp}.\n *\n * A `mixed` style means that in the current selection, there are lots of different values for the same style prop - e.g. a red and a blue shape are selected.\n *\n * A `shared` style means that all shapes in the selection share the same value for this style prop.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SharedStyle<T> = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly type: 'mixed';\n} | {\n    readonly type: 'shared';\n    readonly value: T;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/SharedStylesMap.ts",
          "releaseTag": "Public",
          "name": "SharedStyle",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!shortAngleDist:function(1)",
          "docComment": "/**\n * Get the short angle distance between two angles.\n *\n * @param a0 - The first angle.\n *\n * @param a1 - The second angle.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function shortAngleDist(a0: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", a1: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a0",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "a1",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "shortAngleDist"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!SIN:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "SIN: "
            },
            {
              "kind": "Content",
              "text": "(x: number) => number"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "SIN",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!snapAngle:function(1)",
          "docComment": "/**\n * Clamp rotation to even segments.\n *\n * @param r - The rotation in radians.\n *\n * @param segments - The number of segments.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function snapAngle(r: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", segments: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "r",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "segments",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "snapAngle"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!SnapLine:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SnapLine = "
            },
            {
              "kind": "Reference",
              "text": "GapsSnapLine",
              "canonicalReference": "@tldraw/editor!GapsSnapLine:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "PointsSnapLine",
              "canonicalReference": "@tldraw/editor!PointsSnapLine:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/managers/SnapManager.ts",
          "releaseTag": "Public",
          "name": "SnapLine",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!SnapManager:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SnapManager "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/managers/SnapManager.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SnapManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!SnapManager:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SnapManager` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "editor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#clear:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clear(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clear"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#currentCommonAncestor:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getCurrentCommonAncestor` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentCommonAncestor(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentCommonAncestor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#editor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "editor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getCurrentCommonAncestor:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentCommonAncestor(): "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentCommonAncestor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getLines:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLines(): "
                },
                {
                  "kind": "Reference",
                  "text": "SnapLine",
                  "canonicalReference": "@tldraw/editor!SnapLine:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getLines"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getOutlinesInPageSpace:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getOutlinesInPageSpace(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getOutlinesInPageSpace"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getSnappablePoints:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSnappablePoints(): "
                },
                {
                  "kind": "Reference",
                  "text": "SnapPoint",
                  "canonicalReference": "@tldraw/editor!SnapPoint:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSnappablePoints"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getSnappableShapes:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSnappableShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "GapNode",
                  "canonicalReference": "@tldraw/editor!~GapNode:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSnappableShapes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getSnappingHandleDelta:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSnappingHandleDelta({ handlePoint, additionalSegments, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        handlePoint: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        additionalSegments: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[][];\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "null | "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ handlePoint, additionalSegments, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSnappingHandleDelta"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getSnapPointsCache:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSnapPointsCache(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@tldraw/store\")."
                },
                {
                  "kind": "Reference",
                  "text": "ComputedCache",
                  "canonicalReference": "@tldraw/store!ComputedCache:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SnapPoint",
                  "canonicalReference": "@tldraw/editor!SnapPoint:interface"
                },
                {
                  "kind": "Content",
                  "text": "[], "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSnapPointsCache"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getSnapThreshold:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getSnapThreshold(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getSnapThreshold"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#getVisibleGaps:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVisibleGaps(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        horizontal: "
                },
                {
                  "kind": "Reference",
                  "text": "Gap",
                  "canonicalReference": "@tldraw/editor!~Gap:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        vertical: "
                },
                {
                  "kind": "Reference",
                  "text": "Gap",
                  "canonicalReference": "@tldraw/editor!~Gap:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVisibleGaps"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#lines:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getLines` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get lines(): "
                },
                {
                  "kind": "Reference",
                  "text": "SnapLine",
                  "canonicalReference": "@tldraw/editor!SnapLine:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "lines",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#outlinesInPageSpace:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getOutlinesInPageSpace` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get outlinesInPageSpace(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "outlinesInPageSpace",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#setLines:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setLines(lines: "
                },
                {
                  "kind": "Reference",
                  "text": "SnapLine",
                  "canonicalReference": "@tldraw/editor!SnapLine:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "lines",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLines"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#snappablePoints:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getSnappablePoints` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get snappablePoints(): "
                },
                {
                  "kind": "Reference",
                  "text": "SnapPoint",
                  "canonicalReference": "@tldraw/editor!SnapPoint:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snappablePoints",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#snappableShapes:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getSnappableShapes` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get snappableShapes(): "
                },
                {
                  "kind": "Reference",
                  "text": "GapNode",
                  "canonicalReference": "@tldraw/editor!~GapNode:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snappableShapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#snapPointsCache:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getSnapPointsCache` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get snapPointsCache(): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@tldraw/store\")."
                },
                {
                  "kind": "Reference",
                  "text": "ComputedCache",
                  "canonicalReference": "@tldraw/store!ComputedCache:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SnapPoint",
                  "canonicalReference": "@tldraw/editor!SnapPoint:interface"
                },
                {
                  "kind": "Content",
                  "text": "[], "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snapPointsCache",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#snapResize:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "snapResize({ initialSelectionPageBounds, dragDelta, "
                },
                {
                  "kind": "Reference",
                  "text": "handle",
                  "canonicalReference": "@tldraw/editor!~__type#handle"
                },
                {
                  "kind": "Content",
                  "text": ": originalHandle, isAspectRatioLocked, isResizingFromCenter, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        initialSelectionPageBounds: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dragDelta: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        handle: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionCorner",
                  "canonicalReference": "@tldraw/editor!SelectionCorner:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionEdge",
                  "canonicalReference": "@tldraw/editor!SelectionEdge:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        isAspectRatioLocked: boolean;\n        isResizingFromCenter: boolean;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SnapData",
                  "canonicalReference": "@tldraw/editor!~SnapData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ initialSelectionPageBounds, dragDelta, handle: originalHandle, isAspectRatioLocked, isResizingFromCenter, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 12
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "snapResize"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#snapThreshold:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getSnapThreshold` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get snapThreshold(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "snapThreshold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!SnapManager#snapTranslate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "snapTranslate({ lockedAxis, initialSelectionPageBounds, initialSelectionSnapPoints, dragDelta, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        lockedAxis: 'x' | 'y' | null;\n        initialSelectionSnapPoints: "
                },
                {
                  "kind": "Reference",
                  "text": "SnapPoint",
                  "canonicalReference": "@tldraw/editor!SnapPoint:interface"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        initialSelectionPageBounds: "
                },
                {
                  "kind": "Reference",
                  "text": "Box2d",
                  "canonicalReference": "@tldraw/editor!Box2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n        dragDelta: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SnapData",
                  "canonicalReference": "@tldraw/editor!~SnapData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ lockedAxis, initialSelectionPageBounds, initialSelectionSnapPoints, dragDelta, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "snapTranslate"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!SnapManager#visibleGaps:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getVisibleGaps` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get visibleGaps(): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        horizontal: "
                },
                {
                  "kind": "Reference",
                  "text": "Gap",
                  "canonicalReference": "@tldraw/editor!~Gap:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        vertical: "
                },
                {
                  "kind": "Reference",
                  "text": "Gap",
                  "canonicalReference": "@tldraw/editor!~Gap:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "visibleGaps",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!SnapPoint:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SnapPoint "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/managers/SnapManager.ts",
          "releaseTag": "Public",
          "name": "SnapPoint",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!SnapPoint#handle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handle?: "
                },
                {
                  "kind": "Reference",
                  "text": "SelectionCorner",
                  "canonicalReference": "@tldraw/editor!SelectionCorner:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "handle",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!SnapPoint#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!SnapPoint#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!SnapPoint#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!sortByIndex:function(1)",
          "docComment": "/**\n * Sort by index.\n *\n * @param a - An object with an index property.\n *\n * @param b - An object with an index property.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function sortByIndex<T extends "
            },
            {
              "kind": "Content",
              "text": "{\n    index: string;\n}"
            },
            {
              "kind": "Content",
              "text": ">(a: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ", b: "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "-1 | 0 | 1"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/reordering/reordering.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "a",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "b",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "sortByIndex"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Stadium2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Stadium2d extends "
            },
            {
              "kind": "Reference",
              "text": "Ellipse2d",
              "canonicalReference": "@tldraw/editor!Ellipse2d:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/geometry/Stadium2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Stadium2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Stadium2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Stadium2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        width: number;\n        height: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "config",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Stadium2d#config:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "config: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Geometry2dOptions",
                  "canonicalReference": "@tldraw/editor!~Geometry2dOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'isClosed'> & {\n        width: number;\n        height: number;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "config",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Stadium2d#getVertices:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getVertices(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getVertices"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!StateNode:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class StateNode implements "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLEventHandlers",
              "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/tools/StateNode.ts",
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "StateNode",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#_currentToolIdMask:member",
              "docComment": "/**\n * This is a hack / escape hatch that will tell the editor to report a different state as active (in `getCurrentToolId()`) when this state is active. This is usually used when a tool transitions to a child of a different state for a certain interaction and then returns to the original tool when that interaction completes; and where we would want to show the original tool as active in the UI.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_currentToolIdMask: "
                },
                {
                  "kind": "Reference",
                  "text": "Atom",
                  "canonicalReference": "@tldraw/state!Atom:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string | undefined, unknown>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_currentToolIdMask",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#_path:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "_path: "
                },
                {
                  "kind": "Reference",
                  "text": "Computed",
                  "canonicalReference": "@tldraw/state!Computed:interface"
                },
                {
                  "kind": "Content",
                  "text": "<string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "_path",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!StateNode:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StateNode` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": ", parent?: "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "editor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode.children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static children?: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "TLStateNodeConstructor",
                  "canonicalReference": "@tldraw/editor!TLStateNodeConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#currentToolIdMask:member",
              "docComment": "/**\n * @deprecated\n *\n * use `getCurrentToolIdMask()` instead\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get currentToolIdMask(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n\nset currentToolIdMask(id: string | undefined);"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentToolIdMask",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#editor:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "editor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#enter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "enter: "
                },
                {
                  "kind": "Content",
                  "text": "(info: any, from: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "enter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#exit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exit: "
                },
                {
                  "kind": "Content",
                  "text": "(info: any, from: string) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "exit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!StateNode#getCurrent:member(1)",
              "docComment": "/**\n * This node's current active child node, if any.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrent(): "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": " | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!StateNode#getCurrentToolIdMask:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCurrentToolIdMask(): "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getCurrentToolIdMask"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!StateNode#getIsActive:member(1)",
              "docComment": "/**\n * Whether this node is active.\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getIsActive(): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getIsActive"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!StateNode#getPath:member(1)",
              "docComment": "/**\n * This node's path of active state nodes\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPath(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getPath"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#handleEvent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "handleEvent: "
                },
                {
                  "kind": "Content",
                  "text": "(info: "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLEventInfo",
                  "canonicalReference": "@tldraw/editor!TLEventInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "TLPinchEventInfo",
                  "canonicalReference": "@tldraw/editor!TLPinchEventInfo:type"
                },
                {
                  "kind": "Content",
                  "text": ">) => void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "handleEvent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode.id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#initial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initial?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode.initial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static initial?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": true,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onCancel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCancel?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onCancel']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onCancel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onComplete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onComplete?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onComplete']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onComplete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onDoubleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDoubleClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onDoubleClick']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onDoubleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onEnter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onEnter?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEnterEventHandler",
                  "canonicalReference": "@tldraw/editor!TLEnterEventHandler:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onEnter",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onExit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onExit?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLExitEventHandler",
                  "canonicalReference": "@tldraw/editor!TLExitEventHandler:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onExit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onInterrupt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onInterrupt?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onInterrupt']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onInterrupt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onKeyDown:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onKeyDown?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onKeyDown']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onKeyDown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onKeyRepeat:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onKeyRepeat?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onKeyRepeat']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onKeyRepeat",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onKeyUp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onKeyUp?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onKeyUp']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onKeyUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onMiddleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMiddleClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onMiddleClick']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onMiddleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onPointerDown:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPointerDown?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onPointerDown']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onPointerDown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onPointerMove:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPointerMove?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onPointerMove']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onPointerMove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onPointerUp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPointerUp?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onPointerUp']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onPointerUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onQuadrupleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onQuadrupleClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onQuadrupleClick']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onQuadrupleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onRightClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRightClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onRightClick']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onRightClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onTripleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTripleClick?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onTripleClick']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onTripleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#onWheel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onWheel?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEventHandlers",
                  "canonicalReference": "@tldraw/editor!TLEventHandlers:interface"
                },
                {
                  "kind": "Content",
                  "text": "['onWheel']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onWheel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#parent:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "parent: "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "parent",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!StateNode#setCurrentToolIdMask:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setCurrentToolIdMask(id: "
                },
                {
                  "kind": "Content",
                  "text": "string | undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCurrentToolIdMask"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#shapeType:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shapeType?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "shapeType",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#transition:member",
              "docComment": "/**\n * Transition to a new active child state node.\n *\n * @param id - The id of the child state node to transition to.\n *\n * @param info - Any data to pass to the `onEnter` and `onExit` handlers.\n *\n * @example\n * ```ts\n * parentState.transition('childStateA')\n * parentState.transition('childStateB', { myData: 4 })\n * ```\n *\n * @public\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transition: "
                },
                {
                  "kind": "Content",
                  "text": "(id: string, info?: any) => this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "transition",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!StateNode#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "TLStateNodeType",
                  "canonicalReference": "@tldraw/editor!~TLStateNodeType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!stopEventPropagation:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "stopEventPropagation: "
            },
            {
              "kind": "Content",
              "text": "(e: any) => any"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/dom.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "stopEventPropagation",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!SVGContainer:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function SVGContainer({ children, className, ...rest }: "
            },
            {
              "kind": "Reference",
              "text": "SVGContainerProps",
              "canonicalReference": "@tldraw/editor!SVGContainerProps:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "JSX.Element",
              "canonicalReference": "@types/react!__global.JSX.Element:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/SVGContainer.tsx",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ children, className, ...rest }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "SVGContainer"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!SVGContainerProps:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type SVGContainerProps = "
            },
            {
              "kind": "Reference",
              "text": "React.HTMLAttributes",
              "canonicalReference": "@types/react!React.HTMLAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SVGElement",
              "canonicalReference": "!SVGElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/SVGContainer.tsx",
          "releaseTag": "Public",
          "name": "SVGContainerProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!SvgExportContext:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SvgExportContext "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/SvgExportContext.tsx",
          "releaseTag": "Public",
          "name": "SvgExportContext",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@tldraw/editor!SvgExportContext#addExportDef:member(1)",
              "docComment": "/**\n * Add contents to the `<defs>` section of the export SVG. Each export def should have a unique key. If multiple defs come with the same key, only one will be added.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addExportDef(def: "
                },
                {
                  "kind": "Reference",
                  "text": "SvgExportDef",
                  "canonicalReference": "@tldraw/editor!SvgExportDef:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "def",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "name": "addExportDef"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!SvgExportDef:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface SvgExportDef "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/SvgExportContext.tsx",
          "releaseTag": "Public",
          "name": "SvgExportDef",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!SvgExportDef#getElement:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getElement: "
                },
                {
                  "kind": "Content",
                  "text": "() => null | "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<null | "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]> | "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SVGElement",
                  "canonicalReference": "!SVGElement:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getElement",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 12
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!SvgExportDef#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!TAB_ID:var",
          "docComment": "/**\n * A string that is unique per browser tab\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TAB_ID: "
            },
            {
              "kind": "Content",
              "text": "string"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLSessionStateSnapshot.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TAB_ID",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!TAU:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TAU: "
            },
            {
              "kind": "Content",
              "text": "number"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TAU",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLAnimationOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLAnimationOptions = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    duration: number;\n    easing: (t: number) => number;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/Editor.ts",
          "releaseTag": "Public",
          "name": "TLAnimationOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLAnyShapeUtilConstructor:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLAnyShapeUtilConstructor = "
            },
            {
              "kind": "Reference",
              "text": "TLShapeUtilConstructor",
              "canonicalReference": "@tldraw/editor!TLShapeUtilConstructor:interface"
            },
            {
              "kind": "Content",
              "text": "<any>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/defaultShapes.ts",
          "releaseTag": "Public",
          "name": "TLAnyShapeUtilConstructor",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLBackgroundComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLBackgroundComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultBackground.tsx",
          "releaseTag": "Public",
          "name": "TLBackgroundComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLBaseBoxShape:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLBaseBoxShape = "
            },
            {
              "kind": "Reference",
              "text": "TLBaseShape",
              "canonicalReference": "@tldraw/tlschema!TLBaseShape:interface"
            },
            {
              "kind": "Content",
              "text": "<string, {\n    w: number;\n    h: number;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/BaseBoxShapeUtil.tsx",
          "releaseTag": "Public",
          "name": "TLBaseBoxShape",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLBaseEventInfo:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLBaseEventInfo "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLBaseEventInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo#altKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "altKey: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "altKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo#ctrlKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ctrlKey: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "ctrlKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo#shiftKey:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shiftKey: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shiftKey",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Reference",
                  "text": "UiEventType",
                  "canonicalReference": "@tldraw/editor!UiEventType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLBrushComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLBrushComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    brush: "
            },
            {
              "kind": "Reference",
              "text": "Box2dModel",
              "canonicalReference": "@tldraw/tlschema!Box2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    color?: string;\n    opacity?: number;\n    className?: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultBrush.tsx",
          "releaseTag": "Public",
          "name": "TLBrushComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCancelEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCancelEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLCancelEventInfo",
              "canonicalReference": "@tldraw/editor!TLCancelEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLCancelEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCancelEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCancelEventInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: 'misc';\n    name: 'cancel';\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLCancelEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLClickEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLClickEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLClickEventInfo",
              "canonicalReference": "@tldraw/editor!TLClickEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLClickEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLClickEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLClickEventInfo = "
            },
            {
              "kind": "Reference",
              "text": "TLBaseEventInfo",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    type: 'click';\n    name: "
            },
            {
              "kind": "Reference",
              "text": "TLCLickEventName",
              "canonicalReference": "@tldraw/editor!TLCLickEventName:type"
            },
            {
              "kind": "Content",
              "text": ";\n    point: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    pointerId: number;\n    button: number;\n    phase: 'down' | 'settle' | 'up';\n} & "
            },
            {
              "kind": "Reference",
              "text": "TLPointerEventTarget",
              "canonicalReference": "@tldraw/editor!TLPointerEventTarget:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLClickEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCLickEventName:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCLickEventName = "
            },
            {
              "kind": "Content",
              "text": "'double_click' | 'quadruple_click' | 'triple_click'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLCLickEventName",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCollaboratorHintComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCollaboratorHintComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    className?: string;\n    point: "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    viewport: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    zoom: number;\n    opacity?: number;\n    color: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultCollaboratorHint.tsx",
          "releaseTag": "Public",
          "name": "TLCollaboratorHintComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCommand:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCommand<Name extends "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", Data = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: 'command';\n    id: string;\n    data: Data;\n    name: Name;\n    preservesRedoStack?: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/history-types.ts",
          "releaseTag": "Public",
          "name": "TLCommand",
          "typeParameters": [
            {
              "typeParameterName": "Name",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "typeParameterName": "Data",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCommandHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCommandHandler<Data> = "
            },
            {
              "kind": "Content",
              "text": "{\n    do: (data: Data) => void;\n    undo: (data: Data) => void;\n    redo?: (data: Data) => void;\n    squash?: (prevData: Data, nextData: Data) => Data;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/history-types.ts",
          "releaseTag": "Public",
          "name": "TLCommandHandler",
          "typeParameters": [
            {
              "typeParameterName": "Data",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCompleteEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCompleteEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLCompleteEventInfo",
              "canonicalReference": "@tldraw/editor!TLCompleteEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLCompleteEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCompleteEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCompleteEventInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: 'misc';\n    name: 'complete';\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLCompleteEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLContent:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLContent "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/clipboard-types.ts",
          "releaseTag": "Public",
          "name": "TLContent",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLContent#assets:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assets: "
                },
                {
                  "kind": "Reference",
                  "text": "TLAsset",
                  "canonicalReference": "@tldraw/tlschema!TLAsset:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "assets",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLContent#rootShapeIds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rootShapeIds: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rootShapeIds",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLContent#schema:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "schema: "
                },
                {
                  "kind": "Reference",
                  "text": "SerializedSchema",
                  "canonicalReference": "@tldraw/store!SerializedSchema:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "schema",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLContent#shapes:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shapes: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShape",
                  "canonicalReference": "@tldraw/tlschema!TLShape:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shapes",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLCursorComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLCursorComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    className?: string;\n    point: null | "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    zoom: number;\n    color?: string;\n    name: null | string;\n    chatMessage: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultCursor.tsx",
          "releaseTag": "Public",
          "name": "TLCursorComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!TldrawEditor:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "TldrawEditor: "
            },
            {
              "kind": "Reference",
              "text": "React.NamedExoticComponent",
              "canonicalReference": "@types/react!React.NamedExoticComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TldrawEditorProps",
              "canonicalReference": "@tldraw/editor!TldrawEditorProps:type"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/TldrawEditor.tsx",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "TldrawEditor",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps:interface",
          "docComment": "/**\n * Base props for the {@link @tldraw/tldraw#Tldraw} and {@link TldrawEditor} components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TldrawEditorBaseProps "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/TldrawEditor.tsx",
          "releaseTag": "Public",
          "name": "TldrawEditorBaseProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#autoFocus:member",
              "docComment": "/**\n * Whether to automatically focus the editor when it mounts.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "autoFocus?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autoFocus",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#children:member",
              "docComment": "/**\n * The component's children.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#className:member",
              "docComment": "/**\n * A classname to pass to the editor's container.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "className?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "className",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#components:member",
              "docComment": "/**\n * Overrides for the editor's components, such as handles, collaborator cursors, etc.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "components?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLEditorComponents",
                  "canonicalReference": "@tldraw/editor!TLEditorComponents:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "components",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#inferDarkMode:member",
              "docComment": "/**\n * Whether to infer dark mode from the user's OS. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inferDarkMode?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inferDarkMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#initialState:member",
              "docComment": "/**\n * The editor's initial state (usually the id of the first active tool).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialState?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initialState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#onMount:member",
              "docComment": "/**\n * Called when the editor has mounted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMount?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLOnMountHandler",
                  "canonicalReference": "@tldraw/editor!TLOnMountHandler:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onMount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#shapeUtils:member",
              "docComment": "/**\n * An array of shape utils to use in the editor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shapeUtils?: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "TLAnyShapeUtilConstructor",
                  "canonicalReference": "@tldraw/editor!TLAnyShapeUtilConstructor:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "shapeUtils",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#tools:member",
              "docComment": "/**\n * An array of tools to add to the editor's state chart.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tools?: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "TLStateNodeConstructor",
                  "canonicalReference": "@tldraw/editor!TLStateNodeConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "tools",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps#user:member",
              "docComment": "/**\n * The user interacting with the editor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "user?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUser",
                  "canonicalReference": "@tldraw/editor!~TLUser:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "user",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TldrawEditorProps:type",
          "docComment": "/**\n * Props for the {@link @tldraw/tldraw#Tldraw} and {@link TldrawEditor} components.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TldrawEditorProps = "
            },
            {
              "kind": "Reference",
              "text": "TldrawEditorBaseProps",
              "canonicalReference": "@tldraw/editor!TldrawEditorBaseProps:interface"
            },
            {
              "kind": "Content",
              "text": " & ({\n    store: "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLStoreWithStatus",
              "canonicalReference": "@tldraw/editor!TLStoreWithStatus:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    store?: undefined;\n    snapshot?: "
            },
            {
              "kind": "Reference",
              "text": "StoreSnapshot",
              "canonicalReference": "@tldraw/store!StoreSnapshot:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLRecord",
              "canonicalReference": "@tldraw/tlschema!TLRecord:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    initialData?: "
            },
            {
              "kind": "Reference",
              "text": "SerializedStore",
              "canonicalReference": "@tldraw/store!SerializedStore:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLRecord",
              "canonicalReference": "@tldraw/tlschema!TLRecord:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    persistenceKey?: string;\n    sessionId?: string;\n    defaultName?: string;\n})"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/TldrawEditor.tsx",
          "releaseTag": "Public",
          "name": "TldrawEditorProps",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLEditorComponents:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLEditorComponents = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    [K in keyof "
            },
            {
              "kind": "Reference",
              "text": "BaseEditorComponents",
              "canonicalReference": "@tldraw/editor!~BaseEditorComponents:interface"
            },
            {
              "kind": "Content",
              "text": "]: "
            },
            {
              "kind": "Reference",
              "text": "BaseEditorComponents",
              "canonicalReference": "@tldraw/editor!~BaseEditorComponents:interface"
            },
            {
              "kind": "Content",
              "text": "[K] | null;\n} & "
            },
            {
              "kind": "Reference",
              "text": "ErrorComponents",
              "canonicalReference": "@tldraw/editor!~ErrorComponents:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useEditorComponents.tsx",
          "releaseTag": "Public",
          "name": "TLEditorComponents",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLEditorOptions:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLEditorOptions "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/Editor.ts",
          "releaseTag": "Public",
          "name": "TLEditorOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEditorOptions#getContainer:member",
              "docComment": "/**\n * Should return a containing html element which has all the styles applied to the editor. If not given, the body element will be used.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getContainer: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "HTMLElement",
                  "canonicalReference": "!HTMLElement:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "getContainer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEditorOptions#inferDarkMode:member",
              "docComment": "/**\n * Whether to infer dark mode from the user's system preferences. Defaults to false.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "inferDarkMode?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "inferDarkMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEditorOptions#initialState:member",
              "docComment": "/**\n * The editor's initial active tool (or other state node id).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initialState?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initialState",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEditorOptions#shapeUtils:member",
              "docComment": "/**\n * An array of shapes to use in the editor. These will be used to create and manage shapes in the editor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "shapeUtils: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeUtilConstructor",
                  "canonicalReference": "@tldraw/editor!TLShapeUtilConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLUnknownShape",
                  "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shapeUtils",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEditorOptions#store:member",
              "docComment": "/**\n * The Store instance to use for keeping the app's data. This may be prepopulated, e.g. by loading from a server or database.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "store: "
                },
                {
                  "kind": "Reference",
                  "text": "TLStore",
                  "canonicalReference": "@tldraw/tlschema!TLStore:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEditorOptions#tools:member",
              "docComment": "/**\n * An array of tools to use in the editor. These will be used to handle events and manage user interactions in the editor.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tools: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "TLStateNodeConstructor",
                  "canonicalReference": "@tldraw/editor!TLStateNodeConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tools",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEditorOptions#user:member",
              "docComment": "/**\n * A user defined externally to replace the default user.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "user?: "
                },
                {
                  "kind": "Reference",
                  "text": "TLUser",
                  "canonicalReference": "@tldraw/editor!~TLUser:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "user",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLEnterEventHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLEnterEventHandler = "
            },
            {
              "kind": "Content",
              "text": "(info: any, from: string) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLEnterEventHandler",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLErrorBoundaryProps:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLErrorBoundaryProps "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/ErrorBoundary.tsx",
          "releaseTag": "Public",
          "name": "TLErrorBoundaryProps",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLErrorBoundaryProps#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ReactNode",
                  "canonicalReference": "@types/react!React.ReactNode:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLErrorBoundaryProps#fallback:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "fallback: "
                },
                {
                  "kind": "Reference",
                  "text": "TLErrorFallbackComponent",
                  "canonicalReference": "@tldraw/editor!~TLErrorFallbackComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "fallback",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLErrorBoundaryProps#onError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onError?: "
                },
                {
                  "kind": "Content",
                  "text": "((error: unknown) => void) | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "onError",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLEventHandlers:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLEventHandlers "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLEventHandlers",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onCancel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onCancel: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCancelEvent",
                  "canonicalReference": "@tldraw/editor!TLCancelEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onCancel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onComplete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onComplete: "
                },
                {
                  "kind": "Reference",
                  "text": "TLCompleteEvent",
                  "canonicalReference": "@tldraw/editor!TLCompleteEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onComplete",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onDoubleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onDoubleClick: "
                },
                {
                  "kind": "Reference",
                  "text": "TLClickEvent",
                  "canonicalReference": "@tldraw/editor!TLClickEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onDoubleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onInterrupt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onInterrupt: "
                },
                {
                  "kind": "Reference",
                  "text": "TLInterruptEvent",
                  "canonicalReference": "@tldraw/editor!TLInterruptEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onInterrupt",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onKeyDown:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onKeyDown: "
                },
                {
                  "kind": "Reference",
                  "text": "TLKeyboardEvent",
                  "canonicalReference": "@tldraw/editor!TLKeyboardEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onKeyDown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onKeyRepeat:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onKeyRepeat: "
                },
                {
                  "kind": "Reference",
                  "text": "TLKeyboardEvent",
                  "canonicalReference": "@tldraw/editor!TLKeyboardEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onKeyRepeat",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onKeyUp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onKeyUp: "
                },
                {
                  "kind": "Reference",
                  "text": "TLKeyboardEvent",
                  "canonicalReference": "@tldraw/editor!TLKeyboardEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onKeyUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onMiddleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onMiddleClick: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPointerEvent",
                  "canonicalReference": "@tldraw/editor!TLPointerEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onMiddleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onPointerDown:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPointerDown: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPointerEvent",
                  "canonicalReference": "@tldraw/editor!TLPointerEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onPointerDown",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onPointerMove:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPointerMove: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPointerEvent",
                  "canonicalReference": "@tldraw/editor!TLPointerEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onPointerMove",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onPointerUp:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onPointerUp: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPointerEvent",
                  "canonicalReference": "@tldraw/editor!TLPointerEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onPointerUp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onQuadrupleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onQuadrupleClick: "
                },
                {
                  "kind": "Reference",
                  "text": "TLClickEvent",
                  "canonicalReference": "@tldraw/editor!TLClickEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onQuadrupleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onRightClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onRightClick: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPointerEvent",
                  "canonicalReference": "@tldraw/editor!TLPointerEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onRightClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onTripleClick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onTripleClick: "
                },
                {
                  "kind": "Reference",
                  "text": "TLClickEvent",
                  "canonicalReference": "@tldraw/editor!TLClickEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onTripleClick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventHandlers#onWheel:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "onWheel: "
                },
                {
                  "kind": "Reference",
                  "text": "TLWheelEvent",
                  "canonicalReference": "@tldraw/editor!TLWheelEvent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "onWheel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLEventInfo = "
            },
            {
              "kind": "Reference",
              "text": "TLCancelEventInfo",
              "canonicalReference": "@tldraw/editor!TLCancelEventInfo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLClickEventInfo",
              "canonicalReference": "@tldraw/editor!TLClickEventInfo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLCompleteEventInfo",
              "canonicalReference": "@tldraw/editor!TLCompleteEventInfo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLInterruptEventInfo",
              "canonicalReference": "@tldraw/editor!TLInterruptEventInfo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLKeyboardEventInfo",
              "canonicalReference": "@tldraw/editor!TLKeyboardEventInfo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLPinchEventInfo",
              "canonicalReference": "@tldraw/editor!TLPinchEventInfo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLPointerEventInfo",
              "canonicalReference": "@tldraw/editor!TLPointerEventInfo:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLWheelEventInfo",
              "canonicalReference": "@tldraw/editor!TLWheelEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 16
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLEventMap:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLEventMap "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/emit-types.ts",
          "releaseTag": "Public",
          "name": "TLEventMap",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#\"change-history\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'change-history': "
                },
                {
                  "kind": "Content",
                  "text": "[{\n        reason: 'bail';\n        markId?: string;\n    } | {\n        reason: 'push' | 'redo' | 'undo';\n    }]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"change-history\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#\"mark-history\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'mark-history': "
                },
                {
                  "kind": "Content",
                  "text": "[{\n        id: string;\n    }]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"mark-history\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#\"max-shapes\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'max-shapes': "
                },
                {
                  "kind": "Content",
                  "text": "[{\n        name: string;\n        pageId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        count: number;\n    }]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"max-shapes\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#\"stop-camera-animation\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'stop-camera-animation': "
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"stop-camera-animation\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#\"stop-following\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'stop-following': "
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"stop-following\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#change:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "change: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "HistoryEntry",
                  "canonicalReference": "@tldraw/store!HistoryEntry:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TLRecord",
                  "canonicalReference": "@tldraw/tlschema!TLRecord:type"
                },
                {
                  "kind": "Content",
                  "text": ">]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "change",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#crash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "crash: "
                },
                {
                  "kind": "Content",
                  "text": "[{\n        error: unknown;\n    }]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "crash",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#event:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "event: "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "TLEventInfo",
                  "canonicalReference": "@tldraw/editor!TLEventInfo:type"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "event",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#frame:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "frame: "
                },
                {
                  "kind": "Content",
                  "text": "[number]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "frame",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#mount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mount: "
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "mount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#tick:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tick: "
                },
                {
                  "kind": "Content",
                  "text": "[number]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "tick",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLEventMap#update:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "update: "
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "update",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLEventMapHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLEventMapHandler<T extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "TLEventMap",
              "canonicalReference": "@tldraw/editor!TLEventMap:interface"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(...args: "
            },
            {
              "kind": "Reference",
              "text": "TLEventMap",
              "canonicalReference": "@tldraw/editor!TLEventMap:interface"
            },
            {
              "kind": "Content",
              "text": "[T]) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/emit-types.ts",
          "releaseTag": "Public",
          "name": "TLEventMapHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 4,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLEventName:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLEventName = "
            },
            {
              "kind": "Content",
              "text": "'cancel' | 'complete' | 'interrupt' | 'wheel' | "
            },
            {
              "kind": "Reference",
              "text": "TLCLickEventName",
              "canonicalReference": "@tldraw/editor!TLCLickEventName:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLKeyboardEventName",
              "canonicalReference": "@tldraw/editor!TLKeyboardEventName:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLPinchEventName",
              "canonicalReference": "@tldraw/editor!TLPinchEventName:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLPointerEventName",
              "canonicalReference": "@tldraw/editor!TLPointerEventName:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLEventName",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLExitEventHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLExitEventHandler = "
            },
            {
              "kind": "Content",
              "text": "(info: any, to: string) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLExitEventHandler",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLExternalAssetContent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLExternalAssetContent = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: 'file';\n    file: "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    type: 'url';\n    url: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/external-content.ts",
          "releaseTag": "Public",
          "name": "TLExternalAssetContent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLExternalContent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLExternalContent = "
            },
            {
              "kind": "Content",
              "text": "{\n    sources?: "
            },
            {
              "kind": "Reference",
              "text": "TLExternalContentSource",
              "canonicalReference": "@tldraw/editor!TLExternalContentSource:type"
            },
            {
              "kind": "Content",
              "text": "[];\n    point?: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n} & ({\n    type: 'embed';\n    url: string;\n    embed: "
            },
            {
              "kind": "Reference",
              "text": "EmbedDefinition",
              "canonicalReference": "@tldraw/tlschema!EmbedDefinition:type"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    type: 'files';\n    files: "
            },
            {
              "kind": "Reference",
              "text": "File",
              "canonicalReference": "!File:interface"
            },
            {
              "kind": "Content",
              "text": "[];\n    ignoreParent: boolean;\n} | {\n    type: 'svg-text';\n    text: string;\n} | {\n    type: 'text';\n    text: string;\n} | {\n    type: 'url';\n    url: string;\n})"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/external-content.ts",
          "releaseTag": "Public",
          "name": "TLExternalContent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLExternalContentSource:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLExternalContentSource = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: 'error';\n    data: null | string;\n    reason: string;\n} | {\n    type: 'excalidraw';\n    data: any;\n} | {\n    type: 'text';\n    data: string;\n    subtype: 'html' | 'json' | 'text' | 'url';\n} | {\n    type: 'tldraw';\n    data: "
            },
            {
              "kind": "Reference",
              "text": "TLContent",
              "canonicalReference": "@tldraw/editor!TLContent:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/external-content.ts",
          "releaseTag": "Public",
          "name": "TLExternalContentSource",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLGridComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLGridComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    x: number;\n    y: number;\n    z: number;\n    size: number;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultGrid.tsx",
          "releaseTag": "Public",
          "name": "TLGridComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLHandleComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLHandleComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    shapeId: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    handle: "
            },
            {
              "kind": "Reference",
              "text": "TLHandle",
              "canonicalReference": "@tldraw/tlschema!TLHandle:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    zoom: number;\n    isCoarse: boolean;\n    className?: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultHandle.tsx",
          "releaseTag": "Public",
          "name": "TLHandleComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLHandlesComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLHandlesComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    className?: string;\n    children: any;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultHandles.tsx",
          "releaseTag": "Public",
          "name": "TLHandlesComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLHistoryEntry:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLHistoryEntry = "
            },
            {
              "kind": "Reference",
              "text": "TLCommand",
              "canonicalReference": "@tldraw/editor!TLCommand:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLHistoryMark",
              "canonicalReference": "@tldraw/editor!TLHistoryMark:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/history-types.ts",
          "releaseTag": "Public",
          "name": "TLHistoryEntry",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLHistoryMark:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLHistoryMark = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: 'STOP';\n    id: string;\n    onUndo: boolean;\n    onRedo: boolean;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/history-types.ts",
          "releaseTag": "Public",
          "name": "TLHistoryMark",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLHoveredShapeIndicatorComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLHoveredShapeIndicatorComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    shapeId: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultHoveredShapeIndicator.tsx",
          "releaseTag": "Public",
          "name": "TLHoveredShapeIndicatorComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLInFrontOfTheCanvas:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLInFrontOfTheCanvas = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<object>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultInFrontOfTheCanvas.tsx",
          "releaseTag": "Public",
          "name": "TLInFrontOfTheCanvas",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLInterruptEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLInterruptEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLInterruptEventInfo",
              "canonicalReference": "@tldraw/editor!TLInterruptEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLInterruptEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLInterruptEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLInterruptEventInfo = "
            },
            {
              "kind": "Content",
              "text": "{\n    type: 'misc';\n    name: 'interrupt';\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLInterruptEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLKeyboardEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLKeyboardEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLKeyboardEventInfo",
              "canonicalReference": "@tldraw/editor!TLKeyboardEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLKeyboardEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLKeyboardEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLKeyboardEventInfo = "
            },
            {
              "kind": "Reference",
              "text": "TLBaseEventInfo",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    type: 'keyboard';\n    name: "
            },
            {
              "kind": "Reference",
              "text": "TLKeyboardEventName",
              "canonicalReference": "@tldraw/editor!TLKeyboardEventName:type"
            },
            {
              "kind": "Content",
              "text": ";\n    key: string;\n    code: string;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLKeyboardEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLKeyboardEventName:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLKeyboardEventName = "
            },
            {
              "kind": "Content",
              "text": "'key_down' | 'key_repeat' | 'key_up'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLKeyboardEventName",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnBeforeCreateHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnBeforeCreateHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(next: T) => T | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnBeforeCreateHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnBeforeUpdateHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnBeforeUpdateHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(prev: T, next: T) => T | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnBeforeUpdateHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnChildrenChangeHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnChildrenChangeHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T) => "
            },
            {
              "kind": "Reference",
              "text": "TLShapePartial",
              "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
            },
            {
              "kind": "Content",
              "text": "[] | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnChildrenChangeHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnClickHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnClickHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T) => "
            },
            {
              "kind": "Reference",
              "text": "TLShapePartial",
              "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
            },
            {
              "kind": "Content",
              "text": "<T> | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnClickHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnDoubleClickHandleHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnDoubleClickHandleHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T, handle: "
            },
            {
              "kind": "Reference",
              "text": "TLHandle",
              "canonicalReference": "@tldraw/tlschema!TLHandle:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "TLShapePartial",
              "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
            },
            {
              "kind": "Content",
              "text": "<T> | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnDoubleClickHandleHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnDoubleClickHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnDoubleClickHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T) => "
            },
            {
              "kind": "Reference",
              "text": "TLShapePartial",
              "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
            },
            {
              "kind": "Content",
              "text": "<T> | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnDoubleClickHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnDragHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnDragHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": ", R = "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T, shapes: "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "[]) => R"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnDragHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "R",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnEditEndHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnEditEndHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnEditEndHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnHandleChangeHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnHandleChangeHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T, info: {\n    handle: "
            },
            {
              "kind": "Reference",
              "text": "TLHandle",
              "canonicalReference": "@tldraw/tlschema!TLHandle:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    isPrecise: boolean;\n    initial?: T | undefined;\n}) => "
            },
            {
              "kind": "Reference",
              "text": "TLShapePartial",
              "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
            },
            {
              "kind": "Content",
              "text": "<T> | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnHandleChangeHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnMountHandler:type",
          "docComment": "/**\n * Called when the editor has mounted.\n *\n * @param editor - The editor instance.\n *\n * @example\n * ```ts\n * <Tldraw onMount={(editor) => editor.selectAll()} />\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnMountHandler = "
            },
            {
              "kind": "Content",
              "text": "(editor: "
            },
            {
              "kind": "Reference",
              "text": "Editor",
              "canonicalReference": "@tldraw/editor!Editor:class"
            },
            {
              "kind": "Content",
              "text": ") => (() => undefined | void) | undefined | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/TldrawEditor.tsx",
          "releaseTag": "Public",
          "name": "TLOnMountHandler",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnResizeEndHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnResizeEndHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventChangeHandler",
              "canonicalReference": "@tldraw/editor!~TLEventChangeHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnResizeEndHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnResizeHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnResizeHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T, info: "
            },
            {
              "kind": "Reference",
              "text": "TLResizeInfo",
              "canonicalReference": "@tldraw/editor!TLResizeInfo:type"
            },
            {
              "kind": "Content",
              "text": "<T>) => "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLShapePartial",
              "canonicalReference": "@tldraw/tlschema!TLShapePartial:type"
            },
            {
              "kind": "Content",
              "text": "<T>, 'id' | 'type'> | undefined | void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnResizeHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnResizeStartHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnResizeStartHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventStartHandler",
              "canonicalReference": "@tldraw/editor!~TLEventStartHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnResizeStartHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnRotateEndHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnRotateEndHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventChangeHandler",
              "canonicalReference": "@tldraw/editor!~TLEventChangeHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnRotateEndHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnRotateHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnRotateHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventChangeHandler",
              "canonicalReference": "@tldraw/editor!~TLEventChangeHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnRotateHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnRotateStartHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnRotateStartHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventStartHandler",
              "canonicalReference": "@tldraw/editor!~TLEventStartHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnRotateStartHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnTheCanvas:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnTheCanvas = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<object>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultOnTheCanvas.tsx",
          "releaseTag": "Public",
          "name": "TLOnTheCanvas",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnTranslateEndHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnTranslateEndHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventChangeHandler",
              "canonicalReference": "@tldraw/editor!~TLEventChangeHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnTranslateEndHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnTranslateHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnTranslateHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventChangeHandler",
              "canonicalReference": "@tldraw/editor!~TLEventChangeHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnTranslateHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLOnTranslateStartHandler:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLOnTranslateStartHandler<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "TLEventStartHandler",
              "canonicalReference": "@tldraw/editor!~TLEventStartHandler:type"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLOnTranslateStartHandler",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLPinchEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLPinchEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLPinchEventInfo",
              "canonicalReference": "@tldraw/editor!TLPinchEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLPinchEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLPinchEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLPinchEventInfo = "
            },
            {
              "kind": "Reference",
              "text": "TLBaseEventInfo",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    type: 'pinch';\n    name: "
            },
            {
              "kind": "Reference",
              "text": "TLPinchEventName",
              "canonicalReference": "@tldraw/editor!TLPinchEventName:type"
            },
            {
              "kind": "Content",
              "text": ";\n    point: "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    delta: "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLPinchEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLPinchEventName:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLPinchEventName = "
            },
            {
              "kind": "Content",
              "text": "'pinch_end' | 'pinch_start' | 'pinch'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLPinchEventName",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLPointerEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLPointerEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLPointerEventInfo",
              "canonicalReference": "@tldraw/editor!TLPointerEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLPointerEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLPointerEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLPointerEventInfo = "
            },
            {
              "kind": "Reference",
              "text": "TLBaseEventInfo",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    type: 'pointer';\n    name: "
            },
            {
              "kind": "Reference",
              "text": "TLPointerEventName",
              "canonicalReference": "@tldraw/editor!TLPointerEventName:type"
            },
            {
              "kind": "Content",
              "text": ";\n    point: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    pointerId: number;\n    button: number;\n    isPen: boolean;\n} & "
            },
            {
              "kind": "Reference",
              "text": "TLPointerEventTarget",
              "canonicalReference": "@tldraw/editor!TLPointerEventTarget:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLPointerEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLPointerEventName:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLPointerEventName = "
            },
            {
              "kind": "Content",
              "text": "'middle_click' | 'pointer_down' | 'pointer_move' | 'pointer_up' | 'right_click'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLPointerEventName",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLPointerEventTarget:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLPointerEventTarget = "
            },
            {
              "kind": "Content",
              "text": "{\n    target: 'canvas';\n    shape?: undefined;\n} | {\n    target: 'handle';\n    shape: "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": ";\n    handle: "
            },
            {
              "kind": "Reference",
              "text": "TLHandle",
              "canonicalReference": "@tldraw/tlschema!TLHandle:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    target: 'selection';\n    handle?: "
            },
            {
              "kind": "Reference",
              "text": "TLSelectionHandle",
              "canonicalReference": "@tldraw/editor!TLSelectionHandle:type"
            },
            {
              "kind": "Content",
              "text": ";\n    shape?: undefined;\n} | {\n    target: 'shape';\n    shape: "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLPointerEventTarget",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLResizeHandle:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLResizeHandle = "
            },
            {
              "kind": "Reference",
              "text": "SelectionCorner",
              "canonicalReference": "@tldraw/editor!SelectionCorner:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SelectionEdge",
              "canonicalReference": "@tldraw/editor!SelectionEdge:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/selection-types.ts",
          "releaseTag": "Public",
          "name": "TLResizeHandle",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLResizeInfo:type",
          "docComment": "/**\n * Info about a resize.\n *\n * @param newPoint - The new local position of the shape.\n *\n * @param handle - The handle being dragged.\n *\n * @param mode - The type of resize.\n *\n * @param scaleX - The scale in the x-axis.\n *\n * @param scaleY - The scale in the y-axis.\n *\n * @param initialBounds - The bounds of the shape at the start of the resize.\n *\n * @param initialShape - The shape at the start of the resize.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLResizeInfo<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Content",
              "text": "{\n    newPoint: "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    handle: "
            },
            {
              "kind": "Reference",
              "text": "TLResizeHandle",
              "canonicalReference": "@tldraw/editor!TLResizeHandle:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mode: "
            },
            {
              "kind": "Reference",
              "text": "TLResizeMode",
              "canonicalReference": "@tldraw/editor!TLResizeMode:type"
            },
            {
              "kind": "Content",
              "text": ";\n    scaleX: number;\n    scaleY: number;\n    initialBounds: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    initialShape: T;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLResizeInfo",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLResizeMode:type",
          "docComment": "/**\n * The type of resize.\n *\n * 'scale_shape' - The shape is being scaled, usually as part of a larger selection.\n *\n * 'resize_bounds' - The user is directly manipulating an individual shape's bounds using a resize handle. It is up to shape util implementers to decide how they want to handle the two situations.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLResizeMode = "
            },
            {
              "kind": "Content",
              "text": "'resize_bounds' | 'scale_shape'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLResizeMode",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLResizeShapeOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLResizeShapeOptions = "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    initialBounds: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    scaleOrigin: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    scaleAxisRotation: number;\n    initialShape: "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": ";\n    initialPageTransform: "
            },
            {
              "kind": "Reference",
              "text": "MatLike",
              "canonicalReference": "@tldraw/editor!~MatLike:type"
            },
            {
              "kind": "Content",
              "text": ";\n    dragHandle: "
            },
            {
              "kind": "Reference",
              "text": "TLResizeHandle",
              "canonicalReference": "@tldraw/editor!TLResizeHandle:type"
            },
            {
              "kind": "Content",
              "text": ";\n    mode: "
            },
            {
              "kind": "Reference",
              "text": "TLResizeMode",
              "canonicalReference": "@tldraw/editor!TLResizeMode:type"
            },
            {
              "kind": "Content",
              "text": ";\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/Editor.ts",
          "releaseTag": "Public",
          "name": "TLResizeShapeOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 15
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLRotationSnapshot:type",
          "docComment": "/**\n * Info about a rotation that can be applied to the editor's selected shapes.\n *\n * @param selectionPageCenter - The center of the selection in page coordinates\n *\n * @param initialCursorAngle - The angle of the cursor relative to the selection center when the rotation started\n *\n * @param initialSelectionRotation - The rotation of the selection when the rotation started\n *\n * @param shapeSnapshots - Info about each shape that is being rotated\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLRotationSnapshot = "
            },
            {
              "kind": "Content",
              "text": "{\n    selectionPageCenter: "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    initialCursorAngle: number;\n    initialSelectionRotation: number;\n    shapeSnapshots: {\n        shape: "
            },
            {
              "kind": "Reference",
              "text": "TLShape",
              "canonicalReference": "@tldraw/tlschema!TLShape:type"
            },
            {
              "kind": "Content",
              "text": ";\n        initialPagePoint: "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    }[];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/rotation.ts",
          "releaseTag": "Public",
          "name": "TLRotationSnapshot",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLScribbleComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLScribbleComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    scribble: "
            },
            {
              "kind": "Reference",
              "text": "TLScribble",
              "canonicalReference": "@tldraw/tlschema!TLScribble:type"
            },
            {
              "kind": "Content",
              "text": ";\n    zoom: number;\n    color?: string;\n    opacity?: number;\n    className?: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultScribble.tsx",
          "releaseTag": "Public",
          "name": "TLScribbleComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLSelectionBackgroundComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLSelectionBackgroundComponent = "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    bounds: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    rotation: number;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSelectionBackground.tsx",
          "releaseTag": "Public",
          "name": "TLSelectionBackgroundComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLSelectionForegroundComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLSelectionForegroundComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    bounds: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    rotation: number;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSelectionForeground.tsx",
          "releaseTag": "Public",
          "name": "TLSelectionForegroundComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLSelectionHandle:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLSelectionHandle = "
            },
            {
              "kind": "Reference",
              "text": "RotateCorner",
              "canonicalReference": "@tldraw/editor!RotateCorner:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SelectionCorner",
              "canonicalReference": "@tldraw/editor!SelectionCorner:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SelectionEdge",
              "canonicalReference": "@tldraw/editor!SelectionEdge:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/selection-types.ts",
          "releaseTag": "Public",
          "name": "TLSelectionHandle",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot:interface",
          "docComment": "/**\n * The state of the editor instance, not including any document state.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLSessionStateSnapshot "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLSessionStateSnapshot.ts",
          "releaseTag": "Public",
          "name": "TLSessionStateSnapshot",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#currentPageId:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "currentPageId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "currentPageId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#exportBackground:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exportBackground: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "exportBackground",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#isDebugMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDebugMode: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isDebugMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#isFocusMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isFocusMode: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isFocusMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#isGridMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isGridMode: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isGridMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#isToolLocked:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isToolLocked: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isToolLocked",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#pageStates:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pageStates: "
                },
                {
                  "kind": "Reference",
                  "text": "Array",
                  "canonicalReference": "!Array:interface"
                },
                {
                  "kind": "Content",
                  "text": "<{\n        pageId: "
                },
                {
                  "kind": "Reference",
                  "text": "TLPageId",
                  "canonicalReference": "@tldraw/tlschema!TLPageId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        camera: {\n            x: number;\n            y: number;\n            z: number;\n        };\n        selectedShapeIds: "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": "[];\n        focusedGroupId: null | "
                },
                {
                  "kind": "Reference",
                  "text": "TLShapeId",
                  "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pageStates",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLSessionStateSnapshot#version:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "version: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLShapeIndicatorComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLShapeIndicatorComponent = "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    id: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": ";\n    color?: string | undefined;\n    opacity?: number;\n    className?: string;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/ShapeIndicator.tsx",
          "releaseTag": "Public",
          "name": "TLShapeIndicatorComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLShapeUtilCanvasSvgDef:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLShapeUtilCanvasSvgDef "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLShapeUtilCanvasSvgDef",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLShapeUtilCanvasSvgDef#component:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "component: "
                },
                {
                  "kind": "Reference",
                  "text": "React.ComponentType",
                  "canonicalReference": "@types/react!React.ComponentType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "component",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLShapeUtilCanvasSvgDef#key:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "key: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLShapeUtilConstructor:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLShapeUtilConstructor<T extends "
            },
            {
              "kind": "Reference",
              "text": "TLUnknownShape",
              "canonicalReference": "@tldraw/tlschema!TLUnknownShape:type"
            },
            {
              "kind": "Content",
              "text": ", U extends "
            },
            {
              "kind": "Reference",
              "text": "ShapeUtil",
              "canonicalReference": "@tldraw/editor!ShapeUtil:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ShapeUtil",
              "canonicalReference": "@tldraw/editor!ShapeUtil:class"
            },
            {
              "kind": "Content",
              "text": "<T>"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "U",
              "constraintTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "defaultTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              }
            }
          ],
          "name": "TLShapeUtilConstructor",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "ConstructSignature",
              "canonicalReference": "@tldraw/editor!TLShapeUtilConstructor:new(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "new (editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "U"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "editor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLShapeUtilConstructor#migrations:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "migrations?: "
                },
                {
                  "kind": "Reference",
                  "text": "Migrations",
                  "canonicalReference": "@tldraw/store!Migrations:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "migrations",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLShapeUtilConstructor#props:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "props?: "
                },
                {
                  "kind": "Reference",
                  "text": "ShapeProps",
                  "canonicalReference": "@tldraw/tlschema!ShapeProps:type"
                },
                {
                  "kind": "Content",
                  "text": "<T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "props",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLShapeUtilConstructor#type:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "type: "
                },
                {
                  "kind": "Content",
                  "text": "T['type']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLShapeUtilFlag:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLShapeUtilFlag<T> = "
            },
            {
              "kind": "Content",
              "text": "(shape: T) => boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/shapes/ShapeUtil.ts",
          "releaseTag": "Public",
          "name": "TLShapeUtilFlag",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLSnapLineComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLSnapLineComponent = "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<{\n    className?: string;\n    line: "
            },
            {
              "kind": "Reference",
              "text": "SnapLine",
              "canonicalReference": "@tldraw/editor!SnapLine:type"
            },
            {
              "kind": "Content",
              "text": ";\n    zoom: number;\n}>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSnapLine.tsx",
          "releaseTag": "Public",
          "name": "TLSnapLineComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLSpinnerComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLSpinnerComponent = "
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": "<object>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/components/default-components/DefaultSpinner.tsx",
          "releaseTag": "Public",
          "name": "TLSpinnerComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLStateNodeConstructor:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLStateNodeConstructor "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/tools/StateNode.ts",
          "releaseTag": "Public",
          "name": "TLStateNodeConstructor",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "ConstructSignature",
              "canonicalReference": "@tldraw/editor!TLStateNodeConstructor:new(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "new (editor: "
                },
                {
                  "kind": "Reference",
                  "text": "Editor",
                  "canonicalReference": "@tldraw/editor!Editor:class"
                },
                {
                  "kind": "Content",
                  "text": ", parent?: "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "StateNode",
                  "canonicalReference": "@tldraw/editor!StateNode:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "editor",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "parent",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLStateNodeConstructor#children:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "children?: "
                },
                {
                  "kind": "Content",
                  "text": "() => "
                },
                {
                  "kind": "Reference",
                  "text": "TLStateNodeConstructor",
                  "canonicalReference": "@tldraw/editor!TLStateNodeConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "children",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLStateNodeConstructor#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLStateNodeConstructor#initial:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "initial?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "initial",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLStoreEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLStoreEventInfo = "
            },
            {
              "kind": "Reference",
              "text": "HistoryEntry",
              "canonicalReference": "@tldraw/store!HistoryEntry:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLRecord",
              "canonicalReference": "@tldraw/tlschema!TLRecord:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/createTLStore.ts",
          "releaseTag": "Public",
          "name": "TLStoreEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLStoreOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLStoreOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    initialData?: "
            },
            {
              "kind": "Reference",
              "text": "SerializedStore",
              "canonicalReference": "@tldraw/store!SerializedStore:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLRecord",
              "canonicalReference": "@tldraw/tlschema!TLRecord:type"
            },
            {
              "kind": "Content",
              "text": ">;\n    defaultName?: string;\n} & ({\n    schema?: "
            },
            {
              "kind": "Reference",
              "text": "StoreSchema",
              "canonicalReference": "@tldraw/store!StoreSchema:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLRecord",
              "canonicalReference": "@tldraw/tlschema!TLRecord:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TLStoreProps",
              "canonicalReference": "@tldraw/tlschema!TLStoreProps:type"
            },
            {
              "kind": "Content",
              "text": ">;\n} | {\n    shapeUtils?: readonly "
            },
            {
              "kind": "Reference",
              "text": "TLAnyShapeUtilConstructor",
              "canonicalReference": "@tldraw/editor!TLAnyShapeUtilConstructor:type"
            },
            {
              "kind": "Content",
              "text": "[];\n})"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/createTLStore.ts",
          "releaseTag": "Public",
          "name": "TLStoreOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLStoreWithStatus:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLStoreWithStatus = "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly status: 'error';\n    readonly store?: undefined;\n    readonly error: "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";\n} | {\n    readonly status: 'loading';\n    readonly store?: undefined;\n    readonly error?: undefined;\n} | {\n    readonly status: 'not-synced';\n    readonly store: "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": ";\n    readonly error?: undefined;\n} | {\n    readonly status: 'synced-local';\n    readonly store: "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": ";\n    readonly error?: undefined;\n} | {\n    readonly status: 'synced-remote';\n    readonly connectionStatus: 'offline' | 'online';\n    readonly store: "
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": ";\n    readonly error?: undefined;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/sync/StoreWithStatus.ts",
          "releaseTag": "Public",
          "name": "TLStoreWithStatus",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLSvgDefsComponent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLSvgDefsComponent = "
            },
            {
              "kind": "Reference",
              "text": "React.ComponentType",
              "canonicalReference": "@types/react!React.ComponentType:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/.tsbuild-api/lib/components/default-components/DefaultSvgDefs.d.ts",
          "releaseTag": "Public",
          "name": "TLSvgDefsComponent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLSvgOptions:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLSvgOptions = "
            },
            {
              "kind": "Content",
              "text": "{\n    bounds: "
            },
            {
              "kind": "Reference",
              "text": "Box2d",
              "canonicalReference": "@tldraw/editor!Box2d:class"
            },
            {
              "kind": "Content",
              "text": ";\n    scale: number;\n    background: boolean;\n    padding: number;\n    darkMode?: boolean;\n    preserveAspectRatio: "
            },
            {
              "kind": "Reference",
              "text": "React.SVGAttributes",
              "canonicalReference": "@types/react!React.SVGAttributes:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SVGSVGElement",
              "canonicalReference": "!SVGSVGElement:interface"
            },
            {
              "kind": "Content",
              "text": ">['preserveAspectRatio'];\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/misc-types.ts",
          "releaseTag": "Public",
          "name": "TLSvgOptions",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLTickEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLTickEvent = "
            },
            {
              "kind": "Content",
              "text": "(elapsed: number) => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLTickEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@tldraw/editor!TLUserPreferences:interface",
          "docComment": "/**\n * A user of tldraw\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface TLUserPreferences "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/config/TLUserPreferences.ts",
          "releaseTag": "Public",
          "name": "TLUserPreferences",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLUserPreferences#animationSpeed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "animationSpeed?: "
                },
                {
                  "kind": "Content",
                  "text": "null | number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "animationSpeed",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLUserPreferences#color:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "color?: "
                },
                {
                  "kind": "Content",
                  "text": "null | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "color",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLUserPreferences#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "id: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLUserPreferences#isDarkMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isDarkMode?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isDarkMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLUserPreferences#isSnapMode:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "isSnapMode?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean | null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "isSnapMode",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLUserPreferences#locale:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "locale?: "
                },
                {
                  "kind": "Content",
                  "text": "null | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "locale",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@tldraw/editor!TLUserPreferences#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "name?: "
                },
                {
                  "kind": "Content",
                  "text": "null | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLWheelEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLWheelEvent = "
            },
            {
              "kind": "Content",
              "text": "(info: "
            },
            {
              "kind": "Reference",
              "text": "TLWheelEventInfo",
              "canonicalReference": "@tldraw/editor!TLWheelEventInfo:type"
            },
            {
              "kind": "Content",
              "text": ") => void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLWheelEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!TLWheelEventInfo:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type TLWheelEventInfo = "
            },
            {
              "kind": "Reference",
              "text": "TLBaseEventInfo",
              "canonicalReference": "@tldraw/editor!TLBaseEventInfo:interface"
            },
            {
              "kind": "Content",
              "text": " & {\n    type: 'wheel';\n    name: 'wheel';\n    delta: "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n    point: "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "TLWheelEventInfo",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!toDomPrecision:function(1)",
          "docComment": "/**\n * The DOM likes values to be fixed to 3 decimal places\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toDomPrecision(v: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "v",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "toDomPrecision"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!toFixed:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toFixed(v: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "v",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "toFixed"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!toPrecision:function(1)",
          "docComment": "/**\n * Get a number to a precision.\n *\n * @param n - The number.\n *\n * @param precision - The precision.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function toPrecision(n: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", precision?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "n",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "precision",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "toPrecision"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!UiEvent:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UiEvent = "
            },
            {
              "kind": "Reference",
              "text": "TLCancelEvent",
              "canonicalReference": "@tldraw/editor!TLCancelEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLClickEvent",
              "canonicalReference": "@tldraw/editor!TLClickEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLCompleteEvent",
              "canonicalReference": "@tldraw/editor!TLCompleteEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLKeyboardEvent",
              "canonicalReference": "@tldraw/editor!TLKeyboardEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLPinchEvent",
              "canonicalReference": "@tldraw/editor!TLPinchEvent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "TLPointerEvent",
              "canonicalReference": "@tldraw/editor!TLPointerEvent:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "UiEvent",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 12
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!UiEventType:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type UiEventType = "
            },
            {
              "kind": "Content",
              "text": "'click' | 'keyboard' | 'pinch' | 'pointer' | 'wheel' | 'zoom'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/editor/types/event-types.ts",
          "releaseTag": "Public",
          "name": "UiEventType",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!uniq:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function uniq<T>(array: "
            },
            {
              "kind": "Content",
              "text": "{\n    readonly length: number;\n    readonly [n: number]: T;\n} | null | undefined"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/uniq.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "array",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "uniq"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!uniqueId:function(1)",
          "docComment": "/**\n * Generate a unique id.\n *\n * @example\n * ```ts\n * const id = uniqueId()\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function uniqueId(): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/uniqueId.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "uniqueId"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!useContainer:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useContainer(): "
            },
            {
              "kind": "Reference",
              "text": "HTMLDivElement",
              "canonicalReference": "!HTMLDivElement:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useContainer.tsx",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useContainer"
        },
        {
          "kind": "Variable",
          "canonicalReference": "@tldraw/editor!useEditor:var",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "useEditor: "
            },
            {
              "kind": "Content",
              "text": "() => "
            },
            {
              "kind": "Reference",
              "text": "Editor",
              "canonicalReference": "@tldraw/editor!Editor:class"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useEditor.ts",
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "useEditor",
          "variableTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!useIsCropping:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useIsCropping(shapeId: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useIsCropping.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "shapeId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useIsCropping"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!useIsDarkMode:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useIsDarkMode(): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useIsDarkMode.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "useIsDarkMode"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!useIsEditing:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useIsEditing(shapeId: "
            },
            {
              "kind": "Reference",
              "text": "TLShapeId",
              "canonicalReference": "@tldraw/tlschema!TLShapeId:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useIsEditing.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "shapeId",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useIsEditing"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!useSelectionEvents:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useSelectionEvents(handle: "
            },
            {
              "kind": "Reference",
              "text": "TLSelectionHandle",
              "canonicalReference": "@tldraw/editor!TLSelectionHandle:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    onPointerDown: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "PointerEventHandler",
              "canonicalReference": "@types/react!React.PointerEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n    onPointerMove: (e: "
            },
            {
              "kind": "Reference",
              "text": "React.PointerEvent",
              "canonicalReference": "@types/react!React.PointerEvent:interface"
            },
            {
              "kind": "Content",
              "text": ") => void;\n    onPointerUp: import(\"react\")."
            },
            {
              "kind": "Reference",
              "text": "PointerEventHandler",
              "canonicalReference": "@types/react!React.PointerEventHandler:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Element",
              "canonicalReference": "!Element:interface"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useSelectionEvents.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "handle",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "useSelectionEvents"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!useTLStore:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTLStore(opts: "
            },
            {
              "kind": "Reference",
              "text": "TLStoreOptions",
              "canonicalReference": "@tldraw/editor!TLStoreOptions:type"
            },
            {
              "kind": "Content",
              "text": " & {\n    snapshot?: "
            },
            {
              "kind": "Reference",
              "text": "StoreSnapshot",
              "canonicalReference": "@tldraw/store!StoreSnapshot:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "TLRecord",
              "canonicalReference": "@tldraw/tlschema!TLRecord:type"
            },
            {
              "kind": "Content",
              "text": ">;\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"@tldraw/tlschema\")."
            },
            {
              "kind": "Reference",
              "text": "TLStore",
              "canonicalReference": "@tldraw/tlschema!TLStore:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useTLStore.ts",
          "returnTypeTokenRange": {
            "startIndex": 8,
            "endIndex": 10
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "opts",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isOptional": false
            }
          ],
          "name": "useTLStore"
        },
        {
          "kind": "Function",
          "canonicalReference": "@tldraw/editor!useTransform:function(1)",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function useTransform(ref: "
            },
            {
              "kind": "Reference",
              "text": "React.RefObject",
              "canonicalReference": "@types/react!React.RefObject:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "HTMLElement",
              "canonicalReference": "!HTMLElement:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "SVGElement",
              "canonicalReference": "!SVGElement:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ", x?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", y?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", scale?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", rotate?: "
            },
            {
              "kind": "Content",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", additionalOffset?: "
            },
            {
              "kind": "Reference",
              "text": "VecLike",
              "canonicalReference": "@tldraw/editor!VecLike:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/hooks/useTransform.ts",
          "returnTypeTokenRange": {
            "startIndex": 18,
            "endIndex": 19
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "ref",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "isOptional": false
            },
            {
              "parameterName": "x",
              "parameterTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "isOptional": true
            },
            {
              "parameterName": "y",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "isOptional": true
            },
            {
              "parameterName": "scale",
              "parameterTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "isOptional": true
            },
            {
              "parameterName": "rotate",
              "parameterTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "isOptional": true
            },
            {
              "parameterName": "additionalOffset",
              "parameterTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "isOptional": true
            }
          ],
          "name": "useTransform"
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!Vec2d:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class Vec2d "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Vec2d.ts",
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "Vec2d",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@tldraw/editor!Vec2d:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `Vec2d` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(x?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#abs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abs(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Abs:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Abs(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Abs"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#add:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "add(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Add:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Add(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Add"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#addScalar:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addScalar(n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addScalar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.AddScalar:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static AddScalar(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AddScalar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#addXY:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "addXY(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.AddXY:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static AddXY(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "AddXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#angle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "angle(B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "angle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Angle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Angle(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Angle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Average:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Average(arr: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "arr",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Average"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Cast:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Cast(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cast"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#clamp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clamp(min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", max?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "clamp"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Clamp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Clamp(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ", min: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", max?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Clamp"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Clockwise:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Clockwise(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", C: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "C",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Clockwise"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#clone:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#cpr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cpr(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cpr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Cpr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Cpr(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cpr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#cross:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cross(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "cross"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Cross:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Cross(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Cross"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#dist:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dist(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dist"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Dist:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Dist(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Dist"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Dist2:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Dist2(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Dist2"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#distanceToLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "distanceToLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "distanceToLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.DistanceToLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DistanceToLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", P: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", clamp?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "P",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clamp",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DistanceToLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.DistanceToLineThroughPoint:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DistanceToLineThroughPoint(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", u: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", P: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "P",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DistanceToLineThroughPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#div:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "div(t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "div"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Div:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Div(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Div"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#divV:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "divV(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "divV"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.DivV:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static DivV(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "DivV"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#dpr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dpr(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "dpr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Dpr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Dpr(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Dpr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#equals:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Equals:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Equals(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#equalsXY:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equalsXY(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equalsXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.EqualsXY:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static EqualsXY(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "EqualsXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.From:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static From({ x, y, z }: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2dModel",
                  "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ x, y, z }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "From"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.FromAngle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static FromAngle(r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", length?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "length",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "FromAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.FromArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static FromArray(v: "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "v",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "FromArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#len:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "len(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "len"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Len:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Len(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Len"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#len2:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "len2(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "len2"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Len2:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Len2(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Len2"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#lrp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lrp(B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "lrp"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Lrp:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Lrp(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Lrp"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Max:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Max(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Max"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Med:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Med(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Med"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Min:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Min(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Min"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#mul:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mul(t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Mul:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Mul(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", t: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "t",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Mul"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#mulV:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mulV(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "mulV"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.MulV:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static MulV(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "MulV"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.NearestPointOnLineSegment:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static NearestPointOnLineSegment(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", P: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", clamp?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "P",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "clamp",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NearestPointOnLineSegment"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.NearestPointOnLineThroughPoint:member(1)",
              "docComment": "/**\n * Get the nearest point on a line with a known unit vector that passes through point A\n * ```ts\n * Vec.nearestPointOnLineThroughPoint(A, u, Point)\n * ```\n *\n * @param A - Any point on the line\n *\n * @param u - The unit vector for the line.\n *\n * @param P - A point not on the line to test.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static NearestPointOnLineThroughPoint(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", u: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", P: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "u",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "P",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NearestPointOnLineThroughPoint"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#neg:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "neg(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "neg"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Neg:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Neg(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Neg"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#norm:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "norm(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "norm"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#nudge:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nudge(B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", distance: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "distance",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "nudge"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Nudge:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Nudge(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", distance: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "distance",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Nudge"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#per:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "per(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "per"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Per:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Per(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Per"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.PointsBetween:member(1)",
              "docComment": "/**\n * Get an array of points (with simulated pressure) between two points.\n *\n * @param A - The first point.\n *\n * @param B - The second point.\n *\n * @param steps - The number of points to return.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static PointsBetween(A: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2dModel",
                  "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2dModel",
                  "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ", steps?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "steps",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "PointsBetween"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Vec2d#pressure:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get pressure(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "pressure",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#pry:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "pry(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "pry"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Pry:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Pry(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Pry"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Rescale:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Rescale(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Rescale"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#rot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rot(r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Rot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Rot(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", r?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Rot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#rotWith:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "rotWith(C: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "C",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "rotWith"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.RotWith:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static RotWith(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", C: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", r: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "C",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "r",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "RotWith"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.ScaleWithOrigin:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ScaleWithOrigin(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", scale: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", origin: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "scale",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "origin",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ScaleWithOrigin"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#set:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(x?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", z?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "z",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#setTo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "setTo({ x, y, z }: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ x, y, z }",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#slope:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "slope(B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "slope"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Slope:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Slope(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Slope"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Snap:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Snap(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", step?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "step",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Snap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#snapToGrid:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "snapToGrid(gridSize: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "gridSize",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "snapToGrid"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.SnapToGrid:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SnapToGrid(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", gridSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "gridSize",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SnapToGrid"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#sub:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sub(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Sub:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Sub(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Sub"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#subScalar:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subScalar(n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subScalar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.SubScalar:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SubScalar(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", n: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SubScalar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#subXY:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "subXY(x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "subXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.SubXY:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static SubXY(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "x",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "y",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "SubXY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#tan:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tan(V: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "V",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "tan"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Tan:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Tan(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", B: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "B",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Tan"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#toAngle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toAngle(): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.ToAngle:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ToAngle(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ToAngle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#toArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toArray(): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.ToArray:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ToArray(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ToArray"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#toFixed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toFixed(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toFixed"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.ToFixed:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ToFixed(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", n?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "n",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ToFixed"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#toJson:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJson(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2dModel",
                  "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJson"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.ToJson:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ToJson(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "{\n        x: number;\n        y: number;\n        z: number | undefined;\n    }"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ToJson"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#toString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toString(): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toString"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.ToString:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static ToString(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ToString"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d#uni:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "uni(): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "uni"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!Vec2d.Uni:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static Uni(A: "
                },
                {
                  "kind": "Reference",
                  "text": "VecLike",
                  "canonicalReference": "@tldraw/editor!VecLike:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Vec2d",
                  "canonicalReference": "@tldraw/editor!Vec2d:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "A",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "Uni"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Vec2d#x:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "x: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "x",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Vec2d#y:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "y: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "y",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!Vec2d#z:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "z: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "z",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@tldraw/editor!VecLike:type",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type VecLike = "
            },
            {
              "kind": "Reference",
              "text": "Vec2d",
              "canonicalReference": "@tldraw/editor!Vec2d:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "Vec2dModel",
              "canonicalReference": "@tldraw/tlschema!Vec2dModel:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/primitives/Vec2d.ts",
          "releaseTag": "Public",
          "name": "VecLike",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@tldraw/editor!WeakMapCache:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class WeakMapCache<T extends "
            },
            {
              "kind": "Content",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": ", K> "
            }
          ],
          "fileUrlPath": "packages/editor/src/lib/utils/WeakMapCache.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "WeakMapCache",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!WeakMapCache#access:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "access(item: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "access"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!WeakMapCache#bust:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bust(): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "bust"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!WeakMapCache#get:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get<P extends "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">(item: "
                },
                {
                  "kind": "Content",
                  "text": "P"
                },
                {
                  "kind": "Content",
                  "text": ", cb: "
                },
                {
                  "kind": "Content",
                  "text": "(item: P) => K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "NonNullable",
                  "canonicalReference": "!NonNullable:type"
                },
                {
                  "kind": "Content",
                  "text": "<K>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "P",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "cb",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "get"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!WeakMapCache#has:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "has(item: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "has"
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!WeakMapCache#invalidate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "invalidate(item: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "invalidate"
            },
            {
              "kind": "Property",
              "canonicalReference": "@tldraw/editor!WeakMapCache#items:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "items: "
                },
                {
                  "kind": "Reference",
                  "text": "WeakMap",
                  "canonicalReference": "!WeakMap:interface"
                },
                {
                  "kind": "Content",
                  "text": "<T, K>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "items",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@tldraw/editor!WeakMapCache#set:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set(item: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", value: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "item",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            }
          ],
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
